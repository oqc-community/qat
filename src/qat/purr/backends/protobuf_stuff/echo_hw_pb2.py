# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: proto_files/echo_hw.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from google.protobuf import any_pb2 as google_dot_protobuf_dot_any__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='proto_files/echo_hw.proto',
  package='echo_hardware',
  syntax='proto3',
  serialized_options=None,
  serialized_pb=_b('\n\x19proto_files/echo_hw.proto\x12\recho_hardware\x1a\x19google/protobuf/any.proto\"\x83\x01\n\x11\x43onditionalToProb\x12>\n\x07\x65lement\x18\x01 \x03(\x0b\x32-.echo_hardware.ConditionalToProb.ElementEntry\x1a.\n\x0c\x45lementEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\x02:\x02\x38\x01\"\xa9\x01\n\x16ReadoutMitigationQubit\x12?\n\x05qubit\x18\x01 \x03(\x0b\x32\x30.echo_hardware.ReadoutMitigationQubit.QubitEntry\x1aN\n\nQubitEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12/\n\x05value\x18\x02 \x01(\x0b\x32 .echo_hardware.ConditionalToProb:\x02\x38\x01\"\\\n\x11ReadoutMitigation\x12G\n\x18readout_migitation_qubit\x18\x01 \x03(\x0b\x32%.echo_hardware.ReadoutMitigationQubit\"?\n\x08\x42\x61seBand\x12\n\n\x02id\x18\x01 \x01(\t\x12\x11\n\tfrequency\x18\x02 \x01(\x02\x12\x14\n\x0cif_frequency\x18\x03 \x01(\x02\"^\n\x06x_pi_2\x12\r\n\x05shape\x18\x01 \x01(\t\x12\r\n\x05width\x18\x02 \x01(\x02\x12\x0c\n\x04rise\x18\x03 \x01(\x02\x12\x0b\n\x03\x61mp\x18\x04 \x01(\x02\x12\x0c\n\x04\x64rag\x18\x05 \x01(\x02\x12\r\n\x05phase\x18\x06 \x01(\x02\"t\n\x07zx_pi_4\x12\r\n\x05shape\x18\x01 \x01(\t\x12\r\n\x05width\x18\x02 \x01(\x02\x12\x0c\n\x04rise\x18\x03 \x01(\x02\x12\x0b\n\x03\x61mp\x18\x04 \x01(\x02\x12\x0c\n\x04\x64rag\x18\x05 \x01(\x02\x12\r\n\x05phase\x18\x06 \x01(\x02\x12\x13\n\x0bother_qubit\x18\x07 \x01(\x05\"[\n\rpulse_measure\x12\r\n\x05shape\x18\x01 \x01(\t\x12\r\n\x05width\x18\x02 \x01(\x02\x12\x0b\n\x03\x61mp\x18\x03 \x01(\x02\x12\x11\n\tamp_setup\x18\x04 \x01(\x02\x12\x0c\n\x04rise\x18\x05 \x01(\x02\"c\n\x0fmeasure_accquir\x12\r\n\x05shape\x18\x01 \x01(\t\x12\x0c\n\x04sync\x18\x02 \x01(\x08\x12\r\n\x05width\x18\x03 \x01(\x02\x12\x0f\n\x07weights\x18\x04 \x03(\x02\x12\x13\n\x0buse_weights\x18\x05 \x01(\x02\"\xfd\x01\n\x0fPhysicalChannel\x12\n\n\x02id\x18\x01 \x01(\t\x12\x13\n\x0bsample_time\x18\x02 \x01(\x05\x12)\n\x08\x62\x61seband\x18\x03 \x01(\x0b\x32\x17.echo_hardware.BaseBand\x12\x12\n\nblock_size\x18\x04 \x01(\x05\x12\x14\n\x0cphase_offset\x18\x05 \x01(\x02\x12\x11\n\timbalance\x18\x06 \x01(\x02\x12\x17\n\x0f\x61\x63quire_allowed\x18\x07 \x01(\x08\x12#\n\x1bpulse_channel_min_frequency\x18\x08 \x01(\x02\x12#\n\x1bpulse_channel_max_frequency\x18\t \x01(\x02\"\xdb\x01\n\x0cPulseChannel\x12\x14\n\x0c\x63hannel_type\x18\x01 \x01(\t\x12\n\n\x02id\x18\x02 \x01(\t\x12\x37\n\x0fPhysicalChannel\x18\x03 \x01(\x0b\x32\x1e.echo_hardware.PhysicalChannel\x12\x11\n\tfrequency\x18\x04 \x01(\x02\x12$\n\x04\x62ias\x18\x05 \x01(\x0e\x32\x16.echo_hardware.complex\x12%\n\x05scale\x18\x06 \x01(\x0e\x32\x16.echo_hardware.complex\x12\x10\n\x08\x66ixed_if\x18\x07 \x01(\x08\"\xbc\x01\n\tResonator\x12\n\n\x02id\x18\x01 \x01(\t\x12\x37\n\x0fphysical_chanel\x18\x02 \x01(\x0b\x32\x1e.echo_hardware.PhysicalChannel\x12\x34\n\x0fmeasure_channel\x18\x03 \x01(\x0b\x32\x1b.echo_hardware.PulseChannel\x12\x34\n\x0f\x61\x63quire_channel\x18\x04 \x01(\x0b\x32\x1b.echo_hardware.PulseChannel\"\x8e\x04\n\x05Qubit\x12\r\n\x05index\x18\x01 \x01(\x05\x12\n\n\x02id\x18\x02 \x01(\t\x12\x38\n\x10physical_channel\x18\x03 \x01(\x0b\x32\x1e.echo_hardware.PhysicalChannel\x12,\n\nresonators\x18\x04 \x03(\x0b\x32\x18.echo_hardware.Resonator\x12\x32\n\rdrive_channel\x18\x05 \x01(\x0b\x32\x1b.echo_hardware.PulseChannel\x12\x16\n\x0e\x63oupled_qubits\x18\x06 \x03(\x05\x12+\n\x0bmean_z_args\x18\x07 \x01(\x0e\x32\x16.echo_hardware.complex\x12\x15\n\rdiscriminator\x18\x08 \x01(\x02\x12(\n\thw_x_pi_2\x18\t \x01(\x0b\x32\x15.echo_hardware.x_pi_2\x12\x33\n\rmeasure_pulse\x18\n \x01(\x0b\x32\x1c.echo_hardware.pulse_measure\x12\x38\n\x10measure_accquire\x18\x0b \x01(\x0b\x32\x1e.echo_hardware.measure_accquir\x12*\n\nz_map_args\x18\x0c \x01(\x0e\x32\x16.echo_hardware.complex\x12-\n\rpulse_zx_pi_4\x18\r \x03(\x0b\x32\x16.echo_hardware.zx_pi_4\"3\n\rQubitCoupling\x12\x11\n\tdirection\x18\x01 \x03(\x05\x12\x0f\n\x07quality\x18\x02 \x01(\x02\"\x9c\x03\n\x0ehardware_model\x12\x14\n\x0c\x61\x63quire_mode\x18\x01 \x01(\t\x12\x14\n\x0crepeat_count\x18\x02 \x01(\x05\x12\x1f\n\x17\x64\x65\x66\x61ult_repition_period\x18\x03 \x01(\x02\x12-\n\x0fquantum_devices\x18\x04 \x03(\x0b\x32\x14.google.protobuf.Any\x12\x33\n\x0epulse_channels\x18\x05 \x03(\x0b\x32\x1b.echo_hardware.PulseChannel\x12\x39\n\x11physical_channels\x18\x06 \x03(\x0b\x32\x1e.echo_hardware.PhysicalChannel\x12*\n\tbasebands\x18\x07 \x03(\x0b\x32\x17.echo_hardware.BaseBand\x12\x34\n\x0equbit_coupling\x18\x08 \x03(\x0b\x32\x1c.echo_hardware.QubitCoupling\x12<\n\x12readout_mitigation\x18\t \x01(\x0b\x32 .echo_hardware.ReadoutMitigation*\x1d\n\x07\x63omplex\x12\x08\n\x04real\x10\x00\x12\x08\n\x04imag\x10\x01\x62\x06proto3')
  ,
  dependencies=[google_dot_protobuf_dot_any__pb2.DESCRIPTOR,])

_COMPLEX = _descriptor.EnumDescriptor(
  name='complex',
  full_name='echo_hardware.complex',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='real', index=0, number=0,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='imag', index=1, number=1,
      serialized_options=None,
      type=None),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=2610,
  serialized_end=2639,
)
_sym_db.RegisterEnumDescriptor(_COMPLEX)

complex = enum_type_wrapper.EnumTypeWrapper(_COMPLEX)
real = 0
imag = 1



_CONDITIONALTOPROB_ELEMENTENTRY = _descriptor.Descriptor(
  name='ElementEntry',
  full_name='echo_hardware.ConditionalToProb.ElementEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='echo_hardware.ConditionalToProb.ElementEntry.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='value', full_name='echo_hardware.ConditionalToProb.ElementEntry.value', index=1,
      number=2, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=_b('8\001'),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=157,
  serialized_end=203,
)

_CONDITIONALTOPROB = _descriptor.Descriptor(
  name='ConditionalToProb',
  full_name='echo_hardware.ConditionalToProb',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='element', full_name='echo_hardware.ConditionalToProb.element', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[_CONDITIONALTOPROB_ELEMENTENTRY, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=72,
  serialized_end=203,
)


_READOUTMITIGATIONQUBIT_QUBITENTRY = _descriptor.Descriptor(
  name='QubitEntry',
  full_name='echo_hardware.ReadoutMitigationQubit.QubitEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='echo_hardware.ReadoutMitigationQubit.QubitEntry.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='value', full_name='echo_hardware.ReadoutMitigationQubit.QubitEntry.value', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=_b('8\001'),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=297,
  serialized_end=375,
)

_READOUTMITIGATIONQUBIT = _descriptor.Descriptor(
  name='ReadoutMitigationQubit',
  full_name='echo_hardware.ReadoutMitigationQubit',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='qubit', full_name='echo_hardware.ReadoutMitigationQubit.qubit', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[_READOUTMITIGATIONQUBIT_QUBITENTRY, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=206,
  serialized_end=375,
)


_READOUTMITIGATION = _descriptor.Descriptor(
  name='ReadoutMitigation',
  full_name='echo_hardware.ReadoutMitigation',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='readout_migitation_qubit', full_name='echo_hardware.ReadoutMitigation.readout_migitation_qubit', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=377,
  serialized_end=469,
)


_BASEBAND = _descriptor.Descriptor(
  name='BaseBand',
  full_name='echo_hardware.BaseBand',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='echo_hardware.BaseBand.id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='frequency', full_name='echo_hardware.BaseBand.frequency', index=1,
      number=2, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='if_frequency', full_name='echo_hardware.BaseBand.if_frequency', index=2,
      number=3, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=471,
  serialized_end=534,
)


_X_PI_2 = _descriptor.Descriptor(
  name='x_pi_2',
  full_name='echo_hardware.x_pi_2',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='shape', full_name='echo_hardware.x_pi_2.shape', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='width', full_name='echo_hardware.x_pi_2.width', index=1,
      number=2, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='rise', full_name='echo_hardware.x_pi_2.rise', index=2,
      number=3, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='amp', full_name='echo_hardware.x_pi_2.amp', index=3,
      number=4, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='drag', full_name='echo_hardware.x_pi_2.drag', index=4,
      number=5, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='phase', full_name='echo_hardware.x_pi_2.phase', index=5,
      number=6, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=536,
  serialized_end=630,
)


_ZX_PI_4 = _descriptor.Descriptor(
  name='zx_pi_4',
  full_name='echo_hardware.zx_pi_4',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='shape', full_name='echo_hardware.zx_pi_4.shape', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='width', full_name='echo_hardware.zx_pi_4.width', index=1,
      number=2, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='rise', full_name='echo_hardware.zx_pi_4.rise', index=2,
      number=3, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='amp', full_name='echo_hardware.zx_pi_4.amp', index=3,
      number=4, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='drag', full_name='echo_hardware.zx_pi_4.drag', index=4,
      number=5, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='phase', full_name='echo_hardware.zx_pi_4.phase', index=5,
      number=6, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='other_qubit', full_name='echo_hardware.zx_pi_4.other_qubit', index=6,
      number=7, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=632,
  serialized_end=748,
)


_PULSE_MEASURE = _descriptor.Descriptor(
  name='pulse_measure',
  full_name='echo_hardware.pulse_measure',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='shape', full_name='echo_hardware.pulse_measure.shape', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='width', full_name='echo_hardware.pulse_measure.width', index=1,
      number=2, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='amp', full_name='echo_hardware.pulse_measure.amp', index=2,
      number=3, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='amp_setup', full_name='echo_hardware.pulse_measure.amp_setup', index=3,
      number=4, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='rise', full_name='echo_hardware.pulse_measure.rise', index=4,
      number=5, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=750,
  serialized_end=841,
)


_MEASURE_ACCQUIR = _descriptor.Descriptor(
  name='measure_accquir',
  full_name='echo_hardware.measure_accquir',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='shape', full_name='echo_hardware.measure_accquir.shape', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='sync', full_name='echo_hardware.measure_accquir.sync', index=1,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='width', full_name='echo_hardware.measure_accquir.width', index=2,
      number=3, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='weights', full_name='echo_hardware.measure_accquir.weights', index=3,
      number=4, type=2, cpp_type=6, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='use_weights', full_name='echo_hardware.measure_accquir.use_weights', index=4,
      number=5, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=843,
  serialized_end=942,
)


_PHYSICALCHANNEL = _descriptor.Descriptor(
  name='PhysicalChannel',
  full_name='echo_hardware.PhysicalChannel',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='echo_hardware.PhysicalChannel.id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='sample_time', full_name='echo_hardware.PhysicalChannel.sample_time', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='baseband', full_name='echo_hardware.PhysicalChannel.baseband', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='block_size', full_name='echo_hardware.PhysicalChannel.block_size', index=3,
      number=4, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='phase_offset', full_name='echo_hardware.PhysicalChannel.phase_offset', index=4,
      number=5, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='imbalance', full_name='echo_hardware.PhysicalChannel.imbalance', index=5,
      number=6, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='acquire_allowed', full_name='echo_hardware.PhysicalChannel.acquire_allowed', index=6,
      number=7, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='pulse_channel_min_frequency', full_name='echo_hardware.PhysicalChannel.pulse_channel_min_frequency', index=7,
      number=8, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='pulse_channel_max_frequency', full_name='echo_hardware.PhysicalChannel.pulse_channel_max_frequency', index=8,
      number=9, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=945,
  serialized_end=1198,
)


_PULSECHANNEL = _descriptor.Descriptor(
  name='PulseChannel',
  full_name='echo_hardware.PulseChannel',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='channel_type', full_name='echo_hardware.PulseChannel.channel_type', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='id', full_name='echo_hardware.PulseChannel.id', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='PhysicalChannel', full_name='echo_hardware.PulseChannel.PhysicalChannel', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='frequency', full_name='echo_hardware.PulseChannel.frequency', index=3,
      number=4, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='bias', full_name='echo_hardware.PulseChannel.bias', index=4,
      number=5, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='scale', full_name='echo_hardware.PulseChannel.scale', index=5,
      number=6, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='fixed_if', full_name='echo_hardware.PulseChannel.fixed_if', index=6,
      number=7, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1201,
  serialized_end=1420,
)


_RESONATOR = _descriptor.Descriptor(
  name='Resonator',
  full_name='echo_hardware.Resonator',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='echo_hardware.Resonator.id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='physical_chanel', full_name='echo_hardware.Resonator.physical_chanel', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='measure_channel', full_name='echo_hardware.Resonator.measure_channel', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='acquire_channel', full_name='echo_hardware.Resonator.acquire_channel', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1423,
  serialized_end=1611,
)


_QUBIT = _descriptor.Descriptor(
  name='Qubit',
  full_name='echo_hardware.Qubit',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='index', full_name='echo_hardware.Qubit.index', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='id', full_name='echo_hardware.Qubit.id', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='physical_channel', full_name='echo_hardware.Qubit.physical_channel', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='resonators', full_name='echo_hardware.Qubit.resonators', index=3,
      number=4, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='drive_channel', full_name='echo_hardware.Qubit.drive_channel', index=4,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='coupled_qubits', full_name='echo_hardware.Qubit.coupled_qubits', index=5,
      number=6, type=5, cpp_type=1, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='mean_z_args', full_name='echo_hardware.Qubit.mean_z_args', index=6,
      number=7, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='discriminator', full_name='echo_hardware.Qubit.discriminator', index=7,
      number=8, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='hw_x_pi_2', full_name='echo_hardware.Qubit.hw_x_pi_2', index=8,
      number=9, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='measure_pulse', full_name='echo_hardware.Qubit.measure_pulse', index=9,
      number=10, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='measure_accquire', full_name='echo_hardware.Qubit.measure_accquire', index=10,
      number=11, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='z_map_args', full_name='echo_hardware.Qubit.z_map_args', index=11,
      number=12, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='pulse_zx_pi_4', full_name='echo_hardware.Qubit.pulse_zx_pi_4', index=12,
      number=13, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1614,
  serialized_end=2140,
)


_QUBITCOUPLING = _descriptor.Descriptor(
  name='QubitCoupling',
  full_name='echo_hardware.QubitCoupling',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='direction', full_name='echo_hardware.QubitCoupling.direction', index=0,
      number=1, type=5, cpp_type=1, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='quality', full_name='echo_hardware.QubitCoupling.quality', index=1,
      number=2, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2142,
  serialized_end=2193,
)


_HARDWARE_MODEL = _descriptor.Descriptor(
  name='hardware_model',
  full_name='echo_hardware.hardware_model',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='acquire_mode', full_name='echo_hardware.hardware_model.acquire_mode', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='repeat_count', full_name='echo_hardware.hardware_model.repeat_count', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='default_repition_period', full_name='echo_hardware.hardware_model.default_repition_period', index=2,
      number=3, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='quantum_devices', full_name='echo_hardware.hardware_model.quantum_devices', index=3,
      number=4, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='pulse_channels', full_name='echo_hardware.hardware_model.pulse_channels', index=4,
      number=5, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='physical_channels', full_name='echo_hardware.hardware_model.physical_channels', index=5,
      number=6, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='basebands', full_name='echo_hardware.hardware_model.basebands', index=6,
      number=7, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='qubit_coupling', full_name='echo_hardware.hardware_model.qubit_coupling', index=7,
      number=8, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='readout_mitigation', full_name='echo_hardware.hardware_model.readout_mitigation', index=8,
      number=9, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2196,
  serialized_end=2608,
)

_CONDITIONALTOPROB_ELEMENTENTRY.containing_type = _CONDITIONALTOPROB
_CONDITIONALTOPROB.fields_by_name['element'].message_type = _CONDITIONALTOPROB_ELEMENTENTRY
_READOUTMITIGATIONQUBIT_QUBITENTRY.fields_by_name['value'].message_type = _CONDITIONALTOPROB
_READOUTMITIGATIONQUBIT_QUBITENTRY.containing_type = _READOUTMITIGATIONQUBIT
_READOUTMITIGATIONQUBIT.fields_by_name['qubit'].message_type = _READOUTMITIGATIONQUBIT_QUBITENTRY
_READOUTMITIGATION.fields_by_name['readout_migitation_qubit'].message_type = _READOUTMITIGATIONQUBIT
_PHYSICALCHANNEL.fields_by_name['baseband'].message_type = _BASEBAND
_PULSECHANNEL.fields_by_name['PhysicalChannel'].message_type = _PHYSICALCHANNEL
_PULSECHANNEL.fields_by_name['bias'].enum_type = _COMPLEX
_PULSECHANNEL.fields_by_name['scale'].enum_type = _COMPLEX
_RESONATOR.fields_by_name['physical_chanel'].message_type = _PHYSICALCHANNEL
_RESONATOR.fields_by_name['measure_channel'].message_type = _PULSECHANNEL
_RESONATOR.fields_by_name['acquire_channel'].message_type = _PULSECHANNEL
_QUBIT.fields_by_name['physical_channel'].message_type = _PHYSICALCHANNEL
_QUBIT.fields_by_name['resonators'].message_type = _RESONATOR
_QUBIT.fields_by_name['drive_channel'].message_type = _PULSECHANNEL
_QUBIT.fields_by_name['mean_z_args'].enum_type = _COMPLEX
_QUBIT.fields_by_name['hw_x_pi_2'].message_type = _X_PI_2
_QUBIT.fields_by_name['measure_pulse'].message_type = _PULSE_MEASURE
_QUBIT.fields_by_name['measure_accquire'].message_type = _MEASURE_ACCQUIR
_QUBIT.fields_by_name['z_map_args'].enum_type = _COMPLEX
_QUBIT.fields_by_name['pulse_zx_pi_4'].message_type = _ZX_PI_4
_HARDWARE_MODEL.fields_by_name['quantum_devices'].message_type = google_dot_protobuf_dot_any__pb2._ANY
_HARDWARE_MODEL.fields_by_name['pulse_channels'].message_type = _PULSECHANNEL
_HARDWARE_MODEL.fields_by_name['physical_channels'].message_type = _PHYSICALCHANNEL
_HARDWARE_MODEL.fields_by_name['basebands'].message_type = _BASEBAND
_HARDWARE_MODEL.fields_by_name['qubit_coupling'].message_type = _QUBITCOUPLING
_HARDWARE_MODEL.fields_by_name['readout_mitigation'].message_type = _READOUTMITIGATION
DESCRIPTOR.message_types_by_name['ConditionalToProb'] = _CONDITIONALTOPROB
DESCRIPTOR.message_types_by_name['ReadoutMitigationQubit'] = _READOUTMITIGATIONQUBIT
DESCRIPTOR.message_types_by_name['ReadoutMitigation'] = _READOUTMITIGATION
DESCRIPTOR.message_types_by_name['BaseBand'] = _BASEBAND
DESCRIPTOR.message_types_by_name['x_pi_2'] = _X_PI_2
DESCRIPTOR.message_types_by_name['zx_pi_4'] = _ZX_PI_4
DESCRIPTOR.message_types_by_name['pulse_measure'] = _PULSE_MEASURE
DESCRIPTOR.message_types_by_name['measure_accquir'] = _MEASURE_ACCQUIR
DESCRIPTOR.message_types_by_name['PhysicalChannel'] = _PHYSICALCHANNEL
DESCRIPTOR.message_types_by_name['PulseChannel'] = _PULSECHANNEL
DESCRIPTOR.message_types_by_name['Resonator'] = _RESONATOR
DESCRIPTOR.message_types_by_name['Qubit'] = _QUBIT
DESCRIPTOR.message_types_by_name['QubitCoupling'] = _QUBITCOUPLING
DESCRIPTOR.message_types_by_name['hardware_model'] = _HARDWARE_MODEL
DESCRIPTOR.enum_types_by_name['complex'] = _COMPLEX
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

ConditionalToProb = _reflection.GeneratedProtocolMessageType('ConditionalToProb', (_message.Message,), dict(

  ElementEntry = _reflection.GeneratedProtocolMessageType('ElementEntry', (_message.Message,), dict(
    DESCRIPTOR = _CONDITIONALTOPROB_ELEMENTENTRY,
    __module__ = 'proto_files.echo_hw_pb2'
    # @@protoc_insertion_point(class_scope:echo_hardware.ConditionalToProb.ElementEntry)
    ))
  ,
  DESCRIPTOR = _CONDITIONALTOPROB,
  __module__ = 'proto_files.echo_hw_pb2'
  # @@protoc_insertion_point(class_scope:echo_hardware.ConditionalToProb)
  ))
_sym_db.RegisterMessage(ConditionalToProb)
_sym_db.RegisterMessage(ConditionalToProb.ElementEntry)

ReadoutMitigationQubit = _reflection.GeneratedProtocolMessageType('ReadoutMitigationQubit', (_message.Message,), dict(

  QubitEntry = _reflection.GeneratedProtocolMessageType('QubitEntry', (_message.Message,), dict(
    DESCRIPTOR = _READOUTMITIGATIONQUBIT_QUBITENTRY,
    __module__ = 'proto_files.echo_hw_pb2'
    # @@protoc_insertion_point(class_scope:echo_hardware.ReadoutMitigationQubit.QubitEntry)
    ))
  ,
  DESCRIPTOR = _READOUTMITIGATIONQUBIT,
  __module__ = 'proto_files.echo_hw_pb2'
  # @@protoc_insertion_point(class_scope:echo_hardware.ReadoutMitigationQubit)
  ))
_sym_db.RegisterMessage(ReadoutMitigationQubit)
_sym_db.RegisterMessage(ReadoutMitigationQubit.QubitEntry)

ReadoutMitigation = _reflection.GeneratedProtocolMessageType('ReadoutMitigation', (_message.Message,), dict(
  DESCRIPTOR = _READOUTMITIGATION,
  __module__ = 'proto_files.echo_hw_pb2'
  # @@protoc_insertion_point(class_scope:echo_hardware.ReadoutMitigation)
  ))
_sym_db.RegisterMessage(ReadoutMitigation)

BaseBand = _reflection.GeneratedProtocolMessageType('BaseBand', (_message.Message,), dict(
  DESCRIPTOR = _BASEBAND,
  __module__ = 'proto_files.echo_hw_pb2'
  # @@protoc_insertion_point(class_scope:echo_hardware.BaseBand)
  ))
_sym_db.RegisterMessage(BaseBand)

x_pi_2 = _reflection.GeneratedProtocolMessageType('x_pi_2', (_message.Message,), dict(
  DESCRIPTOR = _X_PI_2,
  __module__ = 'proto_files.echo_hw_pb2'
  # @@protoc_insertion_point(class_scope:echo_hardware.x_pi_2)
  ))
_sym_db.RegisterMessage(x_pi_2)

zx_pi_4 = _reflection.GeneratedProtocolMessageType('zx_pi_4', (_message.Message,), dict(
  DESCRIPTOR = _ZX_PI_4,
  __module__ = 'proto_files.echo_hw_pb2'
  # @@protoc_insertion_point(class_scope:echo_hardware.zx_pi_4)
  ))
_sym_db.RegisterMessage(zx_pi_4)

pulse_measure = _reflection.GeneratedProtocolMessageType('pulse_measure', (_message.Message,), dict(
  DESCRIPTOR = _PULSE_MEASURE,
  __module__ = 'proto_files.echo_hw_pb2'
  # @@protoc_insertion_point(class_scope:echo_hardware.pulse_measure)
  ))
_sym_db.RegisterMessage(pulse_measure)

measure_accquir = _reflection.GeneratedProtocolMessageType('measure_accquir', (_message.Message,), dict(
  DESCRIPTOR = _MEASURE_ACCQUIR,
  __module__ = 'proto_files.echo_hw_pb2'
  # @@protoc_insertion_point(class_scope:echo_hardware.measure_accquir)
  ))
_sym_db.RegisterMessage(measure_accquir)

PhysicalChannel = _reflection.GeneratedProtocolMessageType('PhysicalChannel', (_message.Message,), dict(
  DESCRIPTOR = _PHYSICALCHANNEL,
  __module__ = 'proto_files.echo_hw_pb2'
  # @@protoc_insertion_point(class_scope:echo_hardware.PhysicalChannel)
  ))
_sym_db.RegisterMessage(PhysicalChannel)

PulseChannel = _reflection.GeneratedProtocolMessageType('PulseChannel', (_message.Message,), dict(
  DESCRIPTOR = _PULSECHANNEL,
  __module__ = 'proto_files.echo_hw_pb2'
  # @@protoc_insertion_point(class_scope:echo_hardware.PulseChannel)
  ))
_sym_db.RegisterMessage(PulseChannel)

Resonator = _reflection.GeneratedProtocolMessageType('Resonator', (_message.Message,), dict(
  DESCRIPTOR = _RESONATOR,
  __module__ = 'proto_files.echo_hw_pb2'
  # @@protoc_insertion_point(class_scope:echo_hardware.Resonator)
  ))
_sym_db.RegisterMessage(Resonator)

Qubit = _reflection.GeneratedProtocolMessageType('Qubit', (_message.Message,), dict(
  DESCRIPTOR = _QUBIT,
  __module__ = 'proto_files.echo_hw_pb2'
  # @@protoc_insertion_point(class_scope:echo_hardware.Qubit)
  ))
_sym_db.RegisterMessage(Qubit)

QubitCoupling = _reflection.GeneratedProtocolMessageType('QubitCoupling', (_message.Message,), dict(
  DESCRIPTOR = _QUBITCOUPLING,
  __module__ = 'proto_files.echo_hw_pb2'
  # @@protoc_insertion_point(class_scope:echo_hardware.QubitCoupling)
  ))
_sym_db.RegisterMessage(QubitCoupling)

hardware_model = _reflection.GeneratedProtocolMessageType('hardware_model', (_message.Message,), dict(
  DESCRIPTOR = _HARDWARE_MODEL,
  __module__ = 'proto_files.echo_hw_pb2'
  # @@protoc_insertion_point(class_scope:echo_hardware.hardware_model)
  ))
_sym_db.RegisterMessage(hardware_model)


_CONDITIONALTOPROB_ELEMENTENTRY._options = None
_READOUTMITIGATIONQUBIT_QUBITENTRY._options = None
# @@protoc_insertion_point(module_scope)
