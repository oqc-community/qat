name: Generate prelease
on:
  push:
    branches:
      - main

concurrency:
  group: prelease
  cancel-in-progress: false

permissions:
  contents: write

env:
  PYTHON_VERSION: "3.10"

jobs:
  publish-internal-package:
    name: Build and publish internal package
    runs-on:
      group: gha-oqc-tech
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'poetry'

      - name: Install dependencies
        run: |
          poetry sync

      - name: Set poetry repository config
        run: |
          poetry config repositories.internal ${{ vars.INTERNAL_PYPI_URL }}
          poetry config http-basic.internal ${{ secrets.INTERNAL_PYPI_USERNAME }} ${{ secrets.INTERNAL_PYPI_PASSWORD }}

      - name: Poetry publish
        run: |
          poetry publish --build --repository internal

      - name: Output poetry version
        id: version
        run: |
          latest_tag=$(git tag --list | grep -E '^[0-9]+\.[0-9]+\.[0-9]+$' | sort -V | tail -n1)
          echo "latest_tag=$latest_tag" >> $GITHUB_OUTPUT
          echo "version=$(poetry version -s)" >> $GITHUB_OUTPUT
          echo $latest_tag

      - name: Create release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create ${{ steps.version.outputs.version }} ./dist/* \
            --title ${{ steps.version.outputs.version }} \
            --generate-notes \
            --notes-start-tag ${{ steps.version.outputs.latest_tag }} \
            --prerelease
