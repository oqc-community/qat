Search.setIndex({"docnames": ["coc", "contribute", "index", "license", "modules", "qat", "qat.purr", "qat.purr.backends", "qat.purr.backends.calibrations", "qat.purr.backends.calibrations.remote", "qat.purr.backends.echo", "qat.purr.backends.live", "qat.purr.backends.live_devices", "qat.purr.backends.qblox", "qat.purr.backends.qblox.codegen", "qat.purr.backends.qblox.config", "qat.purr.backends.qblox.constants", "qat.purr.backends.qblox.device", "qat.purr.backends.qblox.ir", "qat.purr.backends.qblox.live", "qat.purr.backends.qiskit_simulator", "qat.purr.backends.realtime_chip_simulator", "qat.purr.backends.utilities", "qat.purr.backends.verification", "qat.purr.compiler", "qat.purr.compiler.builders", "qat.purr.compiler.caches", "qat.purr.compiler.config", "qat.purr.compiler.devices", "qat.purr.compiler.emitter", "qat.purr.compiler.error_mitigation", "qat.purr.compiler.error_mitigation.readout_mitigation", "qat.purr.compiler.execution", "qat.purr.compiler.experimental", "qat.purr.compiler.experimental.frontends", "qat.purr.compiler.frontends", "qat.purr.compiler.hardware_models", "qat.purr.compiler.instructions", "qat.purr.compiler.interrupt", "qat.purr.compiler.metrics", "qat.purr.compiler.optimisers", "qat.purr.compiler.runtime", "qat.purr.compiler.waveforms", "qat.purr.integrations", "qat.purr.integrations.features", "qat.purr.integrations.qasm", "qat.purr.integrations.qir", "qat.purr.integrations.qiskit", "qat.purr.integrations.tket", "qat.purr.utils", "qat.purr.utils.benchmarking", "qat.purr.utils.logger", "qat.purr.utils.logging_utils", "qat.purr.utils.serializer", "qat.qat"], "filenames": ["coc.rst", "contribute.rst", "index.rst", "license.rst", "modules.rst", "qat.rst", "qat.purr.rst", "qat.purr.backends.rst", "qat.purr.backends.calibrations.rst", "qat.purr.backends.calibrations.remote.rst", "qat.purr.backends.echo.rst", "qat.purr.backends.live.rst", "qat.purr.backends.live_devices.rst", "qat.purr.backends.qblox.rst", "qat.purr.backends.qblox.codegen.rst", "qat.purr.backends.qblox.config.rst", "qat.purr.backends.qblox.constants.rst", "qat.purr.backends.qblox.device.rst", "qat.purr.backends.qblox.ir.rst", "qat.purr.backends.qblox.live.rst", "qat.purr.backends.qiskit_simulator.rst", "qat.purr.backends.realtime_chip_simulator.rst", "qat.purr.backends.utilities.rst", "qat.purr.backends.verification.rst", "qat.purr.compiler.rst", "qat.purr.compiler.builders.rst", "qat.purr.compiler.caches.rst", "qat.purr.compiler.config.rst", "qat.purr.compiler.devices.rst", "qat.purr.compiler.emitter.rst", "qat.purr.compiler.error_mitigation.rst", "qat.purr.compiler.error_mitigation.readout_mitigation.rst", "qat.purr.compiler.execution.rst", "qat.purr.compiler.experimental.rst", "qat.purr.compiler.experimental.frontends.rst", "qat.purr.compiler.frontends.rst", "qat.purr.compiler.hardware_models.rst", "qat.purr.compiler.instructions.rst", "qat.purr.compiler.interrupt.rst", "qat.purr.compiler.metrics.rst", "qat.purr.compiler.optimisers.rst", "qat.purr.compiler.runtime.rst", "qat.purr.compiler.waveforms.rst", "qat.purr.integrations.rst", "qat.purr.integrations.features.rst", "qat.purr.integrations.qasm.rst", "qat.purr.integrations.qir.rst", "qat.purr.integrations.qiskit.rst", "qat.purr.integrations.tket.rst", "qat.purr.utils.rst", "qat.purr.utils.benchmarking.rst", "qat.purr.utils.logger.rst", "qat.purr.utils.logging_utils.rst", "qat.purr.utils.serializer.rst", "qat.qat.rst"], "titles": ["Code of Conduct", "Contributing to QAT", "Installation", "License", "QAT", "qat package", "qat.purr package", "qat.purr.backends package", "qat.purr.backends.calibrations package", "qat.purr.backends.calibrations.remote module", "qat.purr.backends.echo module", "qat.purr.backends.live module", "qat.purr.backends.live_devices module", "qat.purr.backends.qblox package", "qat.purr.backends.qblox.codegen module", "qat.purr.backends.qblox.config module", "qat.purr.backends.qblox.constants module", "qat.purr.backends.qblox.device module", "qat.purr.backends.qblox.ir module", "qat.purr.backends.qblox.live module", "qat.purr.backends.qiskit_simulator module", "qat.purr.backends.realtime_chip_simulator module", "qat.purr.backends.utilities module", "qat.purr.backends.verification module", "qat.purr.compiler package", "qat.purr.compiler.builders module", "qat.purr.compiler.caches module", "qat.purr.compiler.config module", "qat.purr.compiler.devices module", "qat.purr.compiler.emitter module", "qat.purr.compiler.error_mitigation package", "qat.purr.compiler.error_mitigation.readout_mitigation module", "qat.purr.compiler.execution module", "qat.purr.compiler.experimental package", "qat.purr.compiler.experimental.frontends module", "qat.purr.compiler.frontends module", "qat.purr.compiler.hardware_models module", "qat.purr.compiler.instructions module", "qat.purr.compiler.interrupt module", "qat.purr.compiler.metrics module", "qat.purr.compiler.optimisers module", "qat.purr.compiler.runtime module", "qat.purr.compiler.waveforms module", "qat.purr.integrations package", "qat.purr.integrations.features module", "qat.purr.integrations.qasm module", "qat.purr.integrations.qir module", "qat.purr.integrations.qiskit module", "qat.purr.integrations.tket module", "qat.purr.utils package", "qat.purr.utils.benchmarking module", "qat.purr.utils.logger module", "qat.purr.utils.logging_utils module", "qat.purr.utils.serializer module", "qat.qat module"], "terms": {"we": [0, 1, 2, 16, 27, 28, 29, 32, 37, 39, 45, 51], "commun": [0, 1, 2], "contributor": [0, 1, 2, 3], "maintain": [0, 1], "ar": [0, 1, 2, 3, 21, 25, 27, 28, 32, 36, 37, 39, 51, 53], "dedic": 0, "nurtur": 0, "an": [0, 2, 10, 12, 18, 21, 22, 25, 27, 28, 32, 37, 51, 53], "atmospher": 0, "inclus": 0, "respect": 0, "within": [0, 1], "thi": [0, 1, 2, 3, 10, 11, 12, 16, 18, 19, 21, 25, 27, 28, 32, 36, 37, 39, 40, 45, 48, 51, 53], "project": [0, 1, 2], "object": [0, 12, 14, 15, 16, 18, 21, 22, 25, 26, 27, 28, 29, 31, 32, 36, 37, 38, 39, 42, 44, 45, 48, 51, 53], "i": [0, 1, 2, 3, 11, 12, 14, 16, 19, 21, 25, 27, 28, 32, 36, 37, 39, 40, 44, 45, 48, 51, 53], "establish": 0, "space": 0, "which": [0, 1, 2, 10, 12, 16, 21, 28, 32, 45, 48, 51, 53], "welcom": 0, "individu": [0, 12, 27, 36, 45], "all": [0, 1, 2, 12, 16, 21, 25, 27, 28, 32, 36, 37, 39, 40, 44, 45, 48, 51, 53], "background": 0, "ident": [0, 21, 37], "safe": [0, 28], "everyon": 0, "regardless": 0, "ethnic": 0, "gender": 0, "express": [0, 3, 16], "level": [0, 2, 18, 21, 28, 32, 40, 48, 51, 53], "experi": [0, 24, 27, 51], "ag": 0, "disabl": [0, 24, 27], "nation": 0, "person": [0, 1, 2], "appear": 0, "race": 0, "religion": 0, "sexual": 0, "orient": 0, "With": 0, "aim": [0, 1], "open": [0, 45, 51], "invit": 0, "interact": [0, 1, 12], "consider": 0, "kind": 0, "recogn": 0, "worth": 0, "each": [0, 21, 27, 28, 36, 45, 51], "": [0, 2, 11, 24, 25, 28, 32, 37, 44, 45, 48, 51], "input": 0, "embrac": 0, "contribut": 0, "from": [0, 1, 3, 12, 28, 32, 37, 39, 44, 45, 51, 53], "activ": [0, 28, 39, 51], "seek": 0, "involv": [0, 2, 28], "those": [0, 21, 25, 53], "who": 0, "have": [0, 1, 2, 12, 16, 21, 28, 32, 37, 39, 51], "been": [0, 1, 2, 21, 37], "tradition": 0, "underrepres": 0, "field": [0, 24, 27, 32, 39, 51, 53], "patienc": [0, 1], "demonstr": 0, "understand": 0, "empathi": 0, "toward": [0, 2], "vari": [0, 25], "viewpoint": 0, "construct": [0, 29], "engag": 0, "convers": 0, "offer": 0, "posit": [0, 11, 21, 32], "product": [0, 3], "outcom": [0, 21], "action": [0, 28], "toler": [0, 16], "includ": [0, 1, 2, 3, 18, 21, 28, 32, 45, 51, 53], "limit": [0, 3, 45], "harass": 0, "discriminatori": 0, "intimid": 0, "ani": [0, 1, 2, 3, 12, 18, 25, 27, 28, 32, 36, 37, 39, 45, 53], "form": [0, 2, 3, 28, 37], "derogatori": 0, "remark": 0, "make": [0, 1, 2, 21, 28, 44], "neg": [0, 53], "disrespect": 0, "comment": 0, "hinder": 0, "discuss": [0, 1, 2], "attack": 0, "undermin": 0, "collabor": 0, "environ": [0, 2], "through": [0, 2, 45, 51], "belittl": 0, "other": [0, 3, 21, 22, 27, 28, 32, 37, 39, 48, 51], "spam": 0, "irrelev": 0, "distribut": [0, 2, 3], "unsolicit": 0, "content": [0, 51], "repeatedli": 0, "share": [0, 28], "inform": [0, 2, 12, 21, 25, 28, 36, 51], "discrimin": [0, 24, 37], "relat": [0, 2, 28, 37, 45, 48], "aforement": 0, "characterist": 0, "The": [0, 1, 2, 12, 14, 16, 21, 28, 32, 51, 53], "entrust": 0, "uphold": 0, "crucial": 0, "instanc": [0, 11, 19, 25, 27, 28, 32, 51], "inappropri": 0, "can": [0, 1, 2, 21, 27, 28, 37, 51, 53], "report": [0, 2], "team": [0, 1, 21], "us": [0, 1, 2, 3, 10, 11, 16, 17, 19, 21, 22, 25, 27, 28, 32, 36, 37, 40, 45, 48, 51, 53], "grievanc": 0, "review": [0, 1], "confidenti": 0, "punctual": 0, "imparti": 0, "moder": 0, "author": 0, "edit": 0, "remov": [0, 51], "declin": 0, "issu": [0, 2, 51], "conflict": 0, "disregard": 0, "mai": [0, 1, 3, 28, 51], "face": 0, "temporari": [0, 51], "perman": 0, "consequ": 0, "determin": [0, 51], "encompass": 0, "repositori": [0, 1, 2], "tracker": 0, "channel": [0, 11, 12, 17, 21, 24, 25, 28, 32, 37, 42, 45], "mail": 0, "list": [0, 1, 2, 3, 10, 14, 15, 21, 25, 27, 28, 32, 36, 37, 48, 51, 53], "social": 0, "media": 0, "platform": 0, "public": 0, "event": [0, 3, 24, 38, 51], "follow": [0, 1, 3, 36, 37, 51, 53], "step": [0, 2, 7, 16, 21, 22], "standard": [0, 1], "warn": [0, 28, 49, 51], "In": [0, 2, 27, 29, 51], "case": [0, 1, 12, 21, 28, 39, 51, 53], "singl": 0, "incid": 0, "offend": 0, "parti": 0, "ban": 0, "If": [0, 1, 2, 21, 25, 27, 32, 36, 37, 39, 51, 53], "doe": [0, 2, 11, 19, 32, 39], "heed": 0, "repeat": [0, 6, 14, 21, 24, 25, 27, 29, 37], "violat": [0, 2], "temporarili": 0, "prohibit": [0, 2], "specifi": [0, 21, 51, 53], "period": [0, 16], "time": [0, 1, 2, 16, 21, 24, 25, 32, 37, 43, 44, 51], "result": [0, 21, 22, 27, 31, 45, 51, 53], "sustain": 0, "pleas": [0, 1, 2], "note": [0, 25, 36], "its": [0, 2, 3, 25, 28, 32, 36, 37, 51, 53], "absolut": [0, 28, 32], "discret": 0, "depend": [0, 2, 29, 51], "natur": 0, "offenc": 0, "decid": 0, "appropri": [0, 2, 32, 45, 51], "onli": [0, 1, 11, 12, 21, 25, 27, 45, 51, 53], "necessarili": 0, "appli": [0, 10, 11, 21, 22, 27, 37, 48, 51], "present": 0, "order": [0, 12, 21, 22, 37, 53], "e": [0, 1, 51, 53], "g": [0, 1, 44, 51, 53], "without": [0, 2, 3, 12, 21, 22, 27, 44], "preced": 0, "warrant": 0, "you": [0, 1, 2, 10, 12, 21, 25, 27, 37, 53], "consid": [0, 1, 2, 36], "unjustifi": 0, "privat": 0, "email": [0, 1], "qat_moder": 0, "oqc": [0, 1, 2], "tech": [0, 1], "foremost": 1, "thank": 1, "sourc": [1, 3, 28, 51], "veri": [1, 21, 28], "excit": 1, "idea": 1, "work": [1, 2, 11, 27, 28, 32], "improv": 1, "both": [1, 2], "codebas": 1, "To": [1, 2, 12, 51, 53], "begin": 1, "read": [1, 2, 27, 51], "overview": 1, "guidelin": 1, "quickli": 1, "familiaris": [1, 2], "yourself": 1, "wai": [1, 2, 3, 21, 25, 27, 51], "do": [1, 2, 29, 32, 39], "thing": [1, 2, 37, 45], "area": 1, "could": [1, 2, 25, 28, 53], "submit": 1, "suit": [1, 48], "etc": [1, 12, 37], "document": [1, 2, 3], "answer": 1, "question": 1, "ask": 1, "forum": 1, "govern": 1, "our": [1, 2, 11, 21, 28, 29, 32, 36, 45, 48, 51], "code": [1, 2, 3, 28, 37, 49, 51, 53], "conduct": [1, 2], "get": [1, 28, 45, 53], "start": [1, 2, 7, 11, 19, 22, 32, 37, 51], "see": [1, 2, 51], "build": [1, 13, 17, 18, 25, 27, 28, 32, 36, 45, 48], "section": [1, 6, 7, 21, 48, 51], "readm": 1, "fork": 1, "chang": [1, 2, 51], "own": [1, 2, 21, 28], "pr": [1, 2], "should": [1, 2, 12, 21, 25, 27, 32, 36, 37, 44, 51, 53], "associ": [1, 21, 28, 32, 39, 45], "valid": [1, 7, 11, 24, 26, 27, 32, 39, 43, 45], "implement": [1, 21, 51, 53], "ensur": [1, 51, 53], "proper": 1, "function": [1, 2, 12, 21, 22, 28, 51, 53], "A": [1, 3, 10, 12, 17, 21, 28, 32, 37, 51], "must": [1, 3, 16, 37, 51], "receiv": 1, "approv": 1, "befor": [1, 21, 28, 32, 37, 40, 45, 51], "merg": [1, 24, 25, 32, 39, 44], "signific": 1, "two": [1, 24, 25, 27, 28], "week": 1, "minor": 1, "few": [1, 28], "dai": [1, 53], "cannot": 1, "guarante": [1, 2, 53], "alwai": [1, 2, 48], "expect": [1, 2, 21], "carri": 1, "out": [1, 2, 3, 27, 32, 45, 51], "respectfulli": 1, "commit": [1, 2], "excel": 1, "base": [1, 10, 11, 12, 14, 15, 16, 17, 18, 19, 21, 22, 25, 26, 27, 28, 29, 31, 32, 36, 37, 38, 39, 40, 42, 44, 45, 48, 51, 53], "paramount": 1, "ha": [1, 2, 32, 37, 39, 45], "becom": [1, 32], "stale": 1, "inact": 1, "choos": 1, "close": [1, 7, 12, 21, 49, 51], "As": 1, "appreci": 1, "when": [1, 2, 11, 19, 21, 25, 28, 32, 45, 48, 51], "wait": [1, 2, 13, 16, 18, 37], "now": [1, 2, 12, 25, 29, 37], "set": [1, 25, 27, 29, 32, 38, 39, 40, 51], "unsur": 1, "where": [1, 21, 32, 51], "check": [1, 2, 25, 53], "good": [1, 2, 3], "want": [1, 2, 25, 28, 51], "task": 1, "requir": [1, 12, 21, 25, 28, 51], "small": [1, 2], "intend": [1, 28, 51], "provid": [1, 2, 3, 10, 25, 40, 48, 51, 53], "smooth": 1, "access": [1, 25, 37], "learn": [1, 2], "curv": 1, "whilst": 1, "greater": 1, "modif": [1, 3, 32, 37, 48], "more": [1, 2, 25, 28, 36, 45, 48, 53], "experienc": 1, "re": [1, 2, 25, 27, 28, 32, 37, 45, 51], "entir": [1, 32, 36, 37], "some": [1, 28, 37, 51], "link": [1, 2, 37], "For": [1, 2, 12, 16, 21, 22, 28, 29, 36, 37, 53], "take": [1, 2, 21, 32, 53], "part": [1, 2, 37], "need": [1, 2, 12, 21, 28, 32, 36, 37, 51], "visit": [1, 2], "guid": 1, "never": 1, "had": [1, 24, 25], "about": [1, 2, 21, 32, 36], "process": [1, 2, 25, 32, 36, 37, 38, 45, 48, 51], "click": 1, "here": [1, 2, 27, 32, 51], "after": [1, 17, 28, 37, 39, 51], "were": 1, "beginn": 1, "believ": 1, "found": [1, 25, 27, 48, 51], "publicli": 1, "instead": [1, 25, 28, 32, 37, 51, 53], "qat_secur": 1, "onc": [1, 2], "acknowledg": 1, "suspect": 1, "ve": [1, 32], "would": [1, 2, 12, 32, 51, 53], "like": [1, 2, 25, 29, 32, 37, 51, 53], "rais": [1, 53], "alreadi": [1, 11, 19, 32, 36, 51], "fix": [1, 11, 22], "so": [1, 2, 12, 21, 27, 28, 32, 37, 39, 44, 51], "download": 1, "version": [1, 43, 45, 53], "try": [1, 53], "again": [1, 32], "someon": 1, "els": [1, 51, 53], "add": [1, 13, 18, 24, 25, 28, 29, 32], "diagnos": 1, "recreat": 1, "otherwis": [1, 3, 28, 51, 53], "templat": 1, "up": [1, 11, 19, 28, 32, 36, 51], "give": [1, 21], "exampl": [1, 21, 25, 28, 32, 53], "look": [1, 28, 29, 32, 45, 51], "precis": [1, 28, 32], "detail": [1, 2], "higher": 1, "chanc": 1, "ll": [1, 2, 27, 28, 32, 37, 39], "abl": [1, 21, 25, 28, 44], "reproduc": [1, 3], "decent": 1, "timefram": 1, "what": [1, 2, 29, 32, 37], "d": 1, "save": [1, 12, 28, 51, 53], "disappoint": 1, "refus": 1, "becaus": [1, 28, 51], "pure": 1, "doesn": [1, 45, 51], "t": [1, 2, 22, 24, 25, 26, 27, 28, 44, 45, 51, 53], "fit": [1, 3, 51], "whole": [1, 32], "current": [1, 2, 11, 25, 27, 28, 32, 36, 37, 39, 40, 45, 51], "go": 1, "support": [1, 2, 16, 25, 38, 53], "possibl": [1, 2, 3, 21], "backlog": 1, "head": 1, "checkout": 1, "roadmap": 1, "exist": [1, 11, 26, 27, 28, 37, 39, 51], "directori": [1, 28, 51], "It": [1, 2, 12, 32, 37, 51, 53], "polici": 1, "pass": [1, 10, 11, 21, 27, 28, 29, 32, 36, 37, 39, 45, 48, 51, 53], "unless": 1, "skip": [1, 12, 53], "justif": 1, "accompani": 1, "comprehens": 1, "sure": [1, 28, 44], "behav": 1, "futur": [1, 29], "unintention": 1, "break": 1, "qat": 2, "quantum": [2, 3, 21, 28, 37], "assembli": 2, "toolkit": 2, "toolchain": [2, 26], "low": 2, "compil": [2, 5, 6], "runtim": [2, 6, 24, 36], "facilit": [2, 32], "execut": [2, 6, 11, 24, 25, 27, 29, 37, 45, 51], "ir": [2, 7, 13], "qasm": [2, 6, 40, 43, 48], "openpuls": 2, "qir": [2, 6, 24, 27, 43], "against": [2, 32, 45], "qpu": [2, 11, 27, 37], "driver": [2, 7, 12], "larg": [2, 28], "optimis": [2, 6, 24], "convert": 2, "abstract": [2, 12, 15, 31, 32, 38, 45], "puls": [2, 6, 17, 21, 22, 24, 25, 28, 32, 36, 37, 42, 45], "hardwar": [2, 10, 11, 12, 17, 19, 21, 25, 27, 28, 29, 32, 36, 37, 40, 44, 48], "instruct": [2, 6, 7, 10, 11, 14, 16, 17, 21, 22, 24, 25, 29, 32, 36, 45], "transform": [2, 21, 27, 45], "deliv": 2, "offici": 2, "pypi": 2, "via": [2, 32, 51], "pip": 2, "poetri": 2, "manag": 2, "run": [2, 10, 11, 21, 32, 37, 40, 48, 51], "python": [2, 27, 29], "3": [2, 3, 21, 25, 27, 28, 32, 45], "8": [2, 27, 28, 32, 44, 51], "root": [2, 44], "folder": [2, 26, 28, 51], "recommend": 2, "also": [2, 21, 25, 27, 28, 32, 37, 51, 53], "pre": [2, 10, 32], "enabl": [2, 18, 24, 39, 51], "contact": 2, "group": 2, "develop": [2, 21], "classic": [2, 36, 37], "hybrid": 2, "comput": [2, 22, 37, 51], "john": 2, "dumbel": 2, "embed": 2, "qec": 2, "jami": 2, "friel": 2, "design": [2, 32], "verifi": 2, "suitabl": 2, "full": [2, 27, 48], "v3": 2, "avail": [2, 16, 36, 40, 44, 53], "parser": [2, 45, 48, 53], "first": [2, 21, 22, 51], "encourag": 2, "new": [2, 21, 25, 32, 39, 51], "themselv": [2, 37], "adher": 2, "reach": 2, "tab": [2, 53], "file": [2, 12, 28, 29, 32, 45, 51], "licens": 2, "under": [2, 45], "bsd": [2, 3], "claus": [2, 3], "let": [2, 32, 53], "u": [2, 24, 25, 28, 44, 45, 48, 51], "know": [2, 32], "your": 2, "suggest": 2, "addition": 2, "concern": 2, "why": 2, "mixtur": 2, "reason": [2, 28], "primari": 2, "one": [2, 12, 22, 28, 32, 51, 53], "v1": 2, "0": [2, 11, 12, 16, 17, 21, 22, 27, 28, 31, 32, 36, 37, 42, 45, 51, 53], "wa": [2, 32, 45, 51], "earli": 2, "prototyp": 2, "sinc": [2, 12, 32], "major": [2, 51, 53], "fastest": 2, "system": [2, 21, 45, 51], "most": [2, 12, 27, 53], "peopl": 2, "api": [2, 18, 25, 48], "stick": 2, "around": [2, 17], "anywai": 2, "goe": 2, "intern": [2, 25], "being": [2, 21, 51], "move": [2, 13, 18], "rust": 2, "c": 2, "test": [2, 10, 53], "place": [2, 51, 53], "thei": [2, 11, 25, 26, 28, 32, 37, 51], "show": 2, "variou": [2, 26, 27, 28, 44], "how": [2, 28, 37, 51], "best": 2, "known": [2, 37], "echo": [2, 6, 7], "model": [2, 7, 10, 11, 17, 19, 21, 28, 31, 32, 36, 45, 53], "engin": [2, 21], "attach": 2, "almost": 2, "exclus": 2, "larger": 2, "novel": 2, "architectur": [2, 48], "high": [2, 18], "incom": [2, 53], "explain": 2, "concept": 2, "glanc": 2, "right": [2, 25, 37, 45], "aren": 2, "complet": 2, "o": [2, 53], "window": 2, "linux": 2, "agnost": 2, "won": [2, 28], "bug": 2, "untri": 2, "ones": [2, 27, 39], "usual": 2, "problem": [2, 51], "core": 2, "itself": [2, 25], "feel": 2, "free": [2, 37], "them": [2, 21, 25, 28, 37, 51], "don": [2, 25, 26, 28, 51], "anyth": 2, "certain": [2, 32, 45], "stai": [2, 32], "proprieti": 2, "initi": [2, 21, 27, 51], "releas": 2, "did": 2, "properli": 2, "unpick": 2, "happili": 2, "much": [2, 40], "busi": [2, 3], "just": [2, 10, 32, 36, 45, 48, 51], "simul": [2, 21, 29, 36], "real": [2, 21], "chip": [2, 21, 28], "potenti": [2, 48], "ramif": 2, "focus": 2, "accuraci": 2, "scale": [2, 6, 28, 43, 44], "gener": [2, 10, 12, 25, 27, 28, 39, 45, 51], "4": [2, 10, 16, 27, 28, 32, 37], "qubit": [2, 6, 7, 10, 17, 21, 24, 25, 27, 28, 36, 37, 45, 48], "maximum": [2, 16], "index": [2, 17, 18, 21, 28, 31, 32, 36, 37, 45], "modul": [2, 4, 5, 6, 7, 8, 13, 24, 30, 33, 43, 49], "search": [2, 28, 51], "page": 2, "copyright": 3, "2023": 3, "oxford": 3, "circuit": [3, 21, 36, 48], "ltd": 3, "redistribut": 3, "binari": [3, 24, 27, 37], "permit": 3, "condit": [3, 21, 25, 37, 48], "met": 3, "retain": 3, "abov": [3, 16, 51, 53], "notic": 3, "disclaim": 3, "materi": 3, "neither": 3, "name": [3, 7, 17, 18, 21, 24, 25, 27, 30, 31, 32, 37, 39, 42, 44, 45, 48, 51, 53], "holder": 3, "nor": 3, "endors": 3, "promot": 3, "deriv": [3, 7, 12, 22, 51], "softwar": [3, 32, 37], "specif": [3, 10, 11, 12, 21, 25, 32, 37, 51, 53], "prior": 3, "written": [3, 51], "permiss": 3, "BY": 3, "THE": 3, "AND": [3, 13, 18], "AS": 3, "OR": [3, 13, 18], "impli": 3, "warranti": 3, "BUT": 3, "NOT": [3, 13, 18], "TO": 3, "OF": 3, "merchant": 3, "FOR": 3, "particular": [3, 11, 21, 27, 28, 32, 36, 37, 39, 45], "purpos": 3, "IN": 3, "NO": 3, "shall": 3, "ITS": 3, "subsidari": 3, "affili": 3, "BE": 3, "liabl": 3, "direct": [3, 28, 48], "indirect": 3, "incident": 3, "special": [3, 25, 32, 51], "exemplari": 3, "consequenti": 3, "damag": 3, "procur": 3, "substitut": 3, "servic": [3, 44], "loss": 3, "data": [3, 12, 18, 22, 32, 37, 45, 51, 53], "profit": 3, "interrupt": [3, 6, 24], "howev": 3, "caus": [3, 53], "ON": 3, "theori": 3, "liabil": 3, "whether": [3, 27, 36, 51], "contract": 3, "strict": [3, 53], "tort": 3, "neglig": 3, "aris": 3, "even": 3, "IF": 3, "advis": 3, "SUCH": 3, "packag": [4, 17, 51], "subpackag": 4, "purr": [4, 5], "submodul": [4, 6], "backend": [5, 6, 28], "integr": [5, 6, 24, 37], "util": [5, 6, 7], "calibr": [6, 7, 12, 27, 28, 36], "qblox": [6, 7], "connect": [6, 7, 10, 11, 12, 13, 15, 17, 28, 48], "echoengin": [6, 7, 10], "add_direction_couplings_to_hardwar": [6, 7, 10], "apply_setup_to_hardwar": [6, 7, 10, 11, 21], "generate_connect": [6, 7, 10], "get_default_echo_hardwar": [6, 7, 10], "live": [6, 7, 12, 13, 17, 28], "livedeviceengin": [6, 7, 11, 19], "livehardwaremodel": [6, 7, 11, 12, 19], "build_lucy_hardwar": [6, 7, 11], "sync_baseband_frequencies_to_valu": [6, 7, 11], "live_devic": [6, 7], "controlhardwar": [6, 7, 12, 17], "controlhardwarechannel": [6, 7, 12], "dcbiaschannel": [6, 7, 12], "instrument": [6, 7, 11, 12, 17], "livephysicalbaseband": [6, 7, 12, 17], "qiskit_simul": [6, 7], "realtime_chip_simul": [6, 7], "controltyp": [6, 7, 21], "couplingtyp": [6, 7, 21], "measurementstatist": [6, 7, 21], "operatorinfo": [6, 7, 21], "rtcscoupl": [6, 7, 21], "rtcsqubit": [6, 7, 21], "rtcsreson": [6, 7, 21], "realtimechipsimengin": [6, 7, 21], "realtimesimhardwaremodel": [6, 7, 21], "add_qubit_coupl": [6, 7, 21], "add_qubit_stack": [6, 7, 21], "create_subplot": [6, 7, 21], "get_default_rtcs_hardwar": [6, 7, 21], "get_resonator_response_seg": [6, 7, 21], "get_resonator_response_signal_seg": [6, 7, 21], "get_resonator_response_splicing_indic": [6, 7, 21], "get_simple_resonator_respons": [6, 7, 21], "random": [6, 7, 21, 51], "spline_tim": [6, 7, 21], "tukey_window": [6, 7, 21], "blackmanfunct": [6, 7, 22], "complexfunct": [6, 7, 22], "co": [6, 7, 22, 24, 28], "draggaussianfunct": [6, 7, 22], "extrasoftsquarefunct": [6, 7, 22], "gaussianfunct": [6, 7, 22], "gaussiansquar": [6, 7, 22], "gaussianzeroedgefunct": [6, 7, 22], "numericfunct": [6, 7, 22], "positiondata": [6, 7, 22], "roundedsquarefunct": [6, 7, 22], "sech": [6, 7, 22, 24, 28], "setupholdfunct": [6, 7, 22], "simpleacquir": [6, 7, 22], "sin": [6, 7, 22, 24, 28], "softsquarefunct": [6, 7, 22], "softergaussianfunct": [6, 7, 22], "softersquarefunct": [6, 7, 22], "squarefunct": [6, 7, 22], "evaluate_pulse_integr": [6, 7, 22], "evaluate_shap": [6, 7, 22], "get_axis_map": [6, 7, 22], "plot_buff": [6, 7, 22], "predict_pulse_amplitud": [6, 7, 22], "remove_ax": [6, 7, 22], "software_post_process_discrimin": [6, 7, 22], "software_post_process_down_convert": [6, 7, 22], "software_post_process_linear_map_complex_to_r": [6, 7, 22], "software_post_process_mean": [6, 7, 22], "validate_input_arrai": [6, 7, 22], "verif": [6, 7], "error_mitig": [6, 11, 21, 24, 27, 36], "experiment": [6, 24], "builder": [6, 18, 24, 36, 45, 48], "axi": [6, 24, 25], "fluidbuilderwrapp": [6, 24, 25], "instructionbuild": [6, 24, 25, 36], "quantuminstructionbuild": [6, 24, 25, 36], "cach": [6, 24], "qatcach": [6, 24, 26], "config": [6, 7, 13, 17, 24, 28, 51], "calibrationargu": [6, 24, 27], "compilerconfig": [6, 24, 27], "errormitigationconfig": [6, 24, 27], "experimentalfeatur": [6, 24, 27], "inlineresultsprocess": [6, 24, 27], "languag": [6, 24, 27, 44, 45], "metricstyp": [6, 24, 27, 39], "optimizationconfig": [6, 24, 27], "qiroptim": [6, 24, 27], "qasm2optim": [6, 24, 27], "qasm3optim": [6, 24, 27], "qatoptim": [6, 24, 27], "qiskit": [6, 24, 27, 36, 43, 45], "qiskitoptim": [6, 24, 27], "quantumresultsformat": [6, 24, 27], "resultsformat": [6, 24, 27], "tket": [6, 24, 27, 43], "tketoptim": [6, 24, 27], "get_config": [6, 24, 27], "get_optimizer_config": [6, 24, 27], "get_serializable_typ": [6, 24, 27], "devic": [6, 7, 11, 13, 24, 25, 32, 36, 45], "calibrat": [6, 12, 21, 24, 28, 36], "channeltyp": [6, 24, 28], "cyclicrefpickl": [6, 24, 28], "cyclicrefunpickl": [6, 24, 28], "fakelist": [6, 24, 28], "freqshiftpulsechannel": [6, 24, 28], "physicalbaseband": [6, 12, 24, 28], "physicalchannel": [6, 12, 17, 22, 24, 28], "pulsechannel": [6, 14, 17, 22, 24, 28, 36, 37], "pulsechannelview": [6, 24, 28], "pulseshapetyp": [6, 24, 28], "quantumcompon": [6, 21, 24, 28, 37], "quantumdevic": [6, 24, 28], "qubitcoupl": [6, 24, 28], "reson": [6, 17, 21, 24, 28, 36], "add_cross_reson": [6, 24, 28], "build_qubit": [6, 13, 17, 24, 28], "build_reson": [6, 13, 17, 24, 28], "emitt": [6, 24], "instructionemitt": [6, 24, 29], "qatfil": [6, 24, 29], "timelineseg": [6, 24, 29], "deviceinjector": [6, 24, 32], "injectionmetadata": [6, 24, 32], "instructionexecutionengin": [6, 24, 32, 36], "iteratorinjector": [6, 24, 32], "quantumexecutionengin": [6, 10, 11, 21, 24, 32], "sweepiter": [6, 24, 32], "valuereplac": [6, 24, 32], "variableinjector": [6, 24, 32], "frontend": [6, 24, 33], "hardware_model": [6, 24, 25], "errormitig": [6, 24, 36], "hardwaremodel": [6, 24, 36], "quantumhardwaremodel": [6, 10, 11, 21, 24, 36], "readoutmitig": [6, 24, 36], "get_cl2qu_index_map": [6, 24, 36], "acquir": [6, 13, 14, 17, 18, 22, 24, 25, 28, 32, 37], "acquiremod": [6, 22, 24, 37], "assign": [6, 24, 25, 37, 43, 45], "binaryoper": [6, 24, 37], "crossresonancecancelpuls": [6, 24, 37], "crossresonancepuls": [6, 24, 37], "custompuls": [6, 24, 37], "delai": [6, 7, 12, 13, 14, 22, 24, 25, 37, 45, 51], "deviceupd": [6, 24, 37], "drivepuls": [6, 24, 37], "equal": [6, 24, 37], "frequencyshift": [6, 24, 37], "greaterorequalthan": [6, 24, 37], "greaterthan": [6, 24, 37], "id": [6, 13, 14, 21, 24, 28, 36, 37], "indexaccessor": [6, 24, 37], "jump": [6, 13, 18, 24, 25, 37], "label": [6, 13, 18, 24, 25, 37], "lessorequalthan": [6, 24, 37], "lessthan": [6, 24, 37], "measurepuls": [6, 17, 24, 37], "notequ": [6, 24, 37], "phasereset": [6, 24, 37], "phaseshift": [6, 24, 37], "postprocesstyp": [6, 24, 37], "postprocess": [6, 24, 37], "processaxi": [6, 24, 37], "quantuminstruct": [6, 22, 24, 37], "quantummetadata": [6, 24, 37], "reset": [6, 7, 21, 24, 25, 28, 32, 37], "resultsprocess": [6, 24, 37], "return": [6, 10, 11, 14, 16, 17, 21, 22, 24, 25, 27, 28, 32, 36, 37, 44, 45, 48, 51, 53], "secondstatepuls": [6, 24, 37], "sweep": [6, 24, 25, 29, 32, 37], "sweepoper": [6, 24, 37], "sweepvalu": [6, 24, 37], "synchron": [6, 13, 14, 24, 25, 37], "variabl": [6, 24, 25, 32, 37, 43, 45, 51], "waveform": [6, 13, 14, 16, 18, 24, 37], "build_generated_nam": [6, 24, 37], "is_generated_nam": [6, 24, 37], "basicinterrupt": [6, 24, 38], "interrupterror": [6, 24, 38], "nullinterrupt": [6, 24, 38], "metric": [6, 24, 27, 40], "compilationmetr": [6, 24, 39], "metricsmixin": [6, 24, 39, 40], "defaultoptim": [6, 24, 40], "abstractwaveform": [6, 24, 42], "blackmanwaveform": [6, 24, 42], "extrasoftsquarewaveform": [6, 24, 42], "gaussianwaveform": [6, 24, 42], "setupholdwaveform": [6, 24, 42], "softsquarewaveform": [6, 24, 42], "softergaussianwaveform": [6, 24, 42], "softersquarewaveform": [6, 24, 42], "squarewaveform": [6, 24, 42], "waveformdef": [6, 24, 42], "build_waveform": [6, 24, 42], "get_waveform_typ": [6, 24, 42], "featur": [6, 43, 53], "constraint": [6, 43, 44], "featuremetadata": [6, 43, 44], "openpulsefeatur": [6, 43, 44], "quantiti": [6, 43, 44], "unit": [6, 12, 43, 44], "abstractpars": [6, 43, 45], "bitregist": [6, 43, 45], "cloudqasmpars": [6, 43, 45], "cregindexvalu": [6, 43, 45], "larkopenpulsecontext": [6, 43, 45], "larkpatchingpars": [6, 43, 45], "parseresult": [6, 43, 45], "qasm2pars": [6, 43, 45, 48], "qasm3pars": [6, 43, 45], "qasmcontext": [6, 43, 45], "qasmmethodwrapp": [6, 43, 45], "qubitregist": [6, 43, 45], "regist": [6, 16, 27, 36, 43, 45], "restrictedqasm2pars": [6, 43, 45], "untargetedpuls": [6, 43, 45], "extern_port_nam": [6, 43, 45], "fetch_gate_nod": [6, 43, 45], "get_frame_map": [6, 43, 45], "get_port_map": [6, 43, 45], "get_qasm_pars": [6, 43, 45], "qasm_from_fil": [6, 43, 45], "tketbuild": [6, 43, 48], "tketqasmpars": [6, 43, 48], "apply_default_transform": [6, 43, 48], "check_valid": [6, 43, 48], "fetch_default_pass": [6, 43, 48], "get_coupling_subgraph": [6, 43, 48], "optimize_circuit": [6, 43, 48], "run_tket_optim": [6, 43, 48], "benchmark": [6, 49], "logger": [6, 49], "basiclogg": [6, 49, 51], "compositelogg": [6, 49, 51], "consoleloggerhandl": [6, 49, 51], "fileloggerhandl": [6, 49, 51], "jsonhandl": [6, 49, 51], "jsonloggerhandl": [6, 49, 51], "keywordfilt": [6, 49, 51], "levelfilt": [6, 49, 51], "logfold": [6, 49, 51], "loggerlevel": [6, 49, 51], "modulefilt": [6, 49, 51], "close_logg": [6, 49, 51], "get_default_logg": [6, 49, 51], "get_logger_config": [6, 49, 51], "import_logger_configur": [6, 49, 51], "load_object_from_log_fold": [6, 49, 51], "save_object_to_log_fold": [6, 49, 51], "logging_util": [6, 49], "log_dur": [6, 49, 52], "serial": [6, 24, 25, 49, 51], "customjsonencod": [6, 49, 53], "customjsondecod": [6, 49, 53], "json_dump": [6, 49, 53], "json_load": [6, 49, 53], "remot": [7, 8], "codegen": [7, 13, 18], "qbloxcontext": [7, 13, 14], "qbloxemitt": [7, 13, 14], "qbloxpackag": [7, 13, 14], "calculate_dur": [7, 13, 14, 24, 32], "get_nco_phase_argu": [7, 13, 14], "get_nco_set_frequency_argu": [7, 13, 14], "attconfig": [7, 13, 15], "awgconfig": [7, 13, 15], "connectionconfig": [7, 13, 15], "gainconfig": [7, 13, 15], "loconfig": [7, 13, 15], "mixerconfig": [7, 13, 15], "moduleconfig": [7, 13, 15], "ncoconfig": [7, 13, 15], "offsetconfig": [7, 13, 15], "qbloxconfig": [7, 13, 15], "qbloxconfighelp": [7, 13, 15], "qcmconfighelp": [7, 13, 15], "qcmrfconfighelp": [7, 13, 15], "qrmconfighelp": [7, 13, 15], "qrmrfconfighelp": [7, 13, 15], "scopeacqconfig": [7, 13, 15], "sequencerconfig": [7, 13, 14, 15], "squareweightacq": [7, 13, 15], "thresholdedacqconfig": [7, 13, 15], "ttlacqconfig": [7, 13, 15], "constant": [7, 13], "dummyqbloxcontrolhardwar": [7, 13, 17], "qbloxcontrolhardwar": [7, 13, 17], "qbloxphysicalbaseband": [7, 13, 17], "qbloxphysicalchannel": [7, 13, 17], "qbloxreson": [7, 13, 17], "opcod": [7, 13, 18], "q1asminstruct": [7, 13, 18], "sequenc": [7, 13, 14, 15, 16, 18, 24, 37], "sequencebuild": [7, 13, 18], "qbloxliveengin": [7, 13, 19], "qbloxlivehardwaremodel": [7, 13, 19], "ring": [7, 10], "optim": [7, 10, 11, 13, 14, 21, 24, 27, 29, 32, 40, 48], "run_calibr": [7, 10, 24, 32], "build_baseband_frequ": [7, 11], "process_reset": [7, 11, 21, 24, 32, 43, 45, 48], "shutdown": [7, 11, 13, 19, 24, 32], "startup": [7, 11, 13, 19, 24, 32], "add_devic": [7, 11, 24, 36], "add_instru": [7, 11], "add_physical_baseband": [7, 11, 24, 36], "add_physical_channel": [7, 11, 12, 24, 36], "create_engin": [7, 11, 13, 19, 21, 24, 36], "get_devic": [7, 11, 24, 36], "get_instru": [7, 11], "set_data": [7, 12, 13, 17], "start_playback": [7, 12, 13, 17], "bias_valu": [7, 12], "connect_to_instru": [7, 12], "disconnect": [7, 12, 13, 17, 48], "get_output_st": [7, 12], "set_frequ": [7, 12], "turn_off": [7, 12], "turn_on": [7, 12], "measur": [7, 14, 21, 24, 25, 27, 28, 43, 45, 48], "crosskerr": [7, 21], "exchang": [7, 21], "build_tre": [7, 21], "extract_branch_trajectori": [7, 21], "extract_outcome_prob": [7, 21], "get_branch_nod": [7, 21], "oper": [7, 21, 25, 28, 37], "qubit_id": [7, 17, 21, 28], "target": [7, 13, 14, 17, 21, 25, 28, 32, 37], "n": [7, 16, 18, 21, 31, 36, 44, 45, 53], "rotating_frame_frequ": [7, 21], "build_simulator_reset": [7, 21], "get_branch": [7, 21], "get_tensor": [7, 21], "plot_dynam": [7, 21], "plot_puls": [7, 21], "add_coupl": [7, 21], "coupl": [7, 21, 28, 48], "control_typ": [7, 21], "drive_hamiltonian": [7, 21], "indic": [7, 21, 32, 36], "simulation_tim": [7, 21], "eval": [7, 22], "dt": [7, 21, 22], "end": [7, 22, 32, 36, 51], "mode": [7, 22, 37, 51], "output_vari": [7, 22, 25, 37], "physical_channel": [7, 11, 12, 17, 21, 22, 28, 36, 45], "pulse_channel": [7, 22, 28, 32, 36], "sampl": [7, 14, 16, 22, 32, 37], "class": [10, 11, 12, 14, 15, 16, 17, 18, 19, 21, 22, 25, 26, 27, 28, 29, 31, 32, 36, 37, 38, 39, 40, 42, 44, 45, 48, 51, 53], "valu": [10, 12, 16, 17, 18, 21, 25, 27, 28, 32, 37, 39, 44, 45, 51, 53], "enum": [10, 18, 21, 25, 28, 37, 44, 51], "enumer": [10, 18, 21, 25, 27, 28, 37, 51], "1": [10, 16, 17, 21, 25, 27, 28, 31, 32, 36, 37, 42, 44, 51], "none": [10, 11, 12, 14, 15, 17, 19, 21, 22, 25, 26, 27, 28, 29, 32, 36, 37, 39, 40, 42, 44, 45, 48, 51, 52, 53], "max_instruction_len": [10, 32], "200000": [10, 32], "default": [10, 17, 21, 24, 27, 28, 32, 43, 44, 45, 49, 51, 53], "primarili": 10, "situat": [10, 27, 28], "qubits_to_calibr": [10, 32], "hw": [10, 11, 21], "qubit_count": [10, 11], "setup": [10, 21, 27, 40, 42, 51], "con_typ": 10, "option": [10, 21, 25, 27, 37, 39, 48, 51], "type": [10, 11, 14, 17, 21, 22, 24, 25, 27, 28, 32, 36, 42, 45, 48, 51, 53], "either": [10, 14, 51], "defin": [10, 37, 48, 51, 53], "hook": 11, "hardcod": 11, "fridg": 11, "machin": [11, 36], "physic": [11, 12, 28, 36, 44, 45], "pulse_channel_buff": [11, 32], "find": [11, 21], "intermedi": 11, "frequenc": [11, 12, 16, 17, 18, 21, 22, 25, 28, 32, 37, 42, 43, 44], "shut": [11, 19, 32], "down": [11, 19, 32, 37, 45], "underli": [11, 19, 32], "longer": [11, 19, 21, 32], "noth": [11, 19, 32], "graph": [11, 28, 32, 48], "control_hardwar": [11, 19], "shot_limit": [11, 21, 36], "10000": [11, 21, 36], "acquire_mod": [11, 21, 36], "repeat_count": [11, 21, 36, 37], "1000": [11, 21, 32, 36, 37], "repetition_period": [11, 21, 25, 27, 36, 37], "0001": [11, 21, 36], "baseband": [11, 13, 17, 21, 28, 36], "id_": [11, 12, 17, 21, 28, 36], "pulse_hw_x_pi_2_width": 11, "pulse_hw_zx_pi_4_width": 11, "pulse_measure_width": 11, "luci": 11, "lo_freq": [11, 21], "target_qubit": [11, 25, 36], "actual": [12, 32, 37, 45, 51], "control": [12, 24, 25, 26, 32, 53], "per": [12, 16, 37], "contain": [12, 39, 45, 51, 53], "rather": 12, "than": [12, 51, 53], "repetit": [12, 17], "repetition_tim": [12, 17], "hardware_id": 12, "dcbiaschannel_pair": 12, "switch_ch": 12, "arg": [12, 17, 21, 22, 25, 28, 29, 37, 42, 45, 48, 51, 53], "kwarg": [12, 17, 21, 25, 27, 28, 29, 42, 45, 48, 51, 53], "wrapper": [12, 25, 28], "over": [12, 37], "map": [12, 21, 31, 32, 36, 45], "channel_idx": 12, "dc": 12, "bia": [12, 28], "accept": 12, "card": 12, "get_voltag": 12, "set_voltag": 12, "properti": [12, 14, 17, 21, 25, 28, 29, 32, 36, 37, 38, 45, 51], "address": [12, 13, 17, 18], "interfac": [12, 29], "uniqu": [12, 28], "ip": 12, "usb": 12, "visa": 12, "avoid": 12, "if_frequ": [12, 17, 28], "allow": [12, 16, 21, 25, 28, 45, 51, 53], "instanti": [12, 27, 51], "readi": 12, "clear": [13, 14, 15, 24, 25], "create_packag": [13, 14], "durat": [13, 14, 18, 24, 32, 37], "is_empti": [13, 14, 24, 32], "measure_acquir": [13, 14], "reset_phas": [13, 14, 18], "shift_frequ": [13, 14], "shift_phas": [13, 14], "emit": [13, 14, 24, 29, 49, 51], "sequencer_config": [13, 14], "in0": [13, 15], "out0": [13, 15], "out1": [13, 15], "cont_mode_en_path0": [13, 15], "cont_mode_en_path1": [13, 15], "cont_mode_waveform_idx_path0": [13, 15], "cont_mode_waveform_idx_path1": [13, 15], "gain_path0": [13, 15], "gain_path1": [13, 15], "mod_en": [13, 15], "offset_path0": [13, 15], "offset_path1": [13, 15], "upsample_rate_path0": [13, 15], "upsample_rate_path1": [13, 15], "acq": [13, 15, 18, 25], "acq_i": [13, 15], "acq_q": [13, 15], "bulk_valu": [13, 15], "out2": [13, 15], "out3": [13, 15], "in1": [13, 15], "out0_en": [13, 15], "out0_freq": [13, 15], "out0_in0_en": [13, 15], "out0_in0_freq": [13, 15], "out1_en": [13, 15], "out1_freq": [13, 15], "gain_ratio": [13, 15], "phase_offset": [13, 15, 17, 22, 24, 28], "attenu": [13, 15], "gain": [13, 15], "lo": [13, 15], "marker_invert": [13, 15], "offset": [13, 15, 16], "scope_acq": [13, 15], "freq": [13, 15], "phase_off": [13, 15], "prop_delay_comp": [13, 15], "prop_delay_comp_en": [13, 15], "in0_path0": [13, 15], "in0_path1": [13, 15], "out0_path0": [13, 15], "out0_path1": [13, 15], "out1_path0": [13, 15], "out1_path1": [13, 15], "slot_idx": [13, 15, 17], "configur": [13, 15, 51], "configure_awg": [13, 15], "configure_connect": [13, 15], "configure_mix": [13, 15], "configure_modul": [13, 15], "configure_nco": [13, 15], "configure_sequenc": [13, 15], "configure_attenu": [13, 15], "configure_lo": [13, 15], "configure_offset": [13, 15], "configure_scope_acq": [13, 15], "configure_acq": [13, 15], "avg_mode_en_path0": [13, 15], "avg_mode_en_path1": [13, 15], "sequencer_select": [13, 15], "trigger_level_path0": [13, 15], "trigger_level_path1": [13, 15], "trigger_mode_path0": [13, 15], "trigger_mode_path1": [13, 15], "awg": [13, 15], "demod_en_acq": [13, 15], "marker_ovr_en": [13, 15], "marker_ovr_valu": [13, 15], "mixer": [13, 15], "nco": [13, 15, 16], "square_weight_acq": [13, 15], "sync_en": [13, 15], "thresholded_acq": [13, 15], "trigger_count_threshold": [13, 15], "trigger_threshold_invert": [13, 15], "ttl_acq": [13, 15], "integration_length": [13, 15], "marker_address": [13, 15], "marker_en": [13, 15], "rotat": [13, 15], "threshold": [13, 15], "trigger_address": [13, 15], "trigger_en": [13, 15], "trigger_invert": [13, 15], "auto_bin_incr_en": [13, 15], "input_select": [13, 15], "grid_tim": [13, 16], "immediate_max_wait_tim": [13, 16], "loop_unroll_threshold": [13, 16], "max_qcm_offset_v": [13, 16], "max_qcm_rf_offset_mv": [13, 16], "max_qrm_offset_v": [13, 16], "max_qrm_rf_offset_v": [13, 16], "max_sample_size_scope_acquisit": [13, 16], "max_sample_size_waveform": [13, 16], "min_qcm_offset_v": [13, 16], "min_qcm_rf_offset_mv": [13, 16], "min_qrm_offset_v": [13, 16], "min_qrm_rf_offset_v": [13, 16], "nco_freq_limit_step": [13, 16], "nco_freq_steps_per_hz": [13, 16], "nco_phase_steps_per_deg": [13, 16], "number_of_regist": [13, 16], "number_of_sequencers_qcm": [13, 16], "number_of_sequencers_qrm": [13, 16], "register_s": [13, 16], "allocate_resourc": [13, 17], "instal": [13, 17], "get_acquire_channel": [13, 17, 24, 28], "get_measure_channel": [13, 17, 24, 28], "acquire_ttl": [13, 18], "acquire_weigh": [13, 18], "jump_greater_equ": [13, 18], "jump_less_than": [13, 18], "loop": [13, 16, 18, 32, 37], "new_lin": [13, 18], "nop": [13, 18], "plai": [13, 18], "set_awg_gain": [13, 18], "set_awg_offset": [13, 18], "set_mark": [13, 18], "set_nco_frequ": [13, 18], "set_nco_phas": [13, 18], "set_nco_phase_offset": [13, 18], "stop": [13, 18], "sub": [13, 18, 51], "update_paramet": [13, 18], "wait_sync": [13, 18], "wait_trigg": [13, 18], "xor": [13, 18], "acquisit": [13, 16, 17, 18], "program": [13, 16, 18, 24, 27, 40, 45], "weight": [13, 18], "add_acquisit": [13, 18], "add_waveform": [13, 18], "add_weight": [13, 18], "jge": [13, 18], "jlt": [13, 18], "jmp": [13, 18], "logic_and": [13, 18], "logic_not": [13, 18], "logic_or": [13, 18], "logic_xor": [13, 18], "reset_ph": [13, 18], "set_awg_off": [13, 18], "set_freq": [13, 16, 18], "set_mrk": [13, 18], "set_ph": [13, 18], "set_ph_delta": [13, 18], "upd_param": [13, 18], "inst": 14, "static": [14, 25, 28, 32, 37, 45, 51], "context": [14, 38, 45, 48, 53], "qat_fil": 14, "qblox_context": 14, "dict": [14, 15, 18, 21, 28, 32, 36, 42, 51, 53], "factori": [14, 15, 21], "return_sampl": [14, 32], "true": [14, 21, 28, 32, 39, 45, 48, 51, 53], "calcul": [14, 21, 32], "nanosecond": 14, "number": [14, 16, 21, 32, 53], "phase_rad": 14, "int": [14, 15, 16, 21, 22, 28, 37, 39, 53], "frequency_hz": 14, "bool": [15, 36, 51], "float": [15, 21, 22, 44, 53], "str": [15, 18, 21, 22, 32, 36, 39, 42, 44, 48, 51, 53], "abc": [15, 32, 38], "clock": 16, "interv": [16, 21], "multipl": [16, 27, 28, 51], "65532": 16, "max": 16, "size": [16, 48], "immedi": 16, "q1asm": [16, 18], "assembl": 16, "2": [16, 21, 25, 27, 28, 32, 36, 37, 45, 51], "16": [16, 27, 32], "largest": 16, "overhead": 16, "5": [16, 27, 28, 32], "qcm": 16, "73": 16, "rf": 16, "09": 16, "qrm": 16, "16384": [16, 27], "maxim": 16, "amount": [16, 32, 43, 44], "scope": [16, 24, 37, 45], "trace": 16, "datapoint": 16, "upload": 16, "minimum": [16, 24, 27], "84": 16, "2000000000": 16, "multipli": 16, "hz": [16, 44], "2777777": 16, "777777778": 16, "degre": 16, "phase": [16, 18, 25, 32, 36, 37, 42], "argument": [16, 27, 51], "64": [16, 27, 32], "6": [16, 27, 28], "latest": 16, "firmwar": 16, "4294967295": 16, "dev_id": 17, "cfg": 17, "qblox_packag": 17, "sample_tim": [17, 24, 28], "block_siz": [17, 24, 28], "imbal": [17, 24, 28], "acquire_allow": [17, 24, 28], "fals": [17, 21, 25, 28, 36, 37, 38, 39, 42, 45, 48, 51, 53], "pulse_channel_min_frequ": [17, 28], "pulse_channel_max_frequ": [17, 28], "inf": [17, 28], "drive_freq": [17, 28], "second_state_freq": [17, 28], "channel_scal": 17, "1e": 17, "08": 17, "0j": [17, 28], "measure_amp": [17, 28], "fixed_drive_if": [17, 28], "helper": [17, 27, 28], "method": [17, 25, 27, 28, 45, 48, 51, 53], "tp": [17, 28], "assum": [17, 28, 32, 36], "resonator_id": [17, 28], "measure_devic": [17, 24, 28], "hack": 17, "same": [17, 21, 28, 32, 51], "operand": 18, "bin": 18, "weight_i": 18, "weight_q": 18, "b": 18, "dest": 18, "num_bin": 18, "src": 18, "wave_i": 18, "wave_q": 18, "gain_i": 18, "gain_q": 18, "offset_i": 18, "offset_q": 18, "mask": 18, "phase_delta": 18, "trigger": [18, 24, 38], "state": [21, 25, 28, 32, 37], "probabl": [21, 36], "qubits_measur": 21, "h0": 21, "c_op": 21, "simulation_sect": 21, "qubit_st": 21, "reset_oper": 21, "branch_numb": 21, "dynam": [21, 32, 37, 45], "hamiltonian": 21, "perform": [21, 25, 37], "occur": [21, 45], "next": [21, 32], "creat": [21, 25, 26, 39, 45, 51], "branch": 21, "structur": [21, 32, 48, 51], "given": [21, 36, 48, 53], "dictionari": [21, 27, 28, 32, 39, 44, 45, 51, 53], "continu": [21, 32, 37], "until": [21, 48, 51], "plot_end": 21, "qobj": 21, "device_on": 21, "device_two": 21, "coupling_typ": 21, "hold": [21, 27, 28, 32, 36, 39, 42], "anharmon": 21, "decay_r": 21, "absorb_r": 21, "dephase_r": 21, "subclass": [21, 53], "width": [21, 22, 37, 42], "auto_plot": 21, "sim_qubit_dt": 21, "5e": [21, 22], "11": 21, "built": [21, 27, 45, 51], "fabric": 21, "confid": 21, "realiti": 21, "position_map": [21, 32], "handl": [21, 51], "unqiu": 21, "along": 21, "branch_id": 21, "branch_prob": 21, "resets_and_measurement_outcom": 21, "call": [21, 25, 28, 32, 37, 45, 48, 51, 53], "plot": 21, "op": [21, 37], "operator_info": 21, "By": [21, 51, 53], "pauli": 21, "custom": [21, 22, 45, 51, 53], "paramet": [21, 51], "union": 21, "act": [21, 28, 32], "altern": 21, "x": [21, 22, 24, 25, 32, 36, 37], "y": [21, 22, 24, 25, 37], "z": [21, 24, 25], "everi": [21, 28, 32, 36, 51, 53], "wish": 21, "realli": [21, 28], "relev": [21, 45], "mid": 21, "differ": [21, 28, 48, 51], "trajectori": 21, "length": [21, 24, 28, 32, 37], "between": [21, 28], "highest": 21, "resolut": 21, "drive": [21, 24, 28, 32], "shown": 21, "frequneci": 21, "superclass": [21, 51], "remain": 21, "empti": [21, 24, 27, 42], "qubit1": 21, "qubit2": 21, "rotating_fram": 21, "sim": 21, "plot_num": 21, "buffer": [21, 22, 32], "resonator_input": 21, "resonator_dt": 21, "res_freq": 21, "shift": [21, 37], "buffer_seg": 21, "segment": [21, 29], "pars": [21, 43, 45], "split": 21, "qubit_dt": 21, "qubit_z": 21, "resonator_iq": 21, "sim_t": 21, "cubic": 21, "spline": 21, "point": [21, 32], "alpha": 21, "_": [22, 32, 45, 48], "ndarrai": 22, "evalu": 22, "domain": 22, "describ": [22, 48, 51], "repres": [22, 32, 37, 51], "complex": [22, 53], "1d": 22, "10": [22, 32, 51], "internal_phas": [22, 37, 42], "beta": [22, 37, 42], "zero_at_edg": [22, 37, 42], "drag": [22, 37, 42], "gaussian": [22, 24, 28, 42], "tighter": 22, "side": 22, "long": [22, 28], "tail": 22, "rise": [22, 37, 42], "square_width": [22, 37, 42], "std_dev": [22, 37, 42], "numer": 22, "wave": 22, "analyt": 22, "round": 22, "squar": [22, 24, 28, 42], "___": 22, "val": [22, 28], "amp_setup": [22, 37, 42], "amp": [22, 28, 37, 42], "amplitud": 22, "getter_funct": 22, "target_integrand": 22, "original_dim": 22, "removed_axis_indic": 22, "axis_loc": 22, "raw": [22, 24, 27, 37], "ax": [22, 25, 37], "source_ax": 22, "target_ax": 22, "func": [22, 51], "readout_mitig": [24, 30, 36], "applyhybridreadoutmitig": [24, 30, 31], "applylinearreadoutmitig": [24, 30, 31], "applymatrixreadoutmitig": [24, 30, 31], "applypostprocreadoutmitig": [24, 30, 31], "applyreadoutmitig": [24, 30, 31], "get_readout_mitig": [24, 30, 31], "ecr": [24, 25, 45], "sx": [24, 25], "sxdg": [24, 25], "sdg": [24, 25], "tdg": [24, 25], "cx": [24, 25], "cy": [24, 25], "cz": [24, 25], "ccnot": [24, 25], "cnot": [24, 25], "create_label": [24, 25], "cswap": [24, 25], "deseri": [24, 25, 51, 53], "device_assign": [24, 25], "get_child_build": [24, 25], "measure_mean_sign": [24, 25], "measure_mean_z": [24, 25], "measure_single_shot_sign": [24, 25], "measure_single_shot_z": [24, 25], "merge_build": [24, 25], "phase_shift": [24, 25], "post_process": [24, 25, 32], "results_process": [24, 25], "splice": [24, 25], "swap": [24, 25], "frequency_shift": [24, 25], "measure_scope_mod": [24, 25], "measure_single_shot_bin": [24, 25], "create_cache_fold": [24, 26], "delete_cache_fold": [24, 26], "from_dict": [24, 27], "from_json": [24, 27], "to_json": [24, 27], "create_from_json": [24, 27], "linearmitig": [24, 27], "matrixmitig": [24, 27], "numpyarrai": [24, 27], "qasm2": [24, 27], "qasm3": [24, 27], "optimizedcircuit": [24, 27], "optimizedinstructioncount": [24, 27], "is_composit": [24, 27], "snake_case_nam": [24, 27], "binary_count": [24, 27], "squash_binary_result_arrai": [24, 27], "binarycount": [24, 27], "dynamicstructurereturn": [24, 27], "squashbinaryresultarrai": [24, 27], "cliffordsimp": [24, 27], "contextsimp": [24, 27], "decomposearbitrarilycontrolledg": [24, 27], "defaultmappingpass": [24, 27], "directionalcxg": [24, 27], "fullpeepholeoptimis": [24, 27], "globalisephasedx": [24, 27], "kakdecomposit": [24, 27], "One": [24, 27], "peepholeoptimise2q": [24, 27], "removebarri": [24, 27], "removediscard": [24, 27], "removeredund": [24, 27], "simplifymeasur": [24, 27], "threequbitsquash": [24, 27], "get_calibr": [24, 28], "load_calibr": [24, 28], "load_calibration_from_fil": [24, 28], "save_calibration_to_fil": [24, 28], "cross_reson": [24, 28], "cross_resonance_cancel": [24, 28], "freq_shift": [24, 28], "macq": [24, 28], "second_st": [24, 28], "ref_field": [24, 28], "append": [24, 28, 51], "baseband_frequ": [24, 28], "baseband_if_frequ": [24, 28], "block_tim": [24, 28], "create_freq_shift_pulse_channel": [24, 28], "create_pulse_channel": [24, 28], "full_id": [24, 28], "max_frequ": [24, 28], "min_frequ": [24, 28], "partial_id": [24, 28], "physical_channel_id": [24, 28, 36], "blackman": [24, 28, 42], "extra_soft_squar": [24, 28, 42], "gaussian_drag": [24, 28], "gaussian_squar": [24, 28], "gaussian_zero_edg": [24, 28], "rounded_squar": [24, 28], "setup_hold": [24, 28, 42], "softer_gaussian": [24, 28, 42], "softer_squar": [24, 28, 42], "soft_squar": [24, 28, 42], "pttype": [24, 28], "add_pulse_channel": [24, 28, 36], "get_auxiliary_devic": [24, 28], "get_default_pulse_channel": [24, 28], "get_pulse_channel": [24, 28], "multi_device_pulse_channel_typ": [24, 28], "add_coupled_qubit": [24, 28], "get_all_channel": [24, 28], "get_cross_resonance_cancellation_channel": [24, 28], "get_cross_resonance_channel": [24, 28], "get_drive_channel": [24, 28], "get_freq_shift_channel": [24, 28], "get_second_state_channel": [24, 28], "add_meta": [24, 29], "get_pp_for_vari": [24, 29], "return_": [24, 29], "inject": [24, 32], "revert": [24, 32], "load_model": [24, 32], "replac": [24, 28, 32, 37], "build_acquire_list": [24, 32], "build_physical_channel_buff": [24, 32], "build_pulse_channel_buff": [24, 32], "create_duration_timelin": [24, 32], "do_upconvert": [24, 32], "process_frequencyshift": [24, 32], "process_phasereset": [24, 32], "process_phaseshift": [24, 32], "process_puls": [24, 32], "run_post_process": [24, 32], "accumulated_sweep_iter": [24, 32], "add_sweep": [24, 32], "do_sweep": [24, 32], "from_qfil": [24, 32], "get_current_sweep_iter": [24, 32], "get_results_shap": [24, 32], "insert_result_at_sweep_posit": [24, 32], "is_finish": [24, 32], "reset_iter": [24, 32], "create_build": [24, 36], "create_runtim": [24, 36], "add_quantum_devic": [24, 36], "constrain": [24, 36], "get_devices_from_physical_channel": [24, 36], "get_devices_from_pulse_channel": [24, 36], "get_gate_u": [24, 36], "get_gate_x": [24, 36], "get_gate_i": [24, 36], "get_gate_z": [24, 36], "get_gate_zx": [24, 36], "get_hw_x_pi_2": [24, 36], "get_hw_z": [24, 36], "get_hw_zx_pi_4": [24, 36], "get_physical_baseband": [24, 36], "get_physical_channel": [24, 36], "get_pulse_channel_from_devic": [24, 36], "get_pulse_channel_from_id": [24, 36], "get_pulse_channels_from_physical_channel": [24, 36], "get_quantum_devic": [24, 36], "get_qubit": [24, 36], "has_qubit": [24, 36], "is_calibr": [24, 36], "resolve_qb_pulse_channel": [24, 36], "generate_nam": [24, 37], "suffix_incrementor": [24, 37], "with_random_nam": [24, 37], "add_channel": [24, 37], "quantum_target": [24, 37, 42], "down_convert": [24, 37], "linear_map_complex_to_r": [24, 37], "mean": [24, 28, 37], "mul": [24, 37], "if_trigg": [24, 38], "queue": [24, 38], "are_en": [24, 39], "as_dict": [24, 39], "get_metr": [24, 39], "optimized_circuit": [24, 39], "optimized_instruction_count": [24, 39], "record_metr": [24, 39], "are_metrics_en": [24, 39], "enable_metr": [24, 39], "optimize_qasm": [24, 40], "run_qiskit_optim": [24, 40], "actual_waveform": [24, 42], "waveform_definit": [24, 42, 43, 45], "descript": [24, 42], "tupl": [25, 28, 32, 36, 53], "while": [25, 28, 51], "fluid": 25, "consumpt": 25, "think": 25, "unpack": 25, "discard": 25, "builder_method": 25, "wrapped_value_return": 25, "leav": 25, "unimpl": 25, "basi": [25, 53], "theta": [25, 36, 45], "phi": [25, 36, 45], "lamb": [25, 36], "radii": 25, "compon": [25, 37], "directli": [25, 27, 51], "deal": [25, 37], "nest": [25, 32, 37], "non": [25, 28, 53], "clash": 25, "destin": 25, "blob": 25, "attribut": [25, 37], "node": [25, 32, 37, 44, 45, 48], "manipul": 25, "dure": [25, 32, 37, 39, 53], "inherit": 25, "other_build": 25, "resolv": [25, 32], "repeat_valu": 25, "res_format": 25, "statement": [25, 37, 45], "pretti": [25, 53], "easili": 25, "variables_and_valu": 25, "controlled_qubit": 25, "import": [25, 32, 51], "post": [25, 27, 32, 37], "well": [25, 27, 32], "common": [25, 28, 37], "addit": [25, 44, 51], "root_fold": 26, "consolid": 26, "creation": 26, "delet": 26, "dict_valu": 27, "load": [27, 28, 32, 45, 51], "throw": [27, 38], "kei": [27, 28, 51, 53], "dosen": 27, "json": [27, 44, 51, 53], "results_format": 27, "active_calibr": 27, "explicit": 27, "attempt": [27, 45, 53], "classmethod": 27, "flag": [27, 39, 48, 53], "interwoven": 27, "intenum": 27, "compos": 27, "signal": 27, "automat": 27, "mix": 27, "match": [27, 28, 45], "across": 27, "duplic": 27, "count": [27, 28], "switch": [27, 48], "format": [27, 51], "squash": 27, "singular": 27, "bit": [27, 45, 48, 51], "string": [27, 45, 51, 53], "tket_optim": 27, "32": [27, 32], "128": 27, "256": 27, "18": 27, "512": 27, "2048": 27, "1024": 27, "4096": 27, "8192": 27, "30": [27, 51], "lang": 27, "forward": [27, 28, 45], "keyword": [27, 51], "constructor": [27, 28, 51, 53], "pickl": 28, "calibration_str": 28, "file_path": [28, 45, 51], "locat": 28, "use_cwd": 28, "path": [28, 51], "7": 28, "unpickl": 28, "make_ref": 28, "max_depth": 28, "max_it": 28, "numeric_kei": 28, "use_decim": 28, "use_base85": 28, "fail_saf": 28, "pickler": 28, "refer": [28, 45, 53], "accur": 28, "circular": [28, 53], "py": 28, "obj_ref_id": 28, "v1_decod": 28, "on_miss": 28, "ignor": 28, "cyclic": 28, "pick": 28, "correctli": 28, "tag": 28, "detect": 28, "_obj": 28, "upon": [28, 51], "patch": 28, "origin": [28, 32], "mechan": 28, "jsonpickl": 28, "increment": 28, "reli": 28, "determinist": 28, "isn": 28, "memori": [28, 29], "pointer": 28, "But": [28, 32], "billion": 28, "element": [28, 53], "mani": 28, "simpli": [28, 37, 53], "expos": [28, 44], "lookup": 28, "fixed_if": 28, "250000000": 28, "channel_typ": 28, "auxiliary_devic": 28, "view": 28, "help": [28, 53], "encapsul": 28, "anoth": [28, 37, 53], "might": [28, 29, 32], "second": 28, "usag": 28, "opaqu": 28, "wrap": 28, "extra": [28, 42, 51], "effect": [28, 36, 37], "except": [28, 38, 49, 51, 53], "cross": [28, 36], "logic": 28, "simpl": [28, 32], "whose": 28, "main": [28, 51], "coupled_qubit": 28, "drive_amp": 28, "superconduct": [28, 36], "auxiliari": 28, "linked_qubit": 28, "qualiti": 28, "qubit_on": 28, "qubit_two": 28, "resonator_channel": 28, "measure_fixed_if": 28, "acquire_fixed_if": 28, "llvm": 29, "driven": 29, "ust": 29, "output": [29, 49, 51, 53], "represent": [29, 51, 53], "target_var": 29, "reliant": [29, 32], "timelin": 29, "apply_error_mitig": [30, 31], "apply_correction_qubit": [30, 31], "create_array_from_dict": [30, 31], "remap_result": [30, 31], "process_result": [30, 31], "hybrid_readout_base_class": 31, "noise_map": 31, "linear_readout_mitig": 31, "qubit_numb": [31, 36], "algo_dict": 31, "matrix_readout_mitig": 31, "output_length": 31, "post_processing_readout_base_class": 31, "readout_base_class": 31, "mitigation_config": 31, "entireti": 32, "analog": 32, "sort": [32, 36, 37, 39, 53], "injector": 32, "doubl": 32, "modifi": [32, 43, 45, 51], "normal": 32, "essenti": 32, "injection_metadata": 32, "startup_engin": 32, "restart": 32, "iter": [32, 37, 51, 53], "entri": 32, "insert": [32, 45, 51, 53], "field_valu": 32, "piec": [32, 36], "rel": 32, "2000": 32, "child": 32, "value_axi": 32, "respons": 32, "nested_sweep": 32, "dave": 32, "inner": 32, "outer": 32, "sam": 32, "15": 32, "previou": 32, "total": [32, 37], "littl": [32, 48], "onto": 32, "qfile": 32, "seen": 32, "polyhedra": 32, "lattic": 32, "p": [32, 36], "shape": [32, 37, 42], "arrai": [32, 37, 53], "mirror": 32, "results_arrai": 32, "finish": [32, 51], "sweep_length": 32, "nested_length": 32, "children": [32, 45, 51], "infer": 32, "too": [32, 48], "symbol": [32, 37], "var": 32, "len": 32, "fetch": [32, 37, 45, 51], "6th": 32, "back": 36, "existing_engin": 36, "date": 36, "angl": 36, "amp_scal": 36, "ch_type": 36, "host_device_id": 36, "aux_device_id": 36, "chanbit": 36, "linear": 36, "matrix": 36, "m3": 36, "talk": 36, "independ": 36, "bitstring_1": 36, "bitstring_2": 36, "mitig": 36, "strategi": 36, "henc": 36, "info": [36, 49, 51], "http": 36, "github": 36, "com": 36, "partner": 36, "mthree": 36, "creg": [36, 43, 45, 48], "qreg": [36, 43, 48], "extract": 36, "pattern": 36, "clreg_nam": 36, "clreg_index": 36, "existing_nam": 37, "filter": [37, 49, 51], "left": [37, 45], "scale_factor": [37, 42], "ignore_channel_scal": [37, 42], "send": [37, 45], "still": 37, "unknown": [37, 42], "come": [37, 51], "later": [37, 45], "programat": 37, "gate": [37, 43, 45, 48], "line": [37, 51], "anchor": 37, "reset_channel": 37, "linear_map_r": 37, "happen": [37, 48], "fpga": 37, "particularli": 37, "global": [37, 51], "meta": 37, "shot": 37, "res_process": 37, "ad": [37, 51], "8000": 37, "parent": 37, "differenti": 37, "sync_channel": 37, "tell": 37, "var_typ": 37, "prefix": [37, 51], "thread": 38, "multi": 38, "concurr": 38, "metadata": [38, 44], "captur": 38, "statu": 38, "runtimeerror": 38, "enabled_metr": 39, "pipelin": 39, "snake": 39, "overwrit": [39, 51], "collect": 39, "metric_typ": [39, 52], "record": [39, 51], "qasm_str": [40, 45, 48], "todo": 40, "qk": 40, "unlik": 40, "benefit": 40, "refin": 40, "soft": 42, "softer": 42, "wf_name": 42, "awg_frequency_bandwidth": [43, 44], "max_pulse_dur": [43, 44], "max_scal": [43, 44], "max_waveform_amplitud": [43, 44], "min_pulse_dur": [43, 44], "min_pulse_tim": [43, 44], "pulse_control_contraint": [43, 44], "to_json_dict": [43, 44], "for_hardwar": [43, 44], "giga": [43, 44], "kilo": [43, 44], "mega": [43, 44], "micro": [43, 44], "milli": [43, 44], "nano": [43, 44], "tera": [43, 44], "can_pars": [43, 45], "parser_languag": [43, 45], "walk_nod": [43, 45], "add_cnot": [43, 45], "add_creg": [43, 45], "add_delai": [43, 45, 48], "add_ecr": [43, 45], "add_if": [43, 45], "add_measur": [43, 45], "add_qreg": [43, 45], "add_reset": [43, 45], "add_unitari": [43, 45], "base_include_str": [43, 45], "load_default_g": [43, 45], "failur": [43, 45], "success": [43, 45], "ecr_gat": [43, 45], "ecr_qasm_str": [43, 45], "process_barri": [43, 45, 48], "process_cnot": [43, 45, 48], "process_creg": [43, 45, 48], "process_g": [43, 45, 48], "process_gate_definit": [43, 45, 48], "process_if": [43, 45, 48], "process_intrins": [43, 45], "process_measur": [43, 45, 48], "process_program": [43, 45, 48], "process_qreg": [43, 45, 48], "process_unitari": [43, 45, 48], "bit_declaration_stat": [43, 45], "cal_block": [43, 45], "calibration_definit": [43, 45], "calibration_grammar_declar": [43, 45], "complex_declaration_stat": [43, 45], "extern_fram": [43, 45], "extern_or_subroutine_cal": [43, 45], "extern_port": [43, 45], "frame_attribute_assign": [43, 45], "frame_definit": [43, 45], "gate_definit": [43, 45], "generate_expr_list_defcal_nam": [43, 45], "get_waveform_sampl": [43, 45], "init": [43, 45], "lark_pars": [43, 45], "quantum_barri": [43, 45], "quantum_declar": [43, 45], "quantum_gate_cal": [43, 45], "quantum_measur": [43, 45], "quantum_measurement_assignment_stat": [43, 45], "quantum_reset": [43, 45], "return_stat": [43, 45], "timing_box": [43, 45], "timing_instruct": [43, 45], "transform_to_valu": [43, 45], "build_with_target": [43, 45], "ref_inst": [43, 45], "barrier": [43, 48], "custom_g": [43, 48], "is_basic_g": [43, 48], "120": 44, "turn": [44, 48], "amen": 44, "web": 44, "togeth": [44, 51], "effort": 44, "si": 44, "k": 44, "m": 44, "qcaa": 45, "register_nam": 45, "cali_method": 45, "order_result_var": [45, 48], "raw_result": [45, 48], "rout": [45, 48], "lark": 45, "request": 45, "control_qb": 45, "target_qb": 45, "reg_nam": 45, "reg_length": 45, "if_bodi": 45, "_lambda": 45, "qubit_or_regist": 45, "openqasm": 45, "qelib1": 45, "inc": 45, "further": 45, "error": [45, 49, 51], "coerc": 45, "boolean": 45, "messag": [45, 51, 52], "q0": 45, "q1": 45, "ast": 45, "unitari": [45, 48], "term": [45, 48], "process_x": 45, "interpret": 45, "tree": 45, "expr_list": 45, "wf": 45, "earlei": 45, "lexer": 45, "throwawai": 45, "store": [45, 51], "child_tre": 45, "walk_vari": 45, "return_vari": 45, "analysi": 45, "qasm_method": 45, "qubit_arg": 45, "classic_arg": 45, "customunitari": 45, "allowed_g": 45, "disable_if": 45, "pulse_class": 45, "gate_nam": 45, "minimalist": 45, "Not": 45, "retriev": 45, "frame": 45, "extern": 45, "port": 45, "No": 48, "gate_def": 48, "param": 48, "matur": 48, "opt": 48, "pass_list": 48, "subgraph": 48, "circ": 48, "matter": 48, "Will": 48, "fail": 48, "minim": 48, "subset": 48, "logs_path": [49, 51], "makerecord": [49, 51], "record_override_kei": [49, 51], "save_object": [49, 51], "add_logg": [49, 51], "critic": [49, 51], "debug": [49, 51], "log": [49, 51], "create_initial_fil": [49, 51], "create_sub_folder_labber_styl": [49, 51], "get_log_file_path": [49, 51], "get_main_folder_path_labber_styl": [49, 51], "notset": [49, 51], "_log_fold": 51, "basic": 51, "setloggerclass": 51, "separ": [51, 53], "getlogg": 51, "some_nam": 51, "clean": 51, "jupyt": 51, "fn": 51, "lno": 51, "msg": 51, "exc_info": 51, "sinfo": 51, "overrid": 51, "print": [51, 53], "cell_typ": 51, "fit_typ": 51, "section_level": 51, "displai": 51, "tabl": 51, "markdown": 51, "syntax": 51, "header": 51, "row": 51, "latex": 51, "new_sect": 51, "titl": 51, "rest": 51, "sinusoid": 51, "sinusoid_exponenti": 51, "polynomi": 51, "exponenti": 51, "lorentzian": 51, "front": 51, "_enable_record_overrid": 51, "obj": [51, 53], "numpy_arr": 51, "loggers_or_nam": 51, "logger_nam": 51, "sever": 51, "houston": 51, "disast": 51, "thorni": 51, "conveni": 51, "interest": 51, "integ": [51, 53], "mysteri": 51, "correspond": 51, "stream": 51, "_io": 51, "textiowrapp": 51, "stdout": 51, "w": 51, "encod": [51, 53], "utf": 51, "streamhandl": 51, "consol": 51, "handler": 51, "sy": 51, "stderr": 51, "filehandl": 51, "write": 51, "stuff": 51, "text": 51, "flush": 51, "_close": 51, "42378": 51, "someth": 51, "deem": 51, "smaller": 51, "base_folder_path": 51, "labber_styl": 51, "cleanup": 51, "folder_nam": 51, "suffix": 51, "disk": 51, "labber": 51, "style": 51, "hierarchi": 51, "default_logger_base_directori": 51, "top": 51, "tmp": 51, "base_fold": 51, "file_nam": 51, "over_writ": 51, "50": 51, "40": 51, "20": 51, "module_nam": 51, "produc": 51, "exit": 51, "everyth": 51, "config_fil": 51, "log_fold": 51, "logger_set": 51, "defaultlogg": 51, "logger_config": 51, "default_logger_directori": 51, "temp": 51, "default_logger_cleanup": 51, "default_logger_labber_styl": 51, "similar": 51, "easier": 51, "sometim": 51, "sub_folder_path": 51, "metric_collect": 52, "log_level": 52, "serializable_typ": 53, "jsonencod": 53, "customis": 53, "There": 53, "four": 53, "dataclass": 53, "interior": 53, "__dict__": 53, "encount": 53, "sensibl": 53, "skipkei": 53, "typeerror": 53, "item": 53, "ensure_ascii": 53, "ascii": 53, "charact": 53, "escap": 53, "check_circular": 53, "prevent": 53, "infinit": 53, "recurs": 53, "recursionerror": 53, "allow_nan": 53, "nan": 53, "infin": 53, "behavior": 53, "compliant": 53, "consist": 53, "javascript": 53, "decod": 53, "valueerror": 53, "sort_kei": 53, "regress": 53, "compar": 53, "indent": 53, "member": 53, "newlin": 53, "compact": 53, "item_separ": 53, "key_separ": 53, "elimin": 53, "whitespac": 53, "serializ": 53, "arbitrari": 53, "def": 53, "self": 53, "jsondecod": 53, "object_hook": 53, "rpc": 53, "hint": 53, "object_pairs_hook": 53, "pair": 53, "prioriti": 53, "parse_float": 53, "equival": 53, "num_str": 53, "datatyp": 53, "decim": 53, "parse_int": 53, "parse_const": 53, "invalid": 53, "insid": 53, "31": 53, "rang": 53, "r": 53}, "objects": {"": [[5, 0, 0, "-", "qat"]], "qat": [[6, 0, 0, "-", "purr"]], "qat.purr": [[7, 0, 0, "-", "backends"], [24, 0, 0, "-", "compiler"], [43, 0, 0, "-", "integrations"], [49, 0, 0, "-", "utils"]], "qat.purr.backends": [[8, 0, 0, "-", "calibrations"], [10, 0, 0, "-", "echo"], [11, 0, 0, "-", "live"], [12, 0, 0, "-", "live_devices"], [13, 0, 0, "-", "qblox"], [21, 0, 0, "-", "realtime_chip_simulator"], [22, 0, 0, "-", "utilities"]], "qat.purr.backends.echo": [[10, 1, 1, "", "Connectivity"], [10, 1, 1, "", "EchoEngine"], [10, 4, 1, "", "add_direction_couplings_to_hardware"], [10, 4, 1, "", "apply_setup_to_hardware"], [10, 4, 1, "", "generate_connectivity"], [10, 4, 1, "", "get_default_echo_hardware"]], "qat.purr.backends.echo.Connectivity": [[10, 2, 1, "", "Ring"]], "qat.purr.backends.echo.EchoEngine": [[10, 3, 1, "", "optimize"], [10, 3, 1, "", "run_calibrations"]], "qat.purr.backends.live": [[11, 1, 1, "", "LiveDeviceEngine"], [11, 1, 1, "", "LiveHardwareModel"], [11, 4, 1, "", "apply_setup_to_hardware"], [11, 4, 1, "", "build_lucy_hardware"], [11, 4, 1, "", "sync_baseband_frequencies_to_value"]], "qat.purr.backends.live.LiveDeviceEngine": [[11, 3, 1, "", "build_baseband_frequencies"], [11, 2, 1, "", "model"], [11, 3, 1, "", "optimize"], [11, 3, 1, "", "process_reset"], [11, 3, 1, "", "shutdown"], [11, 3, 1, "", "startup"], [11, 3, 1, "", "validate"]], "qat.purr.backends.live.LiveHardwareModel": [[11, 3, 1, "", "add_device"], [11, 3, 1, "", "add_instrument"], [11, 3, 1, "", "add_physical_baseband"], [11, 3, 1, "", "add_physical_channel"], [11, 3, 1, "", "create_engine"], [11, 3, 1, "", "get_device"], [11, 3, 1, "", "get_instrument"]], "qat.purr.backends.live_devices": [[12, 1, 1, "", "ControlHardware"], [12, 1, 1, "", "ControlHardwareChannel"], [12, 1, 1, "", "DCBiasChannel"], [12, 1, 1, "", "Instrument"], [12, 1, 1, "", "LivePhysicalBaseband"]], "qat.purr.backends.live_devices.ControlHardware": [[12, 3, 1, "", "add_physical_channel"], [12, 3, 1, "", "set_data"], [12, 3, 1, "", "start_playback"]], "qat.purr.backends.live_devices.DCBiasChannel": [[12, 5, 1, "", "bias_value"], [12, 3, 1, "", "connect_to_instrument"]], "qat.purr.backends.live_devices.Instrument": [[12, 3, 1, "", "close"], [12, 3, 1, "", "connect"], [12, 3, 1, "", "disconnect"], [12, 5, 1, "", "driver"]], "qat.purr.backends.live_devices.LivePhysicalBaseband": [[12, 3, 1, "", "connect_to_instrument"], [12, 3, 1, "", "get_output_state"], [12, 3, 1, "", "set_frequency"], [12, 3, 1, "", "turn_off"], [12, 3, 1, "", "turn_on"]], "qat.purr.backends.qblox": [[14, 0, 0, "-", "codegen"], [15, 0, 0, "-", "config"], [16, 0, 0, "-", "constants"], [17, 0, 0, "-", "device"], [18, 0, 0, "-", "ir"], [19, 0, 0, "-", "live"]], "qat.purr.backends.qblox.codegen": [[14, 1, 1, "", "QbloxContext"], [14, 1, 1, "", "QbloxEmitter"], [14, 1, 1, "", "QbloxPackage"], [14, 4, 1, "", "calculate_duration"], [14, 4, 1, "", "get_nco_phase_arguments"], [14, 4, 1, "", "get_nco_set_frequency_arguments"]], "qat.purr.backends.qblox.codegen.QbloxContext": [[14, 3, 1, "", "clear"], [14, 3, 1, "", "create_package"], [14, 3, 1, "", "delay"], [14, 5, 1, "", "duration"], [14, 3, 1, "", "id"], [14, 3, 1, "", "is_empty"], [14, 3, 1, "", "measure_acquire"], [14, 3, 1, "", "reset_phase"], [14, 3, 1, "", "shift_frequency"], [14, 3, 1, "", "shift_phase"], [14, 3, 1, "", "synchronize"], [14, 3, 1, "", "waveform"]], "qat.purr.backends.qblox.codegen.QbloxEmitter": [[14, 3, 1, "", "emit"], [14, 3, 1, "", "optimize"]], "qat.purr.backends.qblox.codegen.QbloxPackage": [[14, 2, 1, "", "sequence"], [14, 2, 1, "", "sequencer_config"], [14, 2, 1, "", "target"]], "qat.purr.backends.qblox.config": [[15, 1, 1, "", "AttConfig"], [15, 1, 1, "", "AwgConfig"], [15, 1, 1, "", "ConnectionConfig"], [15, 1, 1, "", "GainConfig"], [15, 1, 1, "", "LoConfig"], [15, 1, 1, "", "MixerConfig"], [15, 1, 1, "", "ModuleConfig"], [15, 1, 1, "", "NcoConfig"], [15, 1, 1, "", "OffsetConfig"], [15, 1, 1, "", "QbloxConfig"], [15, 1, 1, "", "QbloxConfigHelper"], [15, 1, 1, "", "QcmConfigHelper"], [15, 1, 1, "", "QcmRfConfigHelper"], [15, 1, 1, "", "QrmConfigHelper"], [15, 1, 1, "", "QrmRfConfigHelper"], [15, 1, 1, "", "ScopeAcqConfig"], [15, 1, 1, "", "SequencerConfig"], [15, 1, 1, "", "SquareWeightAcq"], [15, 1, 1, "", "ThresholdedAcqConfig"], [15, 1, 1, "", "TtlAcqConfig"]], "qat.purr.backends.qblox.config.AttConfig": [[15, 2, 1, "", "in0"], [15, 2, 1, "", "out0"], [15, 2, 1, "", "out1"]], "qat.purr.backends.qblox.config.AwgConfig": [[15, 2, 1, "", "cont_mode_en_path0"], [15, 2, 1, "", "cont_mode_en_path1"], [15, 2, 1, "", "cont_mode_waveform_idx_path0"], [15, 2, 1, "", "cont_mode_waveform_idx_path1"], [15, 2, 1, "", "gain_path0"], [15, 2, 1, "", "gain_path1"], [15, 2, 1, "", "mod_en"], [15, 2, 1, "", "offset_path0"], [15, 2, 1, "", "offset_path1"], [15, 2, 1, "", "upsample_rate_path0"], [15, 2, 1, "", "upsample_rate_path1"]], "qat.purr.backends.qblox.config.ConnectionConfig": [[15, 2, 1, "", "acq"], [15, 2, 1, "", "acq_I"], [15, 2, 1, "", "acq_Q"], [15, 2, 1, "", "bulk_value"], [15, 2, 1, "", "out0"], [15, 2, 1, "", "out1"], [15, 2, 1, "", "out2"], [15, 2, 1, "", "out3"]], "qat.purr.backends.qblox.config.GainConfig": [[15, 2, 1, "", "in0"], [15, 2, 1, "", "in1"]], "qat.purr.backends.qblox.config.LoConfig": [[15, 2, 1, "", "out0_en"], [15, 2, 1, "", "out0_freq"], [15, 2, 1, "", "out0_in0_en"], [15, 2, 1, "", "out0_in0_freq"], [15, 2, 1, "", "out1_en"], [15, 2, 1, "", "out1_freq"]], "qat.purr.backends.qblox.config.MixerConfig": [[15, 2, 1, "", "gain_ratio"], [15, 2, 1, "", "phase_offset"]], "qat.purr.backends.qblox.config.ModuleConfig": [[15, 2, 1, "", "attenuation"], [15, 2, 1, "", "gain"], [15, 2, 1, "", "lo"], [15, 2, 1, "", "marker_inverts"], [15, 2, 1, "", "offset"], [15, 2, 1, "", "scope_acq"]], "qat.purr.backends.qblox.config.NcoConfig": [[15, 2, 1, "", "freq"], [15, 2, 1, "", "phase_offs"], [15, 2, 1, "", "prop_delay_comp"], [15, 2, 1, "", "prop_delay_comp_en"]], "qat.purr.backends.qblox.config.OffsetConfig": [[15, 2, 1, "", "in0"], [15, 2, 1, "", "in0_path0"], [15, 2, 1, "", "in0_path1"], [15, 2, 1, "", "in1"], [15, 2, 1, "", "out0"], [15, 2, 1, "", "out0_path0"], [15, 2, 1, "", "out0_path1"], [15, 2, 1, "", "out1"], [15, 2, 1, "", "out1_path0"], [15, 2, 1, "", "out1_path1"], [15, 2, 1, "", "out2"], [15, 2, 1, "", "out3"]], "qat.purr.backends.qblox.config.QbloxConfig": [[15, 2, 1, "", "module"], [15, 2, 1, "", "sequencers"], [15, 2, 1, "", "slot_idx"]], "qat.purr.backends.qblox.config.QbloxConfigHelper": [[15, 3, 1, "", "clear"], [15, 3, 1, "", "configure"], [15, 3, 1, "", "configure_awg"], [15, 3, 1, "", "configure_connection"], [15, 3, 1, "", "configure_mixer"], [15, 3, 1, "", "configure_module"], [15, 3, 1, "", "configure_nco"], [15, 3, 1, "", "configure_sequencer"]], "qat.purr.backends.qblox.config.QcmRfConfigHelper": [[15, 3, 1, "", "configure_attenuation"], [15, 3, 1, "", "configure_lo"], [15, 3, 1, "", "configure_module"], [15, 3, 1, "", "configure_offset"], [15, 3, 1, "", "configure_sequencer"]], "qat.purr.backends.qblox.config.QrmConfigHelper": [[15, 3, 1, "", "clear"], [15, 3, 1, "", "configure"], [15, 3, 1, "", "configure_scope_acq"]], "qat.purr.backends.qblox.config.QrmRfConfigHelper": [[15, 3, 1, "", "configure_acq"], [15, 3, 1, "", "configure_attenuation"], [15, 3, 1, "", "configure_lo"], [15, 3, 1, "", "configure_module"], [15, 3, 1, "", "configure_offset"], [15, 3, 1, "", "configure_sequencer"]], "qat.purr.backends.qblox.config.ScopeAcqConfig": [[15, 2, 1, "", "avg_mode_en_path0"], [15, 2, 1, "", "avg_mode_en_path1"], [15, 2, 1, "", "sequencer_select"], [15, 2, 1, "", "trigger_level_path0"], [15, 2, 1, "", "trigger_level_path1"], [15, 2, 1, "", "trigger_mode_path0"], [15, 2, 1, "", "trigger_mode_path1"]], "qat.purr.backends.qblox.config.SequencerConfig": [[15, 2, 1, "", "awg"], [15, 2, 1, "", "connection"], [15, 2, 1, "", "demod_en_acq"], [15, 2, 1, "", "marker_ovr_en"], [15, 2, 1, "", "marker_ovr_value"], [15, 2, 1, "", "mixer"], [15, 2, 1, "", "nco"], [15, 2, 1, "", "square_weight_acq"], [15, 2, 1, "", "sync_en"], [15, 2, 1, "", "thresholded_acq"], [15, 2, 1, "", "trigger_count_thresholds"], [15, 2, 1, "", "trigger_threshold_inverts"], [15, 2, 1, "", "ttl_acq"]], "qat.purr.backends.qblox.config.SquareWeightAcq": [[15, 2, 1, "", "integration_length"]], "qat.purr.backends.qblox.config.ThresholdedAcqConfig": [[15, 2, 1, "", "marker_address"], [15, 2, 1, "", "marker_en"], [15, 2, 1, "", "marker_invert"], [15, 2, 1, "", "rotation"], [15, 2, 1, "", "threshold"], [15, 2, 1, "", "trigger_address"], [15, 2, 1, "", "trigger_en"], [15, 2, 1, "", "trigger_invert"]], "qat.purr.backends.qblox.config.TtlAcqConfig": [[15, 2, 1, "", "auto_bin_incr_en"], [15, 2, 1, "", "input_select"], [15, 2, 1, "", "threshold"]], "qat.purr.backends.qblox.constants": [[16, 1, 1, "", "Constants"]], "qat.purr.backends.qblox.constants.Constants": [[16, 2, 1, "", "GRID_TIME"], [16, 2, 1, "", "IMMEDIATE_MAX_WAIT_TIME"], [16, 2, 1, "", "LOOP_UNROLL_THRESHOLD"], [16, 2, 1, "", "MAX_QCM_OFFSET_V"], [16, 2, 1, "", "MAX_QCM_RF_OFFSET_MV"], [16, 2, 1, "", "MAX_QRM_OFFSET_V"], [16, 2, 1, "", "MAX_QRM_RF_OFFSET_V"], [16, 2, 1, "", "MAX_SAMPLE_SIZE_SCOPE_ACQUISITIONS"], [16, 2, 1, "", "MAX_SAMPLE_SIZE_WAVEFORMS"], [16, 2, 1, "", "MIN_QCM_OFFSET_V"], [16, 2, 1, "", "MIN_QCM_RF_OFFSET_MV"], [16, 2, 1, "", "MIN_QRM_OFFSET_V"], [16, 2, 1, "", "MIN_QRM_RF_OFFSET_V"], [16, 2, 1, "", "NCO_FREQ_LIMIT_STEPS"], [16, 2, 1, "", "NCO_FREQ_STEPS_PER_HZ"], [16, 2, 1, "", "NCO_PHASE_STEPS_PER_DEG"], [16, 2, 1, "", "NUMBER_OF_REGISTERS"], [16, 2, 1, "", "NUMBER_OF_SEQUENCERS_QCM"], [16, 2, 1, "", "NUMBER_OF_SEQUENCERS_QRM"], [16, 2, 1, "", "REGISTER_SIZE"]], "qat.purr.backends.qblox.device": [[17, 1, 1, "", "DummyQbloxControlHardware"], [17, 1, 1, "", "QbloxControlHardware"], [17, 1, 1, "", "QbloxPhysicalBaseband"], [17, 1, 1, "", "QbloxPhysicalChannel"], [17, 1, 1, "", "QbloxResonator"]], "qat.purr.backends.qblox.device.DummyQbloxControlHardware": [[17, 3, 1, "", "set_data"], [17, 3, 1, "", "start_playback"]], "qat.purr.backends.qblox.device.QbloxControlHardware": [[17, 3, 1, "", "allocate_resources"], [17, 3, 1, "", "connect"], [17, 3, 1, "", "disconnect"], [17, 3, 1, "", "install"], [17, 3, 1, "", "set_data"], [17, 3, 1, "", "start_playback"]], "qat.purr.backends.qblox.device.QbloxPhysicalChannel": [[17, 2, 1, "", "baseband"], [17, 3, 1, "", "build_qubit"], [17, 3, 1, "", "build_resonator"], [17, 5, 1, "", "config"], [17, 5, 1, "", "slot_idx"]], "qat.purr.backends.qblox.device.QbloxResonator": [[17, 3, 1, "", "get_acquire_channel"], [17, 3, 1, "", "get_measure_channel"]], "qat.purr.backends.qblox.ir": [[18, 1, 1, "", "Opcode"], [18, 1, 1, "", "Q1asmInstruction"], [18, 1, 1, "", "Sequence"], [18, 1, 1, "", "SequenceBuilder"]], "qat.purr.backends.qblox.ir.Opcode": [[18, 2, 1, "", "ACQUIRE"], [18, 2, 1, "", "ACQUIRE_TTL"], [18, 2, 1, "", "ACQUIRE_WEIGHED"], [18, 2, 1, "", "ADD"], [18, 2, 1, "", "ADDRESS"], [18, 2, 1, "", "AND"], [18, 2, 1, "", "JUMP"], [18, 2, 1, "", "JUMP_GREATER_EQUALS"], [18, 2, 1, "", "JUMP_LESS_THAN"], [18, 2, 1, "", "LOOP"], [18, 2, 1, "", "MOVE"], [18, 2, 1, "", "NEW_LINE"], [18, 2, 1, "", "NOP"], [18, 2, 1, "", "NOT"], [18, 2, 1, "", "OR"], [18, 2, 1, "", "PLAY"], [18, 2, 1, "", "RESET_PHASE"], [18, 2, 1, "", "SET_AWG_GAIN"], [18, 2, 1, "", "SET_AWG_OFFSET"], [18, 2, 1, "", "SET_MARKER"], [18, 2, 1, "", "SET_NCO_FREQUENCY"], [18, 2, 1, "", "SET_NCO_PHASE"], [18, 2, 1, "", "SET_NCO_PHASE_OFFSET"], [18, 2, 1, "", "STOP"], [18, 2, 1, "", "SUB"], [18, 2, 1, "", "UPDATE_PARAMETERS"], [18, 2, 1, "", "WAIT"], [18, 2, 1, "", "WAIT_SYNC"], [18, 2, 1, "", "WAIT_TRIGGER"], [18, 2, 1, "", "XOR"]], "qat.purr.backends.qblox.ir.Sequence": [[18, 2, 1, "", "acquisitions"], [18, 2, 1, "", "program"], [18, 2, 1, "", "waveforms"], [18, 2, 1, "", "weights"]], "qat.purr.backends.qblox.ir.SequenceBuilder": [[18, 3, 1, "", "acquire"], [18, 3, 1, "", "acquire_ttl"], [18, 3, 1, "", "acquire_weighed"], [18, 3, 1, "", "add"], [18, 3, 1, "", "add_acquisition"], [18, 3, 1, "", "add_waveform"], [18, 3, 1, "", "add_weight"], [18, 3, 1, "", "build"], [18, 3, 1, "", "jge"], [18, 3, 1, "", "jlt"], [18, 3, 1, "", "jmp"], [18, 3, 1, "", "label"], [18, 3, 1, "", "logic_and"], [18, 3, 1, "", "logic_not"], [18, 3, 1, "", "logic_or"], [18, 3, 1, "", "logic_xor"], [18, 3, 1, "", "loop"], [18, 3, 1, "", "move"], [18, 3, 1, "", "nop"], [18, 3, 1, "", "play"], [18, 3, 1, "", "reset_ph"], [18, 3, 1, "", "set_awg_gain"], [18, 3, 1, "", "set_awg_offs"], [18, 3, 1, "", "set_freq"], [18, 3, 1, "", "set_mrk"], [18, 3, 1, "", "set_ph"], [18, 3, 1, "", "set_ph_delta"], [18, 3, 1, "", "stop"], [18, 3, 1, "", "sub"], [18, 3, 1, "", "upd_param"], [18, 3, 1, "", "wait"], [18, 3, 1, "", "wait_sync"], [18, 3, 1, "", "wait_trigger"]], "qat.purr.backends.qblox.live": [[19, 1, 1, "", "QbloxLiveEngine"], [19, 1, 1, "", "QbloxLiveHardwareModel"]], "qat.purr.backends.qblox.live.QbloxLiveEngine": [[19, 3, 1, "", "shutdown"], [19, 3, 1, "", "startup"]], "qat.purr.backends.qblox.live.QbloxLiveHardwareModel": [[19, 3, 1, "", "create_engine"]], "qat.purr.backends.realtime_chip_simulator": [[21, 1, 1, "", "ControlType"], [21, 1, 1, "", "CouplingType"], [21, 1, 1, "", "MeasurementStatistics"], [21, 1, 1, "", "OperatorInfo"], [21, 1, 1, "", "RTCSCoupling"], [21, 1, 1, "", "RTCSQubit"], [21, 1, 1, "", "RTCSResonator"], [21, 1, 1, "", "RealtimeChipSimEngine"], [21, 1, 1, "", "RealtimeSimHardwareModel"], [21, 1, 1, "", "Section"], [21, 4, 1, "", "add_qubit_coupling"], [21, 4, 1, "", "add_qubit_stack"], [21, 4, 1, "", "apply_setup_to_hardware"], [21, 4, 1, "", "create_subplots"], [21, 4, 1, "", "get_default_RTCS_hardware"], [21, 4, 1, "", "get_resonator_response_segments"], [21, 4, 1, "", "get_resonator_response_signal_segment"], [21, 4, 1, "", "get_resonator_response_splicing_indices"], [21, 4, 1, "", "get_simple_resonator_response"], [21, 4, 1, "", "random"], [21, 4, 1, "", "spline_time"], [21, 4, 1, "", "tukey_window"]], "qat.purr.backends.realtime_chip_simulator.ControlType": [[21, 2, 1, "", "MEASURE"], [21, 2, 1, "", "RESET"]], "qat.purr.backends.realtime_chip_simulator.CouplingType": [[21, 2, 1, "", "CrossKerr"], [21, 2, 1, "", "Exchange"]], "qat.purr.backends.realtime_chip_simulator.MeasurementStatistics": [[21, 3, 1, "", "build_tree"], [21, 3, 1, "", "extract_branch_trajectory"], [21, 3, 1, "", "extract_outcome_probabilities"], [21, 3, 1, "", "get_branch_nodes"]], "qat.purr.backends.realtime_chip_simulator.OperatorInfo": [[21, 2, 1, "", "name"], [21, 2, 1, "", "operator"], [21, 2, 1, "", "qubit_id"]], "qat.purr.backends.realtime_chip_simulator.RTCSCoupling": [[21, 3, 1, "", "targets"]], "qat.purr.backends.realtime_chip_simulator.RTCSQubit": [[21, 5, 1, "", "N"], [21, 5, 1, "", "rotating_frame_frequency"]], "qat.purr.backends.realtime_chip_simulator.RealtimeChipSimEngine": [[21, 3, 1, "", "build_simulator_resets"], [21, 3, 1, "", "get_branches"], [21, 3, 1, "", "get_tensor"], [21, 2, 1, "", "model"], [21, 3, 1, "", "optimize"], [21, 3, 1, "", "plot_dynamics"], [21, 3, 1, "", "plot_pulses"], [21, 3, 1, "", "process_reset"]], "qat.purr.backends.realtime_chip_simulator.RealtimeChipSimEngine.plot_dynamics.params": [[21, 6, 1, "", "branches"], [21, 6, 1, "", "operator_info"], [21, 6, 1, "", "step"]], "qat.purr.backends.realtime_chip_simulator.RealtimeChipSimEngine.plot_pulses.params": [[21, 6, 1, "", "channels"]], "qat.purr.backends.realtime_chip_simulator.RealtimeSimHardwareModel": [[21, 3, 1, "", "add_couplings"], [21, 2, 1, "", "couplings"], [21, 3, 1, "", "create_engine"]], "qat.purr.backends.realtime_chip_simulator.Section": [[21, 2, 1, "", "control_type"], [21, 2, 1, "", "drive_hamiltonian"], [21, 2, 1, "", "indices"], [21, 2, 1, "", "qubits"], [21, 2, 1, "", "simulation_time"]], "qat.purr.backends.utilities": [[22, 1, 1, "", "BlackmanFunction"], [22, 1, 1, "", "ComplexFunction"], [22, 1, 1, "", "Cos"], [22, 1, 1, "", "DragGaussianFunction"], [22, 1, 1, "", "ExtraSoftSquareFunction"], [22, 1, 1, "", "GaussianFunction"], [22, 1, 1, "", "GaussianSquare"], [22, 1, 1, "", "GaussianZeroEdgeFunction"], [22, 1, 1, "", "NumericFunction"], [22, 1, 1, "", "PositionData"], [22, 1, 1, "", "RoundedSquareFunction"], [22, 1, 1, "", "Sech"], [22, 1, 1, "", "SetupHoldFunction"], [22, 1, 1, "", "SimpleAcquire"], [22, 1, 1, "", "Sin"], [22, 1, 1, "", "SoftSquareFunction"], [22, 1, 1, "", "SofterGaussianFunction"], [22, 1, 1, "", "SofterSquareFunction"], [22, 1, 1, "", "SquareFunction"], [22, 4, 1, "", "evaluate_pulse_integral"], [22, 4, 1, "", "evaluate_shape"], [22, 4, 1, "", "get_axis_map"], [22, 4, 1, "", "plot_buffers"], [22, 4, 1, "", "predict_pulse_amplitude"], [22, 4, 1, "", "remove_axes"], [22, 4, 1, "", "software_post_process_discriminate"], [22, 4, 1, "", "software_post_process_down_convert"], [22, 4, 1, "", "software_post_process_linear_map_complex_to_real"], [22, 4, 1, "", "software_post_process_mean"], [22, 4, 1, "", "validate_input_array"]], "qat.purr.backends.utilities.BlackmanFunction": [[22, 3, 1, "", "derivative"], [22, 3, 1, "", "eval"]], "qat.purr.backends.utilities.ComplexFunction": [[22, 3, 1, "", "derivative"], [22, 2, 1, "", "dt"], [22, 3, 1, "", "eval"]], "qat.purr.backends.utilities.Cos": [[22, 3, 1, "", "eval"]], "qat.purr.backends.utilities.DragGaussianFunction": [[22, 3, 1, "", "eval"]], "qat.purr.backends.utilities.ExtraSoftSquareFunction": [[22, 3, 1, "", "eval"]], "qat.purr.backends.utilities.GaussianFunction": [[22, 3, 1, "", "derivative"], [22, 3, 1, "", "eval"]], "qat.purr.backends.utilities.GaussianSquare": [[22, 3, 1, "", "eval"]], "qat.purr.backends.utilities.GaussianZeroEdgeFunction": [[22, 3, 1, "", "eval"]], "qat.purr.backends.utilities.NumericFunction": [[22, 3, 1, "", "derivative"]], "qat.purr.backends.utilities.PositionData": [[22, 2, 1, "", "end"], [22, 2, 1, "", "instruction"], [22, 2, 1, "", "start"]], "qat.purr.backends.utilities.RoundedSquareFunction": [[22, 3, 1, "", "eval"], [22, 3, 1, "", "step"]], "qat.purr.backends.utilities.Sech": [[22, 3, 1, "", "eval"]], "qat.purr.backends.utilities.SetupHoldFunction": [[22, 3, 1, "", "eval"]], "qat.purr.backends.utilities.SimpleAcquire": [[22, 2, 1, "", "delay"], [22, 2, 1, "", "instruction"], [22, 2, 1, "", "mode"], [22, 2, 1, "", "output_variable"], [22, 2, 1, "", "physical_channel"], [22, 2, 1, "", "pulse_channel"], [22, 2, 1, "", "samples"], [22, 2, 1, "", "start"]], "qat.purr.backends.utilities.Sin": [[22, 3, 1, "", "eval"]], "qat.purr.backends.utilities.SoftSquareFunction": [[22, 3, 1, "", "eval"]], "qat.purr.backends.utilities.SofterGaussianFunction": [[22, 3, 1, "", "eval"]], "qat.purr.backends.utilities.SofterSquareFunction": [[22, 3, 1, "", "eval"]], "qat.purr.backends.utilities.SquareFunction": [[22, 3, 1, "", "derivative"], [22, 3, 1, "", "eval"]], "qat.purr.compiler": [[25, 0, 0, "-", "builders"], [26, 0, 0, "-", "caches"], [27, 0, 0, "-", "config"], [28, 0, 0, "-", "devices"], [29, 0, 0, "-", "emitter"], [30, 0, 0, "-", "error_mitigation"], [32, 0, 0, "-", "execution"], [33, 0, 0, "-", "experimental"], [36, 0, 0, "-", "hardware_models"], [37, 0, 0, "-", "instructions"], [38, 0, 0, "-", "interrupt"], [39, 0, 0, "-", "metrics"], [40, 0, 0, "-", "optimisers"], [42, 0, 0, "-", "waveforms"]], "qat.purr.compiler.builders": [[25, 1, 1, "", "Axis"], [25, 1, 1, "", "FluidBuilderWrapper"], [25, 1, 1, "", "InstructionBuilder"], [25, 1, 1, "", "QuantumInstructionBuilder"]], "qat.purr.compiler.builders.Axis": [[25, 2, 1, "", "X"], [25, 2, 1, "", "Y"], [25, 2, 1, "", "Z"]], "qat.purr.compiler.builders.InstructionBuilder": [[25, 3, 1, "", "ECR"], [25, 3, 1, "", "S"], [25, 3, 1, "", "SX"], [25, 3, 1, "", "SXdg"], [25, 3, 1, "", "Sdg"], [25, 3, 1, "", "T"], [25, 3, 1, "", "Tdg"], [25, 3, 1, "", "U"], [25, 3, 1, "", "X"], [25, 3, 1, "", "Y"], [25, 3, 1, "", "Z"], [25, 3, 1, "", "acquire"], [25, 3, 1, "", "add"], [25, 3, 1, "", "assign"], [25, 3, 1, "", "cX"], [25, 3, 1, "", "cY"], [25, 3, 1, "", "cZ"], [25, 3, 1, "", "ccnot"], [25, 3, 1, "", "clear"], [25, 3, 1, "", "cnot"], [25, 3, 1, "", "controlled"], [25, 3, 1, "", "create_label"], [25, 3, 1, "", "cswap"], [25, 3, 1, "", "delay"], [25, 3, 1, "", "deserialize"], [25, 3, 1, "", "device_assign"], [25, 3, 1, "", "get_child_builder"], [25, 3, 1, "", "had"], [25, 5, 1, "", "instructions"], [25, 3, 1, "", "jump"], [25, 3, 1, "", "measure"], [25, 3, 1, "", "measure_mean_signal"], [25, 3, 1, "", "measure_mean_z"], [25, 3, 1, "", "measure_single_shot_signal"], [25, 3, 1, "", "measure_single_shot_z"], [25, 3, 1, "", "merge_builder"], [25, 3, 1, "", "phase_shift"], [25, 3, 1, "", "post_processing"], [25, 3, 1, "", "pulse"], [25, 3, 1, "", "repeat"], [25, 3, 1, "", "reset"], [25, 3, 1, "", "results_processing"], [25, 3, 1, "", "returns"], [25, 3, 1, "", "serialize"], [25, 3, 1, "", "splice"], [25, 3, 1, "", "swap"], [25, 3, 1, "", "sweep"], [25, 3, 1, "", "synchronize"]], "qat.purr.compiler.builders.QuantumInstructionBuilder": [[25, 3, 1, "", "ECR"], [25, 3, 1, "", "U"], [25, 3, 1, "", "X"], [25, 3, 1, "", "Y"], [25, 3, 1, "", "Z"], [25, 3, 1, "", "acquire"], [25, 3, 1, "", "cnot"], [25, 3, 1, "", "delay"], [25, 3, 1, "", "frequency_shift"], [25, 3, 1, "", "get_child_builder"], [25, 3, 1, "", "measure"], [25, 3, 1, "", "measure_mean_signal"], [25, 3, 1, "", "measure_mean_z"], [25, 3, 1, "", "measure_scope_mode"], [25, 3, 1, "", "measure_single_shot_binned"], [25, 3, 1, "", "measure_single_shot_signal"], [25, 3, 1, "", "measure_single_shot_z"], [25, 3, 1, "", "phase_shift"], [25, 3, 1, "", "post_processing"], [25, 3, 1, "", "pulse"], [25, 3, 1, "", "sweep"], [25, 3, 1, "", "synchronize"]], "qat.purr.compiler.caches": [[26, 1, 1, "", "QatCache"]], "qat.purr.compiler.caches.QatCache": [[26, 3, 1, "", "create_cache_folders"], [26, 3, 1, "", "delete_cache_folders"]], "qat.purr.compiler.config": [[27, 1, 1, "", "CalibrationArguments"], [27, 1, 1, "", "CompilerConfig"], [27, 1, 1, "", "ErrorMitigationConfig"], [27, 1, 1, "", "ExperimentalFeatures"], [27, 1, 1, "", "InlineResultsProcessing"], [27, 1, 1, "", "Languages"], [27, 1, 1, "", "MetricsType"], [27, 1, 1, "", "OptimizationConfig"], [27, 1, 1, "", "QIROptimizations"], [27, 1, 1, "", "Qasm2Optimizations"], [27, 1, 1, "", "Qasm3Optimizations"], [27, 1, 1, "", "QatOptimizations"], [27, 1, 1, "", "Qiskit"], [27, 1, 1, "", "QiskitOptimizations"], [27, 1, 1, "", "QuantumResultsFormat"], [27, 1, 1, "", "ResultsFormatting"], [27, 1, 1, "", "Tket"], [27, 1, 1, "", "TketOptimizations"], [27, 4, 1, "", "get_config"], [27, 4, 1, "", "get_optimizer_config"], [27, 4, 1, "", "get_serializable_types"]], "qat.purr.compiler.config.CalibrationArguments": [[27, 3, 1, "", "from_dict"], [27, 3, 1, "", "from_json"], [27, 3, 1, "", "to_json"]], "qat.purr.compiler.config.CompilerConfig": [[27, 3, 1, "", "create_from_json"], [27, 3, 1, "", "from_json"], [27, 3, 1, "", "to_json"], [27, 3, 1, "", "validate"]], "qat.purr.compiler.config.ErrorMitigationConfig": [[27, 2, 1, "", "Empty"], [27, 2, 1, "", "LinearMitigation"], [27, 2, 1, "", "MatrixMitigation"]], "qat.purr.compiler.config.ExperimentalFeatures": [[27, 2, 1, "", "error_mitigation"]], "qat.purr.compiler.config.InlineResultsProcessing": [[27, 2, 1, "", "Binary"], [27, 2, 1, "", "Experiment"], [27, 2, 1, "", "NumpyArrays"], [27, 2, 1, "", "Program"], [27, 2, 1, "", "Raw"]], "qat.purr.compiler.config.Languages": [[27, 2, 1, "", "Empty"], [27, 2, 1, "", "QIR"], [27, 2, 1, "", "Qasm2"], [27, 2, 1, "", "Qasm3"]], "qat.purr.compiler.config.MetricsType": [[27, 2, 1, "", "Default"], [27, 2, 1, "", "Empty"], [27, 2, 1, "", "OptimizedCircuit"], [27, 2, 1, "", "OptimizedInstructionCount"], [27, 3, 1, "", "is_composite"], [27, 3, 1, "", "snake_case_name"]], "qat.purr.compiler.config.OptimizationConfig": [[27, 3, 1, "", "default"], [27, 3, 1, "", "disable"], [27, 3, 1, "", "minimum"]], "qat.purr.compiler.config.QatOptimizations": [[27, 2, 1, "", "Empty"]], "qat.purr.compiler.config.Qiskit": [[27, 3, 1, "", "default"]], "qat.purr.compiler.config.QiskitOptimizations": [[27, 2, 1, "", "Empty"]], "qat.purr.compiler.config.QuantumResultsFormat": [[27, 3, 1, "", "binary"], [27, 3, 1, "", "binary_count"], [27, 3, 1, "", "raw"], [27, 3, 1, "", "squash_binary_result_arrays"]], "qat.purr.compiler.config.ResultsFormatting": [[27, 2, 1, "", "BinaryCount"], [27, 2, 1, "", "DynamicStructureReturn"], [27, 2, 1, "", "SquashBinaryResultArrays"]], "qat.purr.compiler.config.Tket": [[27, 3, 1, "", "default"], [27, 3, 1, "", "disable"], [27, 3, 1, "", "minimum"]], "qat.purr.compiler.config.TketOptimizations": [[27, 2, 1, "", "CliffordSimp"], [27, 2, 1, "", "ContextSimp"], [27, 2, 1, "", "DecomposeArbitrarilyControlledGates"], [27, 2, 1, "", "DefaultMappingPass"], [27, 2, 1, "", "DirectionalCXGates"], [27, 2, 1, "", "Empty"], [27, 2, 1, "", "FullPeepholeOptimise"], [27, 2, 1, "", "GlobalisePhasedX"], [27, 2, 1, "", "KAKDecomposition"], [27, 2, 1, "", "One"], [27, 2, 1, "", "PeepholeOptimise2Q"], [27, 2, 1, "", "RemoveBarriers"], [27, 2, 1, "", "RemoveDiscarded"], [27, 2, 1, "", "RemoveRedundancies"], [27, 2, 1, "", "SimplifyMeasured"], [27, 2, 1, "", "ThreeQubitSquash"], [27, 2, 1, "", "Two"]], "qat.purr.compiler.devices": [[28, 1, 1, "", "Calibratable"], [28, 1, 1, "", "ChannelType"], [28, 1, 1, "", "CyclicRefPickler"], [28, 1, 1, "", "CyclicRefUnpickler"], [28, 1, 1, "", "FakeList"], [28, 1, 1, "", "FreqShiftPulseChannel"], [28, 1, 1, "", "PhysicalBaseband"], [28, 1, 1, "", "PhysicalChannel"], [28, 1, 1, "", "PulseChannel"], [28, 1, 1, "", "PulseChannelView"], [28, 1, 1, "", "PulseShapeType"], [28, 1, 1, "", "QuantumComponent"], [28, 1, 1, "", "QuantumDevice"], [28, 1, 1, "", "Qubit"], [28, 1, 1, "", "QubitCoupling"], [28, 1, 1, "", "Resonator"], [28, 4, 1, "", "add_cross_resonance"], [28, 4, 1, "", "build_qubit"], [28, 4, 1, "", "build_resonator"]], "qat.purr.compiler.devices.Calibratable": [[28, 3, 1, "", "get_calibration"], [28, 3, 1, "", "load_calibration"], [28, 3, 1, "", "load_calibration_from_file"], [28, 3, 1, "", "save_calibration_to_file"]], "qat.purr.compiler.devices.ChannelType": [[28, 2, 1, "", "acquire"], [28, 2, 1, "", "cross_resonance"], [28, 2, 1, "", "cross_resonance_cancellation"], [28, 2, 1, "", "drive"], [28, 2, 1, "", "freq_shift"], [28, 2, 1, "", "macq"], [28, 2, 1, "", "measure"], [28, 2, 1, "", "second_state"]], "qat.purr.compiler.devices.CyclicRefPickler": [[28, 2, 1, "", "ref_field"]], "qat.purr.compiler.devices.CyclicRefUnpickler": [[28, 3, 1, "", "reset"]], "qat.purr.compiler.devices.FakeList": [[28, 3, 1, "", "append"]], "qat.purr.compiler.devices.PhysicalChannel": [[28, 5, 1, "", "baseband_frequency"], [28, 5, 1, "", "baseband_if_frequency"], [28, 5, 1, "", "block_time"], [28, 3, 1, "", "create_freq_shift_pulse_channel"], [28, 3, 1, "", "create_pulse_channel"]], "qat.purr.compiler.devices.PulseChannel": [[28, 5, 1, "", "acquire_allowed"], [28, 5, 1, "", "baseband_frequency"], [28, 5, 1, "", "baseband_if_frequency"], [28, 5, 1, "", "block_size"], [28, 5, 1, "", "block_time"], [28, 3, 1, "", "full_id"], [28, 5, 1, "", "imbalance"], [28, 5, 1, "", "max_frequency"], [28, 5, 1, "", "min_frequency"], [28, 3, 1, "", "partial_id"], [28, 5, 1, "", "phase_offset"], [28, 5, 1, "", "physical_channel_id"], [28, 5, 1, "", "sample_time"]], "qat.purr.compiler.devices.PulseShapeType": [[28, 2, 1, "", "BLACKMAN"], [28, 2, 1, "", "COS"], [28, 2, 1, "", "EXTRA_SOFT_SQUARE"], [28, 2, 1, "", "GAUSSIAN"], [28, 2, 1, "", "GAUSSIAN_DRAG"], [28, 2, 1, "", "GAUSSIAN_SQUARE"], [28, 2, 1, "", "GAUSSIAN_ZERO_EDGE"], [28, 2, 1, "", "ROUNDED_SQUARE"], [28, 2, 1, "", "SECH"], [28, 2, 1, "", "SETUP_HOLD"], [28, 2, 1, "", "SIN"], [28, 2, 1, "", "SOFTER_GAUSSIAN"], [28, 2, 1, "", "SOFTER_SQUARE"], [28, 2, 1, "", "SOFT_SQUARE"], [28, 2, 1, "", "SQUARE"]], "qat.purr.compiler.devices.QuantumComponent": [[28, 3, 1, "", "full_id"]], "qat.purr.compiler.devices.QuantumDevice": [[28, 2, 1, "", "PTType"], [28, 3, 1, "", "add_pulse_channel"], [28, 3, 1, "", "create_pulse_channel"], [28, 3, 1, "", "get_auxiliary_devices"], [28, 3, 1, "", "get_default_pulse_channel"], [28, 3, 1, "", "get_pulse_channel"], [28, 2, 1, "", "multi_device_pulse_channel_types"]], "qat.purr.compiler.devices.Qubit": [[28, 3, 1, "", "add_coupled_qubit"], [28, 3, 1, "", "get_acquire_channel"], [28, 3, 1, "", "get_all_channels"], [28, 3, 1, "", "get_cross_resonance_cancellation_channel"], [28, 3, 1, "", "get_cross_resonance_channel"], [28, 3, 1, "", "get_drive_channel"], [28, 3, 1, "", "get_freq_shift_channel"], [28, 3, 1, "", "get_measure_channel"], [28, 3, 1, "", "get_second_state_channel"], [28, 2, 1, "", "measure_device"]], "qat.purr.compiler.devices.Resonator": [[28, 3, 1, "", "get_acquire_channel"], [28, 3, 1, "", "get_measure_channel"]], "qat.purr.compiler.emitter": [[29, 1, 1, "", "InstructionEmitter"], [29, 1, 1, "", "QatFile"], [29, 1, 1, "", "TimelineSegment"]], "qat.purr.compiler.emitter.InstructionEmitter": [[29, 3, 1, "", "emit"]], "qat.purr.compiler.emitter.QatFile": [[29, 3, 1, "", "add"], [29, 3, 1, "", "add_meta"], [29, 3, 1, "", "get_pp_for_variable"], [29, 5, 1, "", "instructions"], [29, 5, 1, "", "repeat"], [29, 5, 1, "", "return_"], [29, 5, 1, "", "sweeps"]], "qat.purr.compiler.error_mitigation": [[31, 0, 0, "-", "readout_mitigation"]], "qat.purr.compiler.error_mitigation.readout_mitigation": [[31, 1, 1, "", "ApplyHybridReadoutMitigation"], [31, 1, 1, "", "ApplyLinearReadoutMitigation"], [31, 1, 1, "", "ApplyMatrixReadoutMitigation"], [31, 1, 1, "", "ApplyPostProcReadoutMitigation"], [31, 1, 1, "", "ApplyReadoutMitigation"], [31, 4, 1, "", "get_readout_mitigation"]], "qat.purr.compiler.error_mitigation.readout_mitigation.ApplyHybridReadoutMitigation": [[31, 3, 1, "", "apply_error_mitigation"], [31, 2, 1, "", "name"]], "qat.purr.compiler.error_mitigation.readout_mitigation.ApplyLinearReadoutMitigation": [[31, 3, 1, "", "apply_correction_qubit"], [31, 3, 1, "", "apply_error_mitigation"], [31, 2, 1, "", "name"]], "qat.purr.compiler.error_mitigation.readout_mitigation.ApplyMatrixReadoutMitigation": [[31, 3, 1, "", "apply_error_mitigation"], [31, 3, 1, "", "create_array_from_dict"], [31, 2, 1, "", "name"], [31, 3, 1, "", "remap_result"]], "qat.purr.compiler.error_mitigation.readout_mitigation.ApplyPostProcReadoutMitigation": [[31, 3, 1, "", "apply_error_mitigation"], [31, 2, 1, "", "name"]], "qat.purr.compiler.error_mitigation.readout_mitigation.ApplyReadoutMitigation": [[31, 3, 1, "", "apply_error_mitigation"], [31, 2, 1, "", "name"], [31, 3, 1, "", "process_results"]], "qat.purr.compiler.execution": [[32, 1, 1, "", "DeviceInjector"], [32, 1, 1, "", "DeviceInjectors"], [32, 1, 1, "", "InjectionMetadata"], [32, 1, 1, "", "InstructionExecutionEngine"], [32, 1, 1, "", "IteratorInjector"], [32, 1, 1, "", "QuantumExecutionEngine"], [32, 1, 1, "", "SweepIterator"], [32, 1, 1, "", "ValueReplacement"], [32, 1, 1, "", "VariableInjector"]], "qat.purr.compiler.execution.DeviceInjector": [[32, 3, 1, "", "inject"], [32, 3, 1, "", "revert"]], "qat.purr.compiler.execution.DeviceInjectors": [[32, 3, 1, "", "inject"], [32, 3, 1, "", "revert"]], "qat.purr.compiler.execution.InjectionMetadata": [[32, 2, 1, "", "field"], [32, 3, 1, "", "inject"], [32, 3, 1, "", "is_empty"], [32, 3, 1, "", "revert"]], "qat.purr.compiler.execution.InstructionExecutionEngine": [[32, 3, 1, "", "execute"], [32, 3, 1, "", "load_model"], [32, 3, 1, "", "optimize"], [32, 3, 1, "", "run_calibrations"], [32, 3, 1, "", "shutdown"], [32, 3, 1, "", "startup"], [32, 3, 1, "", "validate"]], "qat.purr.compiler.execution.IteratorInjector": [[32, 3, 1, "", "replace"], [32, 3, 1, "", "revert"]], "qat.purr.compiler.execution.QuantumExecutionEngine": [[32, 3, 1, "", "build_acquire_list"], [32, 3, 1, "", "build_physical_channel_buffers"], [32, 3, 1, "", "build_pulse_channel_buffers"], [32, 3, 1, "", "calculate_duration"], [32, 3, 1, "", "create_duration_timeline"], [32, 3, 1, "", "do_upconvert"], [32, 3, 1, "", "execute"], [32, 3, 1, "", "optimize"], [32, 3, 1, "", "process_frequencyshift"], [32, 3, 1, "", "process_phasereset"], [32, 3, 1, "", "process_phaseshift"], [32, 3, 1, "", "process_pulse"], [32, 3, 1, "", "process_reset"], [32, 3, 1, "", "run_post_processing"], [32, 3, 1, "", "validate"]], "qat.purr.compiler.execution.SweepIterator": [[32, 5, 1, "", "accumulated_sweep_iteration"], [32, 3, 1, "", "add_sweep"], [32, 3, 1, "", "do_sweep"], [32, 3, 1, "", "from_qfile"], [32, 3, 1, "", "get_current_sweep_iteration"], [32, 3, 1, "", "get_results_shape"], [32, 3, 1, "", "insert_result_at_sweep_position"], [32, 3, 1, "", "is_finished"], [32, 5, 1, "", "length"], [32, 3, 1, "", "reset_iteration"], [32, 3, 1, "", "revert"]], "qat.purr.compiler.execution.ValueReplacement": [[32, 3, 1, "", "replace"], [32, 3, 1, "", "revert"]], "qat.purr.compiler.execution.VariableInjector": [[32, 3, 1, "", "replace"], [32, 3, 1, "", "revert"]], "qat.purr.compiler.hardware_models": [[36, 1, 1, "", "ErrorMitigation"], [36, 1, 1, "", "HardwareModel"], [36, 1, 1, "", "QuantumHardwareModel"], [36, 1, 1, "", "ReadoutMitigation"], [36, 4, 1, "", "get_cl2qu_index_mapping"]], "qat.purr.compiler.hardware_models.HardwareModel": [[36, 3, 1, "", "create_builder"], [36, 3, 1, "", "create_engine"], [36, 3, 1, "", "create_runtime"]], "qat.purr.compiler.hardware_models.QuantumHardwareModel": [[36, 3, 1, "", "add_device"], [36, 3, 1, "", "add_physical_baseband"], [36, 3, 1, "", "add_physical_channel"], [36, 3, 1, "", "add_pulse_channel"], [36, 3, 1, "", "add_quantum_device"], [36, 3, 1, "", "constrain"], [36, 3, 1, "", "create_builder"], [36, 3, 1, "", "create_engine"], [36, 3, 1, "", "get_device"], [36, 3, 1, "", "get_devices_from_physical_channel"], [36, 3, 1, "", "get_devices_from_pulse_channel"], [36, 3, 1, "", "get_gate_U"], [36, 3, 1, "", "get_gate_X"], [36, 3, 1, "", "get_gate_Y"], [36, 3, 1, "", "get_gate_Z"], [36, 3, 1, "", "get_gate_ZX"], [36, 3, 1, "", "get_hw_x_pi_2"], [36, 3, 1, "", "get_hw_z"], [36, 3, 1, "", "get_hw_zx_pi_4"], [36, 3, 1, "", "get_physical_baseband"], [36, 3, 1, "", "get_physical_channel"], [36, 3, 1, "", "get_pulse_channel_from_device"], [36, 3, 1, "", "get_pulse_channel_from_id"], [36, 3, 1, "", "get_pulse_channels_from_physical_channel"], [36, 3, 1, "", "get_quantum_device"], [36, 3, 1, "", "get_qubit"], [36, 3, 1, "", "has_qubit"], [36, 5, 1, "", "is_calibrated"], [36, 5, 1, "", "qubits"], [36, 3, 1, "", "resolve_qb_pulse_channel"], [36, 5, 1, "", "resonators"]], "qat.purr.compiler.instructions": [[37, 1, 1, "", "Acquire"], [37, 1, 1, "", "AcquireMode"], [37, 1, 1, "", "Assign"], [37, 1, 1, "", "BinaryOperator"], [37, 1, 1, "", "CrossResonanceCancelPulse"], [37, 1, 1, "", "CrossResonancePulse"], [37, 1, 1, "", "CustomPulse"], [37, 1, 1, "", "Delay"], [37, 1, 1, "", "DeviceUpdate"], [37, 1, 1, "", "DrivePulse"], [37, 1, 1, "", "Equals"], [37, 1, 1, "", "FrequencyShift"], [37, 1, 1, "", "GreaterOrEqualThan"], [37, 1, 1, "", "GreaterThan"], [37, 1, 1, "", "Id"], [37, 1, 1, "", "IndexAccessor"], [37, 1, 1, "", "Instruction"], [37, 1, 1, "", "Jump"], [37, 1, 1, "", "Label"], [37, 1, 1, "", "LessOrEqualThan"], [37, 1, 1, "", "LessThan"], [37, 1, 1, "", "MeasurePulse"], [37, 1, 1, "", "NotEquals"], [37, 1, 1, "", "PhaseReset"], [37, 1, 1, "", "PhaseShift"], [37, 1, 1, "", "PostProcessType"], [37, 1, 1, "", "PostProcessing"], [37, 1, 1, "", "ProcessAxis"], [37, 1, 1, "", "Pulse"], [37, 1, 1, "", "QuantumInstruction"], [37, 1, 1, "", "QuantumMetadata"], [37, 1, 1, "", "Repeat"], [37, 1, 1, "", "Reset"], [37, 1, 1, "", "ResultsProcessing"], [37, 1, 1, "", "Return"], [37, 1, 1, "", "SecondStatePulse"], [37, 1, 1, "", "Sweep"], [37, 1, 1, "", "SweepOperation"], [37, 1, 1, "", "SweepValue"], [37, 1, 1, "", "Synchronize"], [37, 1, 1, "", "Variable"], [37, 1, 1, "", "Waveform"], [37, 4, 1, "", "build_generated_name"], [37, 4, 1, "", "is_generated_name"]], "qat.purr.compiler.instructions.Acquire": [[37, 5, 1, "", "channel"], [37, 5, 1, "", "duration"], [37, 3, 1, "", "generate_name"], [37, 2, 1, "", "suffix_incrementor"]], "qat.purr.compiler.instructions.AcquireMode": [[37, 2, 1, "", "INTEGRATOR"], [37, 2, 1, "", "RAW"], [37, 2, 1, "", "SCOPE"]], "qat.purr.compiler.instructions.CustomPulse": [[37, 5, 1, "", "duration"]], "qat.purr.compiler.instructions.Delay": [[37, 5, 1, "", "duration"]], "qat.purr.compiler.instructions.FrequencyShift": [[37, 5, 1, "", "channel"]], "qat.purr.compiler.instructions.Label": [[37, 3, 1, "", "generate_name"], [37, 3, 1, "", "with_random_name"]], "qat.purr.compiler.instructions.PhaseReset": [[37, 3, 1, "", "add_channels"], [37, 2, 1, "", "quantum_targets"]], "qat.purr.compiler.instructions.PhaseShift": [[37, 5, 1, "", "channel"]], "qat.purr.compiler.instructions.PostProcessType": [[37, 2, 1, "", "DISCRIMINATE"], [37, 2, 1, "", "DOWN_CONVERT"], [37, 2, 1, "", "LINEAR_MAP_COMPLEX_TO_REAL"], [37, 2, 1, "", "MEAN"], [37, 2, 1, "", "MUL"]], "qat.purr.compiler.instructions.PostProcessing": [[37, 5, 1, "", "acquire"]], "qat.purr.compiler.instructions.ProcessAxis": [[37, 2, 1, "", "SEQUENCE"], [37, 2, 1, "", "TIME"]], "qat.purr.compiler.instructions.Pulse": [[37, 5, 1, "", "duration"]], "qat.purr.compiler.instructions.QuantumInstruction": [[37, 5, 1, "", "duration"]], "qat.purr.compiler.instructions.Sweep": [[37, 5, 1, "", "length"]], "qat.purr.compiler.instructions.Synchronize": [[37, 3, 1, "", "add_channels"], [37, 2, 1, "", "quantum_targets"]], "qat.purr.compiler.instructions.Variable": [[37, 3, 1, "", "generate_name"], [37, 3, 1, "", "with_random_name"]], "qat.purr.compiler.instructions.Waveform": [[37, 5, 1, "", "channel"]], "qat.purr.compiler.interrupt": [[38, 1, 1, "", "BasicInterrupt"], [38, 1, 1, "", "Interrupt"], [38, 7, 1, "", "InterruptError"], [38, 1, 1, "", "NullInterrupt"]], "qat.purr.compiler.interrupt.BasicInterrupt": [[38, 5, 1, "", "event"], [38, 3, 1, "", "if_triggered"], [38, 5, 1, "", "queue"], [38, 3, 1, "", "trigger"]], "qat.purr.compiler.interrupt.Interrupt": [[38, 3, 1, "", "if_triggered"], [38, 3, 1, "", "trigger"]], "qat.purr.compiler.interrupt.NullInterrupt": [[38, 3, 1, "", "if_triggered"], [38, 3, 1, "", "trigger"]], "qat.purr.compiler.metrics": [[39, 1, 1, "", "CompilationMetrics"], [39, 1, 1, "", "MetricsMixin"]], "qat.purr.compiler.metrics.CompilationMetrics": [[39, 3, 1, "", "are_enabled"], [39, 3, 1, "", "as_dict"], [39, 3, 1, "", "enable"], [39, 3, 1, "", "get_metric"], [39, 3, 1, "", "merge"], [39, 2, 1, "", "optimized_circuit"], [39, 2, 1, "", "optimized_instruction_count"], [39, 3, 1, "", "record_metric"]], "qat.purr.compiler.metrics.MetricsMixin": [[39, 3, 1, "", "are_metrics_enabled"], [39, 3, 1, "", "enable_metrics"], [39, 3, 1, "", "record_metric"]], "qat.purr.compiler.optimisers": [[40, 1, 1, "", "DefaultOptimizers"]], "qat.purr.compiler.optimisers.DefaultOptimizers": [[40, 3, 1, "", "optimize_qasm"], [40, 3, 1, "", "run_qiskit_optimization"]], "qat.purr.compiler.waveforms": [[42, 1, 1, "", "AbstractWaveform"], [42, 1, 1, "", "BlackmanWaveform"], [42, 1, 1, "", "ExtraSoftSquareWaveform"], [42, 1, 1, "", "GaussianWaveform"], [42, 1, 1, "", "SetupHoldWaveform"], [42, 1, 1, "", "SoftSquareWaveform"], [42, 1, 1, "", "SofterGaussianWaveform"], [42, 1, 1, "", "SofterSquareWaveform"], [42, 1, 1, "", "SquareWaveform"], [42, 1, 1, "", "WaveformDef"], [42, 4, 1, "", "build_waveform"], [42, 4, 1, "", "get_waveform_type"]], "qat.purr.compiler.waveforms.AbstractWaveform": [[42, 2, 1, "", "actual_waveforms"], [42, 2, 1, "", "waveform_definition"]], "qat.purr.compiler.waveforms.BlackmanWaveform": [[42, 2, 1, "", "waveform_definition"]], "qat.purr.compiler.waveforms.ExtraSoftSquareWaveform": [[42, 2, 1, "", "waveform_definition"]], "qat.purr.compiler.waveforms.GaussianWaveform": [[42, 2, 1, "", "waveform_definition"]], "qat.purr.compiler.waveforms.SetupHoldWaveform": [[42, 2, 1, "", "waveform_definition"]], "qat.purr.compiler.waveforms.SoftSquareWaveform": [[42, 2, 1, "", "waveform_definition"]], "qat.purr.compiler.waveforms.SofterGaussianWaveform": [[42, 2, 1, "", "waveform_definition"]], "qat.purr.compiler.waveforms.SofterSquareWaveform": [[42, 2, 1, "", "waveform_definition"]], "qat.purr.compiler.waveforms.SquareWaveform": [[42, 2, 1, "", "waveform_definition"]], "qat.purr.compiler.waveforms.WaveformDef": [[42, 2, 1, "", "description"], [42, 2, 1, "", "name"], [42, 2, 1, "", "type"]], "qat.purr.integrations": [[44, 0, 0, "-", "features"], [45, 0, 0, "-", "qasm"], [48, 0, 0, "-", "tket"]], "qat.purr.integrations.features": [[44, 1, 1, "", "Constraints"], [44, 1, 1, "", "FeatureMetadata"], [44, 1, 1, "", "OpenPulseFeatures"], [44, 1, 1, "", "Quantity"], [44, 1, 1, "", "Scale"], [44, 1, 1, "", "Unit"]], "qat.purr.integrations.features.Constraints": [[44, 2, 1, "", "awg_frequency_bandwidth"], [44, 2, 1, "", "max_pulse_duration"], [44, 2, 1, "", "max_scale"], [44, 2, 1, "", "max_waveform_amplitude"], [44, 2, 1, "", "min_pulse_duration"], [44, 2, 1, "", "min_pulse_time"], [44, 2, 1, "", "pulse_control_contraints"]], "qat.purr.integrations.features.FeatureMetadata": [[44, 3, 1, "", "to_json_dict"]], "qat.purr.integrations.features.OpenPulseFeatures": [[44, 3, 1, "", "for_hardware"], [44, 3, 1, "", "to_json_dict"]], "qat.purr.integrations.features.Quantity": [[44, 2, 1, "", "amount"], [44, 2, 1, "", "scale"], [44, 2, 1, "", "unit"]], "qat.purr.integrations.features.Scale": [[44, 2, 1, "", "DEFAULT"], [44, 2, 1, "", "GIGA"], [44, 2, 1, "", "KILO"], [44, 2, 1, "", "MEGA"], [44, 2, 1, "", "MICRO"], [44, 2, 1, "", "MILLI"], [44, 2, 1, "", "NANO"], [44, 2, 1, "", "TERA"]], "qat.purr.integrations.features.Unit": [[44, 2, 1, "", "FREQUENCY"], [44, 2, 1, "", "TIME"]], "qat.purr.integrations.qasm": [[45, 1, 1, "", "AbstractParser"], [45, 1, 1, "", "BitRegister"], [45, 1, 1, "", "CloudQasmParser"], [45, 1, 1, "", "CregIndexValue"], [45, 1, 1, "", "LarkOpenPulseContext"], [45, 1, 1, "", "LarkPatchingParser"], [45, 1, 1, "", "ParseResults"], [45, 1, 1, "", "Qasm2Parser"], [45, 1, 1, "", "Qasm3Parser"], [45, 1, 1, "", "QasmContext"], [45, 1, 1, "", "QasmMethodWrapper"], [45, 1, 1, "", "QubitRegister"], [45, 1, 1, "", "Registers"], [45, 1, 1, "", "RestrictedQasm2Parser"], [45, 1, 1, "", "UntargetedPulse"], [45, 4, 1, "", "extern_port_name"], [45, 4, 1, "", "fetch_gate_node"], [45, 4, 1, "", "get_frame_mappings"], [45, 4, 1, "", "get_port_mappings"], [45, 4, 1, "", "get_qasm_parser"], [45, 4, 1, "", "qasm_from_file"]], "qat.purr.integrations.qasm.AbstractParser": [[45, 3, 1, "", "can_parse"], [45, 3, 1, "", "parser_language"], [45, 3, 1, "", "walk_node"]], "qat.purr.integrations.qasm.CregIndexValue": [[45, 5, 1, "", "variable"]], "qat.purr.integrations.qasm.LarkPatchingParser": [[45, 3, 1, "", "add_cnot"], [45, 3, 1, "", "add_creg"], [45, 3, 1, "", "add_delay"], [45, 3, 1, "", "add_ecr"], [45, 3, 1, "", "add_if"], [45, 3, 1, "", "add_measure"], [45, 3, 1, "", "add_qreg"], [45, 3, 1, "", "add_reset"], [45, 3, 1, "", "add_unitary"], [45, 2, 1, "", "base_include_str"], [45, 3, 1, "", "load_default_gates"]], "qat.purr.integrations.qasm.ParseResults": [[45, 3, 1, "", "failure"], [45, 3, 1, "", "success"]], "qat.purr.integrations.qasm.Qasm2Parser": [[45, 3, 1, "", "can_parse"], [45, 2, 1, "", "ecr_gate"], [45, 2, 1, "", "ecr_qasm_str"], [45, 3, 1, "", "modify"], [45, 3, 1, "", "parse"], [45, 3, 1, "", "parser_language"], [45, 3, 1, "", "process_barrier"], [45, 3, 1, "", "process_cnot"], [45, 3, 1, "", "process_creg"], [45, 3, 1, "", "process_gate"], [45, 3, 1, "", "process_gate_definition"], [45, 3, 1, "", "process_if"], [45, 3, 1, "", "process_intrinsic"], [45, 3, 1, "", "process_measure"], [45, 3, 1, "", "process_program"], [45, 3, 1, "", "process_qreg"], [45, 3, 1, "", "process_reset"], [45, 3, 1, "", "process_unitary"], [45, 3, 1, "", "validate"], [45, 3, 1, "", "walk_node"]], "qat.purr.integrations.qasm.Qasm3Parser": [[45, 3, 1, "", "assignment"], [45, 3, 1, "", "bit_declaration_statement"], [45, 3, 1, "", "cal_block"], [45, 3, 1, "", "calibration_definition"], [45, 3, 1, "", "calibration_grammar_declaration"], [45, 3, 1, "", "can_parse"], [45, 3, 1, "", "complex_declaration_statement"], [45, 3, 1, "", "extern_frame"], [45, 3, 1, "", "extern_or_subroutine_call"], [45, 3, 1, "", "extern_port"], [45, 3, 1, "", "frame_attribute_assignment"], [45, 3, 1, "", "frame_definition"], [45, 3, 1, "", "gate_definition"], [45, 3, 1, "", "generate_expr_list_defcal_name"], [45, 3, 1, "", "get_waveform_samples"], [45, 3, 1, "", "initalize"], [45, 2, 1, "", "lark_parser"], [45, 3, 1, "", "parse"], [45, 3, 1, "", "parser_language"], [45, 3, 1, "", "quantum_barrier"], [45, 3, 1, "", "quantum_declaration"], [45, 3, 1, "", "quantum_gate_call"], [45, 3, 1, "", "quantum_measurement"], [45, 3, 1, "", "quantum_measurement_assignment_statement"], [45, 3, 1, "", "quantum_reset"], [45, 3, 1, "", "return_statement"], [45, 3, 1, "", "timing_box"], [45, 3, 1, "", "timing_instruction"], [45, 3, 1, "", "transform_to_value"], [45, 3, 1, "", "version"], [45, 3, 1, "", "walk_node"], [45, 3, 1, "", "waveform_definition"]], "qat.purr.integrations.qasm.RestrictedQasm2Parser": [[45, 3, 1, "", "validate"]], "qat.purr.integrations.qasm.UntargetedPulse": [[45, 3, 1, "", "build_with_target"], [45, 5, 1, "", "ref_instance"]], "qat.purr.integrations.tket": [[48, 1, 1, "", "TketBuilder"], [48, 1, 1, "", "TketQasmParser"], [48, 4, 1, "", "apply_default_transforms"], [48, 4, 1, "", "check_validity"], [48, 4, 1, "", "fetch_default_passes"], [48, 4, 1, "", "get_coupling_subgraphs"], [48, 4, 1, "", "optimize_circuit"], [48, 4, 1, "", "run_tket_optimizations"]], "qat.purr.integrations.tket.TketBuilder": [[48, 3, 1, "", "barrier"], [48, 3, 1, "", "creg"], [48, 3, 1, "", "custom_gate"], [48, 3, 1, "", "gate"], [48, 3, 1, "", "is_basic_gate"], [48, 3, 1, "", "measure"], [48, 3, 1, "", "qreg"]], "qat.purr.integrations.tket.TketQasmParser": [[48, 3, 1, "", "process_barrier"], [48, 3, 1, "", "process_cnot"], [48, 3, 1, "", "process_creg"], [48, 3, 1, "", "process_gate"], [48, 3, 1, "", "process_gate_definition"], [48, 3, 1, "", "process_if"], [48, 3, 1, "", "process_measure"], [48, 3, 1, "", "process_program"], [48, 3, 1, "", "process_qreg"], [48, 3, 1, "", "process_reset"], [48, 3, 1, "", "process_unitary"]], "qat.purr.utils": [[51, 0, 0, "-", "logger"], [52, 0, 0, "-", "logging_utils"], [53, 0, 0, "-", "serializer"]], "qat.purr.utils.logger": [[51, 1, 1, "", "BasicLogger"], [51, 1, 1, "", "CompositeLogger"], [51, 1, 1, "", "ConsoleLoggerHandler"], [51, 1, 1, "", "FileLoggerHandler"], [51, 1, 1, "", "JsonHandler"], [51, 1, 1, "", "JsonLoggerHandler"], [51, 1, 1, "", "KeywordFilter"], [51, 1, 1, "", "LevelFilter"], [51, 1, 1, "", "LogFolder"], [51, 1, 1, "", "LoggerLevel"], [51, 1, 1, "", "ModuleFilter"], [51, 4, 1, "", "close_logger"], [51, 4, 1, "", "get_default_logger"], [51, 4, 1, "", "get_logger_config"], [51, 4, 1, "", "import_logger_configuration"], [51, 4, 1, "", "load_object_from_log_folder"], [51, 4, 1, "", "save_object_to_log_folder"]], "qat.purr.utils.logger.BasicLogger": [[51, 3, 1, "", "close"], [51, 3, 1, "", "code"], [51, 5, 1, "", "logs_path"], [51, 3, 1, "", "makeRecord"], [51, 3, 1, "", "output"], [51, 2, 1, "", "record_override_key"], [51, 3, 1, "", "save_object"]], "qat.purr.utils.logger.BasicLogger.code.params": [[51, 6, 1, "", "source"]], "qat.purr.utils.logger.BasicLogger.output.params": [[51, 6, 1, "", "cell_type"], [51, 6, 1, "", "data"], [51, 6, 1, "", "fit_type"], [51, 6, 1, "", "msg"], [51, 6, 1, "", "section_level"]], "qat.purr.utils.logger.BasicLogger.save_object.params": [[51, 6, 1, "", "name"], [51, 6, 1, "", "obj"]], "qat.purr.utils.logger.CompositeLogger": [[51, 3, 1, "", "add_loggers"], [51, 3, 1, "", "close"], [51, 3, 1, "", "code"], [51, 3, 1, "", "critical"], [51, 3, 1, "", "debug"], [51, 3, 1, "", "error"], [51, 3, 1, "", "exception"], [51, 3, 1, "", "info"], [51, 3, 1, "", "log"], [51, 3, 1, "", "output"], [51, 3, 1, "", "save_object"], [51, 3, 1, "", "warning"]], "qat.purr.utils.logger.CompositeLogger.code.params": [[51, 6, 1, "", "source"]], "qat.purr.utils.logger.CompositeLogger.output.params": [[51, 6, 1, "", "cell_type"], [51, 6, 1, "", "data"], [51, 6, 1, "", "fit_type"], [51, 6, 1, "", "msg"], [51, 6, 1, "", "section_level"]], "qat.purr.utils.logger.CompositeLogger.params": [[51, 6, 1, "", "logger_names"]], "qat.purr.utils.logger.FileLoggerHandler": [[51, 3, 1, "", "create_initial_file"], [51, 3, 1, "", "emit"]], "qat.purr.utils.logger.JsonHandler": [[51, 3, 1, "", "create_initial_file"], [51, 3, 1, "", "emit"]], "qat.purr.utils.logger.JsonLoggerHandler": [[51, 3, 1, "", "create_initial_file"]], "qat.purr.utils.logger.KeywordFilter": [[51, 3, 1, "", "filter"]], "qat.purr.utils.logger.LevelFilter": [[51, 3, 1, "", "filter"]], "qat.purr.utils.logger.LogFolder": [[51, 3, 1, "", "close"], [51, 3, 1, "", "create_sub_folder_labber_style"], [51, 3, 1, "", "get_log_file_path"], [51, 3, 1, "", "get_main_folder_path_labber_style"]], "qat.purr.utils.logger.LogFolder.params": [[51, 6, 1, "", "base_folder_path"], [51, 6, 1, "", "cleanup"], [51, 6, 1, "", "folder_name"], [51, 6, 1, "", "labber_style"], [51, 6, 1, "", "prefix"], [51, 6, 1, "", "suffix"]], "qat.purr.utils.logger.LoggerLevel": [[51, 2, 1, "", "CODE"], [51, 2, 1, "", "CRITICAL"], [51, 2, 1, "", "DEBUG"], [51, 2, 1, "", "ERROR"], [51, 2, 1, "", "INFO"], [51, 2, 1, "", "NOTSET"], [51, 2, 1, "", "OUTPUT"], [51, 2, 1, "", "WARNING"]], "qat.purr.utils.logger.ModuleFilter": [[51, 3, 1, "", "filter"]], "qat.purr.utils.logger.get_logger_config.params": [[51, 6, 1, "", "config_file"], [51, 6, 1, "", "log_folder"]], "qat.purr.utils.logger.import_logger_configuration.params": [[51, 6, 1, "", "log_folder"], [51, 6, 1, "", "logger_config"]], "qat.purr.utils.logger.load_object_from_log_folder.params": [[51, 6, 1, "", "file_path"]], "qat.purr.utils.logging_utils": [[52, 4, 1, "", "log_duration"]], "qat.purr.utils.serializer": [[53, 1, 1, "", "CustomJSONEncoder"], [53, 1, 1, "", "CustomJsonDecoder"], [53, 4, 1, "", "json_dump"], [53, 4, 1, "", "json_dumps"], [53, 4, 1, "", "json_load"], [53, 4, 1, "", "json_loads"]], "qat.purr.utils.serializer.CustomJSONEncoder": [[53, 3, 1, "", "default"]], "qat.purr.utils.serializer.CustomJsonDecoder": [[53, 3, 1, "", "default"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:method", "4": "py:function", "5": "py:property", "6": "py:parameter", "7": "py:exception"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "method", "Python method"], "4": ["py", "function", "Python function"], "5": ["py", "property", "Python property"], "6": ["py", "parameter", "Python parameter"], "7": ["py", "exception", "Python exception"]}, "titleterms": {"code": 0, "conduct": 0, "our": 0, "commit": 0, "unaccept": 0, "behaviour": 0, "respons": 0, "applic": 0, "enforc": 0, "guidelin": 0, "contribut": [1, 2], "qat": [1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54], "tabl": [1, 2], "content": 1, "instal": [1, 2], "pull": 1, "request": 1, "your": 1, "first": 1, "timer": 1, "help": [1, 2], "how": 1, "report": 1, "bug": 1, "secur": 1, "vulner": 1, "open": 1, "an": 1, "issu": 1, "new": 1, "featur": [1, 44], "addit": 1, "inform": 1, "unit": 1, "test": 1, "build": 2, "from": 2, "sourc": 2, "roadmap": 2, "where": 2, "get": 2, "licenc": 2, "feedback": 2, "faq": 2, "indic": 2, "licens": 3, "packag": [5, 6, 7, 8, 13, 24, 30, 33, 43, 49], "subpackag": [5, 6, 7, 24], "submodul": [5, 7, 8, 13, 24, 30, 33, 43, 49], "purr": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53], "backend": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23], "calibr": [8, 9], "remot": 9, "modul": [9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54], "echo": 10, "live": [11, 19], "live_devic": 12, "qblox": [13, 14, 15, 16, 17, 18, 19], "codegen": 14, "config": [15, 27], "constant": 16, "devic": [17, 28], "ir": 18, "qiskit_simul": 20, "realtime_chip_simul": 21, "util": [22, 49, 50, 51, 52, 53], "verif": 23, "compil": [24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42], "builder": 25, "cach": 26, "emitt": 29, "error_mitig": [30, 31], "readout_mitig": 31, "execut": 32, "experiment": [33, 34], "frontend": [34, 35], "hardware_model": 36, "instruct": 37, "interrupt": 38, "metric": 39, "optimis": 40, "runtim": 41, "waveform": 42, "integr": [43, 44, 45, 46, 47, 48], "qasm": 45, "qir": 46, "qiskit": 47, "tket": 48, "benchmark": 50, "logger": 51, "logging_util": 52, "serial": 53}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 58}, "alltitles": {"Code of Conduct": [[0, "code-of-conduct"]], "Our Commitment": [[0, "our-commitment"]], "Unacceptable Behaviour": [[0, "unacceptable-behaviour"]], "Our Responsibilities": [[0, "our-responsibilities"]], "Applicability": [[0, "applicability"]], "Enforcement guidelines": [[0, "enforcement-guidelines"]], "Contributing to QAT": [[1, "contributing-to-qat"]], "Table of Contents": [[1, "table-of-contents"]], "Installation": [[1, "installation"], [2, "installation"]], "Pull Requests": [[1, "pull-requests"]], "Your First Contribution": [[1, "your-first-contribution"]], "First-Timer Help": [[1, "first-timer-help"]], "How to Report a Bug": [[1, "how-to-report-a-bug"]], "Security Vulnerabilities": [[1, "security-vulnerabilities"]], "Opening an Issue": [[1, "opening-an-issue"]], "New Features": [[1, "new-features"]], "Additional Information": [[1, "additional-information"]], "Unit Tests": [[1, "unit-tests"]], "Building from Source": [[2, "building-from-source"]], "Roadmap": [[2, "roadmap"]], "Contributing": [[2, "contributing"]], "Where to get help": [[2, "where-to-get-help"]], "Licence": [[2, "licence"]], "Feedback": [[2, "feedback"]], "FAQ": [[2, "faq"]], "Indices and tables": [[2, "indices-and-tables"]], "License": [[3, "license"]], "QAT": [[4, "qat"]], "qat package": [[5, "module-qat"]], "Subpackages": [[5, "subpackages"], [6, "subpackages"], [7, "subpackages"], [24, "subpackages"]], "Submodules": [[5, "submodules"], [7, "submodules"], [8, "submodules"], [13, "submodules"], [24, "submodules"], [30, "submodules"], [33, "submodules"], [43, "submodules"], [49, "submodules"]], "qat.purr package": [[6, "module-qat.purr"]], "qat.purr.backends package": [[7, "module-qat.purr.backends"]], "qat.purr.backends.calibrations package": [[8, "module-qat.purr.backends.calibrations"]], "qat.purr.backends.calibrations.remote module": [[9, "qat-purr-backends-calibrations-remote-module"]], "qat.purr.backends.echo module": [[10, "module-qat.purr.backends.echo"]], "qat.purr.backends.live module": [[11, "module-qat.purr.backends.live"]], "qat.purr.backends.live_devices module": [[12, "module-qat.purr.backends.live_devices"]], "qat.purr.backends.qblox package": [[13, "module-qat.purr.backends.qblox"]], "qat.purr.backends.qblox.codegen module": [[14, "module-qat.purr.backends.qblox.codegen"]], "qat.purr.backends.qblox.config module": [[15, "module-qat.purr.backends.qblox.config"]], "qat.purr.backends.qblox.constants module": [[16, "module-qat.purr.backends.qblox.constants"]], "qat.purr.backends.qblox.device module": [[17, "module-qat.purr.backends.qblox.device"]], "qat.purr.backends.qblox.ir module": [[18, "module-qat.purr.backends.qblox.ir"]], "qat.purr.backends.qblox.live module": [[19, "module-qat.purr.backends.qblox.live"]], "qat.purr.backends.qiskit_simulator module": [[20, "qat-purr-backends-qiskit-simulator-module"]], "qat.purr.backends.realtime_chip_simulator module": [[21, "module-qat.purr.backends.realtime_chip_simulator"]], "qat.purr.backends.utilities module": [[22, "module-qat.purr.backends.utilities"]], "qat.purr.backends.verification module": [[23, "qat-purr-backends-verification-module"]], "qat.purr.compiler package": [[24, "module-qat.purr.compiler"]], "qat.purr.compiler.builders module": [[25, "module-qat.purr.compiler.builders"]], "qat.purr.compiler.caches module": [[26, "module-qat.purr.compiler.caches"]], "qat.purr.compiler.config module": [[27, "module-qat.purr.compiler.config"]], "qat.purr.compiler.devices module": [[28, "module-qat.purr.compiler.devices"]], "qat.purr.compiler.emitter module": [[29, "module-qat.purr.compiler.emitter"]], "qat.purr.compiler.error_mitigation package": [[30, "module-qat.purr.compiler.error_mitigation"]], "qat.purr.compiler.error_mitigation.readout_mitigation module": [[31, "module-qat.purr.compiler.error_mitigation.readout_mitigation"]], "qat.purr.compiler.execution module": [[32, "module-qat.purr.compiler.execution"]], "qat.purr.compiler.experimental package": [[33, "module-qat.purr.compiler.experimental"]], "qat.purr.compiler.experimental.frontends module": [[34, "qat-purr-compiler-experimental-frontends-module"]], "qat.purr.compiler.frontends module": [[35, "qat-purr-compiler-frontends-module"]], "qat.purr.compiler.hardware_models module": [[36, "module-qat.purr.compiler.hardware_models"]], "qat.purr.compiler.instructions module": [[37, "module-qat.purr.compiler.instructions"]], "qat.purr.compiler.interrupt module": [[38, "module-qat.purr.compiler.interrupt"]], "qat.purr.compiler.metrics module": [[39, "module-qat.purr.compiler.metrics"]], "qat.purr.compiler.optimisers module": [[40, "module-qat.purr.compiler.optimisers"]], "qat.purr.compiler.runtime module": [[41, "qat-purr-compiler-runtime-module"]], "qat.purr.compiler.waveforms module": [[42, "module-qat.purr.compiler.waveforms"]], "qat.purr.integrations package": [[43, "module-qat.purr.integrations"]], "qat.purr.integrations.features module": [[44, "module-qat.purr.integrations.features"]], "qat.purr.integrations.qasm module": [[45, "module-qat.purr.integrations.qasm"]], "qat.purr.integrations.qir module": [[46, "qat-purr-integrations-qir-module"]], "qat.purr.integrations.qiskit module": [[47, "qat-purr-integrations-qiskit-module"]], "qat.purr.integrations.tket module": [[48, "module-qat.purr.integrations.tket"]], "qat.purr.utils package": [[49, "module-qat.purr.utils"]], "qat.purr.utils.benchmarking module": [[50, "qat-purr-utils-benchmarking-module"]], "qat.purr.utils.logger module": [[51, "module-qat.purr.utils.logger"]], "qat.purr.utils.logging_utils module": [[52, "module-qat.purr.utils.logging_utils"]], "qat.purr.utils.serializer module": [[53, "module-qat.purr.utils.serializer"]], "qat.qat module": [[54, "qat-qat-module"]]}, "indexentries": {"module": [[5, "module-qat"], [6, "module-qat.purr"], [7, "module-qat.purr.backends"], [8, "module-qat.purr.backends.calibrations"], [10, "module-qat.purr.backends.echo"], [11, "module-qat.purr.backends.live"], [12, "module-qat.purr.backends.live_devices"], [13, "module-qat.purr.backends.qblox"], [14, "module-qat.purr.backends.qblox.codegen"], [15, "module-qat.purr.backends.qblox.config"], [16, "module-qat.purr.backends.qblox.constants"], [17, "module-qat.purr.backends.qblox.device"], [18, "module-qat.purr.backends.qblox.ir"], [19, "module-qat.purr.backends.qblox.live"], [21, "module-qat.purr.backends.realtime_chip_simulator"], [22, "module-qat.purr.backends.utilities"], [24, "module-qat.purr.compiler"], [25, "module-qat.purr.compiler.builders"], [26, "module-qat.purr.compiler.caches"], [27, "module-qat.purr.compiler.config"], [28, "module-qat.purr.compiler.devices"], [29, "module-qat.purr.compiler.emitter"], [30, "module-qat.purr.compiler.error_mitigation"], [31, "module-qat.purr.compiler.error_mitigation.readout_mitigation"], [32, "module-qat.purr.compiler.execution"], [33, "module-qat.purr.compiler.experimental"], [36, "module-qat.purr.compiler.hardware_models"], [37, "module-qat.purr.compiler.instructions"], [38, "module-qat.purr.compiler.interrupt"], [39, "module-qat.purr.compiler.metrics"], [40, "module-qat.purr.compiler.optimisers"], [42, "module-qat.purr.compiler.waveforms"], [43, "module-qat.purr.integrations"], [44, "module-qat.purr.integrations.features"], [45, "module-qat.purr.integrations.qasm"], [48, "module-qat.purr.integrations.tket"], [49, "module-qat.purr.utils"], [51, "module-qat.purr.utils.logger"], [52, "module-qat.purr.utils.logging_utils"], [53, "module-qat.purr.utils.serializer"]], "qat": [[5, "module-qat"]], "qat.purr": [[6, "module-qat.purr"]], "qat.purr.backends": [[7, "module-qat.purr.backends"]], "qat.purr.backends.calibrations": [[8, "module-qat.purr.backends.calibrations"]], "connectivity (class in qat.purr.backends.echo)": [[10, "qat.purr.backends.echo.Connectivity"]], "echoengine (class in qat.purr.backends.echo)": [[10, "qat.purr.backends.echo.EchoEngine"]], "ring (connectivity attribute)": [[10, "qat.purr.backends.echo.Connectivity.Ring"]], "add_direction_couplings_to_hardware() (in module qat.purr.backends.echo)": [[10, "qat.purr.backends.echo.add_direction_couplings_to_hardware"]], "apply_setup_to_hardware() (in module qat.purr.backends.echo)": [[10, "qat.purr.backends.echo.apply_setup_to_hardware"]], "generate_connectivity() (in module qat.purr.backends.echo)": [[10, "qat.purr.backends.echo.generate_connectivity"]], "get_default_echo_hardware() (in module qat.purr.backends.echo)": [[10, "qat.purr.backends.echo.get_default_echo_hardware"]], "optimize() (echoengine method)": [[10, "qat.purr.backends.echo.EchoEngine.optimize"]], "qat.purr.backends.echo": [[10, "module-qat.purr.backends.echo"]], "run_calibrations() (echoengine method)": [[10, "qat.purr.backends.echo.EchoEngine.run_calibrations"]], "livedeviceengine (class in qat.purr.backends.live)": [[11, "qat.purr.backends.live.LiveDeviceEngine"]], "livehardwaremodel (class in qat.purr.backends.live)": [[11, "qat.purr.backends.live.LiveHardwareModel"]], "add_device() (livehardwaremodel method)": [[11, "qat.purr.backends.live.LiveHardwareModel.add_device"]], "add_instrument() (livehardwaremodel method)": [[11, "qat.purr.backends.live.LiveHardwareModel.add_instrument"]], "add_physical_baseband() (livehardwaremodel method)": [[11, "qat.purr.backends.live.LiveHardwareModel.add_physical_baseband"]], "add_physical_channel() (livehardwaremodel method)": [[11, "qat.purr.backends.live.LiveHardwareModel.add_physical_channel"]], "apply_setup_to_hardware() (in module qat.purr.backends.live)": [[11, "qat.purr.backends.live.apply_setup_to_hardware"]], "build_baseband_frequencies() (livedeviceengine method)": [[11, "qat.purr.backends.live.LiveDeviceEngine.build_baseband_frequencies"]], "build_lucy_hardware() (in module qat.purr.backends.live)": [[11, "qat.purr.backends.live.build_lucy_hardware"]], "create_engine() (livehardwaremodel method)": [[11, "qat.purr.backends.live.LiveHardwareModel.create_engine"]], "get_device() (livehardwaremodel method)": [[11, "qat.purr.backends.live.LiveHardwareModel.get_device"]], "get_instrument() (livehardwaremodel method)": [[11, "qat.purr.backends.live.LiveHardwareModel.get_instrument"]], "model (livedeviceengine attribute)": [[11, "qat.purr.backends.live.LiveDeviceEngine.model"]], "optimize() (livedeviceengine method)": [[11, "qat.purr.backends.live.LiveDeviceEngine.optimize"]], "process_reset() (livedeviceengine method)": [[11, "qat.purr.backends.live.LiveDeviceEngine.process_reset"]], "qat.purr.backends.live": [[11, "module-qat.purr.backends.live"]], "shutdown() (livedeviceengine method)": [[11, "qat.purr.backends.live.LiveDeviceEngine.shutdown"]], "startup() (livedeviceengine method)": [[11, "qat.purr.backends.live.LiveDeviceEngine.startup"]], "sync_baseband_frequencies_to_value() (in module qat.purr.backends.live)": [[11, "qat.purr.backends.live.sync_baseband_frequencies_to_value"]], "validate() (livedeviceengine method)": [[11, "qat.purr.backends.live.LiveDeviceEngine.validate"]], "controlhardware (class in qat.purr.backends.live_devices)": [[12, "qat.purr.backends.live_devices.ControlHardware"]], "controlhardwarechannel (class in qat.purr.backends.live_devices)": [[12, "qat.purr.backends.live_devices.ControlHardwareChannel"]], "dcbiaschannel (class in qat.purr.backends.live_devices)": [[12, "qat.purr.backends.live_devices.DCBiasChannel"]], "instrument (class in qat.purr.backends.live_devices)": [[12, "qat.purr.backends.live_devices.Instrument"]], "livephysicalbaseband (class in qat.purr.backends.live_devices)": [[12, "qat.purr.backends.live_devices.LivePhysicalBaseband"]], "add_physical_channel() (controlhardware method)": [[12, "qat.purr.backends.live_devices.ControlHardware.add_physical_channel"]], "bias_value (dcbiaschannel property)": [[12, "qat.purr.backends.live_devices.DCBiasChannel.bias_value"]], "close() (instrument method)": [[12, "qat.purr.backends.live_devices.Instrument.close"]], "connect() (instrument method)": [[12, "qat.purr.backends.live_devices.Instrument.connect"]], "connect_to_instrument() (dcbiaschannel method)": [[12, "qat.purr.backends.live_devices.DCBiasChannel.connect_to_instrument"]], "connect_to_instrument() (livephysicalbaseband method)": [[12, "qat.purr.backends.live_devices.LivePhysicalBaseband.connect_to_instrument"]], "disconnect() (instrument method)": [[12, "qat.purr.backends.live_devices.Instrument.disconnect"]], "driver (instrument property)": [[12, "qat.purr.backends.live_devices.Instrument.driver"]], "get_output_state() (livephysicalbaseband method)": [[12, "qat.purr.backends.live_devices.LivePhysicalBaseband.get_output_state"]], "qat.purr.backends.live_devices": [[12, "module-qat.purr.backends.live_devices"]], "set_data() (controlhardware method)": [[12, "qat.purr.backends.live_devices.ControlHardware.set_data"]], "set_frequency() (livephysicalbaseband method)": [[12, "qat.purr.backends.live_devices.LivePhysicalBaseband.set_frequency"]], "start_playback() (controlhardware method)": [[12, "qat.purr.backends.live_devices.ControlHardware.start_playback"]], "turn_off() (livephysicalbaseband method)": [[12, "qat.purr.backends.live_devices.LivePhysicalBaseband.turn_off"]], "turn_on() (livephysicalbaseband method)": [[12, "qat.purr.backends.live_devices.LivePhysicalBaseband.turn_on"]], "qat.purr.backends.qblox": [[13, "module-qat.purr.backends.qblox"]], "qbloxcontext (class in qat.purr.backends.qblox.codegen)": [[14, "qat.purr.backends.qblox.codegen.QbloxContext"]], "qbloxemitter (class in qat.purr.backends.qblox.codegen)": [[14, "qat.purr.backends.qblox.codegen.QbloxEmitter"]], "qbloxpackage (class in qat.purr.backends.qblox.codegen)": [[14, "qat.purr.backends.qblox.codegen.QbloxPackage"]], "calculate_duration() (in module qat.purr.backends.qblox.codegen)": [[14, "qat.purr.backends.qblox.codegen.calculate_duration"]], "clear() (qbloxcontext method)": [[14, "qat.purr.backends.qblox.codegen.QbloxContext.clear"]], "create_package() (qbloxcontext method)": [[14, "qat.purr.backends.qblox.codegen.QbloxContext.create_package"]], "delay() (qbloxcontext method)": [[14, "qat.purr.backends.qblox.codegen.QbloxContext.delay"]], "duration (qbloxcontext property)": [[14, "qat.purr.backends.qblox.codegen.QbloxContext.duration"]], "emit() (qbloxemitter method)": [[14, "qat.purr.backends.qblox.codegen.QbloxEmitter.emit"]], "get_nco_phase_arguments() (in module qat.purr.backends.qblox.codegen)": [[14, "qat.purr.backends.qblox.codegen.get_nco_phase_arguments"]], "get_nco_set_frequency_arguments() (in module qat.purr.backends.qblox.codegen)": [[14, "qat.purr.backends.qblox.codegen.get_nco_set_frequency_arguments"]], "id() (qbloxcontext method)": [[14, "qat.purr.backends.qblox.codegen.QbloxContext.id"]], "is_empty() (qbloxcontext method)": [[14, "qat.purr.backends.qblox.codegen.QbloxContext.is_empty"]], "measure_acquire() (qbloxcontext method)": [[14, "qat.purr.backends.qblox.codegen.QbloxContext.measure_acquire"]], "optimize() (qbloxemitter method)": [[14, "qat.purr.backends.qblox.codegen.QbloxEmitter.optimize"]], "qat.purr.backends.qblox.codegen": [[14, "module-qat.purr.backends.qblox.codegen"]], "reset_phase() (qbloxcontext static method)": [[14, "qat.purr.backends.qblox.codegen.QbloxContext.reset_phase"]], "sequence (qbloxpackage attribute)": [[14, "qat.purr.backends.qblox.codegen.QbloxPackage.sequence"]], "sequencer_config (qbloxpackage attribute)": [[14, "qat.purr.backends.qblox.codegen.QbloxPackage.sequencer_config"]], "shift_frequency() (qbloxcontext method)": [[14, "qat.purr.backends.qblox.codegen.QbloxContext.shift_frequency"]], "shift_phase() (qbloxcontext method)": [[14, "qat.purr.backends.qblox.codegen.QbloxContext.shift_phase"]], "synchronize() (qbloxcontext static method)": [[14, "qat.purr.backends.qblox.codegen.QbloxContext.synchronize"]], "target (qbloxpackage attribute)": [[14, "qat.purr.backends.qblox.codegen.QbloxPackage.target"]], "waveform() (qbloxcontext method)": [[14, "qat.purr.backends.qblox.codegen.QbloxContext.waveform"]], "attconfig (class in qat.purr.backends.qblox.config)": [[15, "qat.purr.backends.qblox.config.AttConfig"]], "awgconfig (class in qat.purr.backends.qblox.config)": [[15, "qat.purr.backends.qblox.config.AwgConfig"]], "connectionconfig (class in qat.purr.backends.qblox.config)": [[15, "qat.purr.backends.qblox.config.ConnectionConfig"]], "gainconfig (class in qat.purr.backends.qblox.config)": [[15, "qat.purr.backends.qblox.config.GainConfig"]], "loconfig (class in qat.purr.backends.qblox.config)": [[15, "qat.purr.backends.qblox.config.LoConfig"]], "mixerconfig (class in qat.purr.backends.qblox.config)": [[15, "qat.purr.backends.qblox.config.MixerConfig"]], "moduleconfig (class in qat.purr.backends.qblox.config)": [[15, "qat.purr.backends.qblox.config.ModuleConfig"]], "ncoconfig (class in qat.purr.backends.qblox.config)": [[15, "qat.purr.backends.qblox.config.NcoConfig"]], "offsetconfig (class in qat.purr.backends.qblox.config)": [[15, "qat.purr.backends.qblox.config.OffsetConfig"]], "qbloxconfig (class in qat.purr.backends.qblox.config)": [[15, "qat.purr.backends.qblox.config.QbloxConfig"]], "qbloxconfighelper (class in qat.purr.backends.qblox.config)": [[15, "qat.purr.backends.qblox.config.QbloxConfigHelper"]], "qcmconfighelper (class in qat.purr.backends.qblox.config)": [[15, "qat.purr.backends.qblox.config.QcmConfigHelper"]], "qcmrfconfighelper (class in qat.purr.backends.qblox.config)": [[15, "qat.purr.backends.qblox.config.QcmRfConfigHelper"]], "qrmconfighelper (class in qat.purr.backends.qblox.config)": [[15, "qat.purr.backends.qblox.config.QrmConfigHelper"]], "qrmrfconfighelper (class in qat.purr.backends.qblox.config)": [[15, "qat.purr.backends.qblox.config.QrmRfConfigHelper"]], "scopeacqconfig (class in qat.purr.backends.qblox.config)": [[15, "qat.purr.backends.qblox.config.ScopeAcqConfig"]], "sequencerconfig (class in qat.purr.backends.qblox.config)": [[15, "qat.purr.backends.qblox.config.SequencerConfig"]], "squareweightacq (class in qat.purr.backends.qblox.config)": [[15, "qat.purr.backends.qblox.config.SquareWeightAcq"]], "thresholdedacqconfig (class in qat.purr.backends.qblox.config)": [[15, "qat.purr.backends.qblox.config.ThresholdedAcqConfig"]], "ttlacqconfig (class in qat.purr.backends.qblox.config)": [[15, "qat.purr.backends.qblox.config.TtlAcqConfig"]], "acq (connectionconfig attribute)": [[15, "qat.purr.backends.qblox.config.ConnectionConfig.acq"]], "acq_i (connectionconfig attribute)": [[15, "qat.purr.backends.qblox.config.ConnectionConfig.acq_I"]], "acq_q (connectionconfig attribute)": [[15, "qat.purr.backends.qblox.config.ConnectionConfig.acq_Q"]], "attenuation (moduleconfig attribute)": [[15, "qat.purr.backends.qblox.config.ModuleConfig.attenuation"]], "auto_bin_incr_en (ttlacqconfig attribute)": [[15, "qat.purr.backends.qblox.config.TtlAcqConfig.auto_bin_incr_en"]], "avg_mode_en_path0 (scopeacqconfig attribute)": [[15, "qat.purr.backends.qblox.config.ScopeAcqConfig.avg_mode_en_path0"]], "avg_mode_en_path1 (scopeacqconfig attribute)": [[15, "qat.purr.backends.qblox.config.ScopeAcqConfig.avg_mode_en_path1"]], "awg (sequencerconfig attribute)": [[15, "qat.purr.backends.qblox.config.SequencerConfig.awg"]], "bulk_value (connectionconfig attribute)": [[15, "qat.purr.backends.qblox.config.ConnectionConfig.bulk_value"]], "clear() (qbloxconfighelper method)": [[15, "qat.purr.backends.qblox.config.QbloxConfigHelper.clear"]], "clear() (qrmconfighelper method)": [[15, "qat.purr.backends.qblox.config.QrmConfigHelper.clear"]], "configure() (qbloxconfighelper method)": [[15, "qat.purr.backends.qblox.config.QbloxConfigHelper.configure"]], "configure() (qrmconfighelper method)": [[15, "qat.purr.backends.qblox.config.QrmConfigHelper.configure"]], "configure_acq() (qrmrfconfighelper method)": [[15, "qat.purr.backends.qblox.config.QrmRfConfigHelper.configure_acq"]], "configure_attenuation() (qcmrfconfighelper method)": [[15, "qat.purr.backends.qblox.config.QcmRfConfigHelper.configure_attenuation"]], "configure_attenuation() (qrmrfconfighelper method)": [[15, "qat.purr.backends.qblox.config.QrmRfConfigHelper.configure_attenuation"]], "configure_awg() (qbloxconfighelper method)": [[15, "qat.purr.backends.qblox.config.QbloxConfigHelper.configure_awg"]], "configure_connection() (qbloxconfighelper method)": [[15, "qat.purr.backends.qblox.config.QbloxConfigHelper.configure_connection"]], "configure_lo() (qcmrfconfighelper method)": [[15, "qat.purr.backends.qblox.config.QcmRfConfigHelper.configure_lo"]], "configure_lo() (qrmrfconfighelper method)": [[15, "qat.purr.backends.qblox.config.QrmRfConfigHelper.configure_lo"]], "configure_mixer() (qbloxconfighelper method)": [[15, "qat.purr.backends.qblox.config.QbloxConfigHelper.configure_mixer"]], "configure_module() (qbloxconfighelper method)": [[15, "qat.purr.backends.qblox.config.QbloxConfigHelper.configure_module"]], "configure_module() (qcmrfconfighelper method)": [[15, "qat.purr.backends.qblox.config.QcmRfConfigHelper.configure_module"]], "configure_module() (qrmrfconfighelper method)": [[15, "qat.purr.backends.qblox.config.QrmRfConfigHelper.configure_module"]], "configure_nco() (qbloxconfighelper method)": [[15, "qat.purr.backends.qblox.config.QbloxConfigHelper.configure_nco"]], "configure_offset() (qcmrfconfighelper method)": [[15, "qat.purr.backends.qblox.config.QcmRfConfigHelper.configure_offset"]], "configure_offset() (qrmrfconfighelper method)": [[15, "qat.purr.backends.qblox.config.QrmRfConfigHelper.configure_offset"]], "configure_scope_acq() (qrmconfighelper method)": [[15, "qat.purr.backends.qblox.config.QrmConfigHelper.configure_scope_acq"]], "configure_sequencer() (qbloxconfighelper method)": [[15, "qat.purr.backends.qblox.config.QbloxConfigHelper.configure_sequencer"]], "configure_sequencer() (qcmrfconfighelper method)": [[15, "qat.purr.backends.qblox.config.QcmRfConfigHelper.configure_sequencer"]], "configure_sequencer() (qrmrfconfighelper method)": [[15, "qat.purr.backends.qblox.config.QrmRfConfigHelper.configure_sequencer"]], "connection (sequencerconfig attribute)": [[15, "qat.purr.backends.qblox.config.SequencerConfig.connection"]], "cont_mode_en_path0 (awgconfig attribute)": [[15, "qat.purr.backends.qblox.config.AwgConfig.cont_mode_en_path0"]], "cont_mode_en_path1 (awgconfig attribute)": [[15, "qat.purr.backends.qblox.config.AwgConfig.cont_mode_en_path1"]], "cont_mode_waveform_idx_path0 (awgconfig attribute)": [[15, "qat.purr.backends.qblox.config.AwgConfig.cont_mode_waveform_idx_path0"]], "cont_mode_waveform_idx_path1 (awgconfig attribute)": [[15, "qat.purr.backends.qblox.config.AwgConfig.cont_mode_waveform_idx_path1"]], "demod_en_acq (sequencerconfig attribute)": [[15, "qat.purr.backends.qblox.config.SequencerConfig.demod_en_acq"]], "freq (ncoconfig attribute)": [[15, "qat.purr.backends.qblox.config.NcoConfig.freq"]], "gain (moduleconfig attribute)": [[15, "qat.purr.backends.qblox.config.ModuleConfig.gain"]], "gain_path0 (awgconfig attribute)": [[15, "qat.purr.backends.qblox.config.AwgConfig.gain_path0"]], "gain_path1 (awgconfig attribute)": [[15, "qat.purr.backends.qblox.config.AwgConfig.gain_path1"]], "gain_ratio (mixerconfig attribute)": [[15, "qat.purr.backends.qblox.config.MixerConfig.gain_ratio"]], "in0 (attconfig attribute)": [[15, "qat.purr.backends.qblox.config.AttConfig.in0"]], "in0 (gainconfig attribute)": [[15, "qat.purr.backends.qblox.config.GainConfig.in0"]], "in0 (offsetconfig attribute)": [[15, "qat.purr.backends.qblox.config.OffsetConfig.in0"]], "in0_path0 (offsetconfig attribute)": [[15, "qat.purr.backends.qblox.config.OffsetConfig.in0_path0"]], "in0_path1 (offsetconfig attribute)": [[15, "qat.purr.backends.qblox.config.OffsetConfig.in0_path1"]], "in1 (gainconfig attribute)": [[15, "qat.purr.backends.qblox.config.GainConfig.in1"]], "in1 (offsetconfig attribute)": [[15, "qat.purr.backends.qblox.config.OffsetConfig.in1"]], "input_select (ttlacqconfig attribute)": [[15, "qat.purr.backends.qblox.config.TtlAcqConfig.input_select"]], "integration_length (squareweightacq attribute)": [[15, "qat.purr.backends.qblox.config.SquareWeightAcq.integration_length"]], "lo (moduleconfig attribute)": [[15, "qat.purr.backends.qblox.config.ModuleConfig.lo"]], "marker_address (thresholdedacqconfig attribute)": [[15, "qat.purr.backends.qblox.config.ThresholdedAcqConfig.marker_address"]], "marker_en (thresholdedacqconfig attribute)": [[15, "qat.purr.backends.qblox.config.ThresholdedAcqConfig.marker_en"]], "marker_invert (thresholdedacqconfig attribute)": [[15, "qat.purr.backends.qblox.config.ThresholdedAcqConfig.marker_invert"]], "marker_inverts (moduleconfig attribute)": [[15, "qat.purr.backends.qblox.config.ModuleConfig.marker_inverts"]], "marker_ovr_en (sequencerconfig attribute)": [[15, "qat.purr.backends.qblox.config.SequencerConfig.marker_ovr_en"]], "marker_ovr_value (sequencerconfig attribute)": [[15, "qat.purr.backends.qblox.config.SequencerConfig.marker_ovr_value"]], "mixer (sequencerconfig attribute)": [[15, "qat.purr.backends.qblox.config.SequencerConfig.mixer"]], "mod_en (awgconfig attribute)": [[15, "qat.purr.backends.qblox.config.AwgConfig.mod_en"]], "module (qbloxconfig attribute)": [[15, "qat.purr.backends.qblox.config.QbloxConfig.module"]], "nco (sequencerconfig attribute)": [[15, "qat.purr.backends.qblox.config.SequencerConfig.nco"]], "offset (moduleconfig attribute)": [[15, "qat.purr.backends.qblox.config.ModuleConfig.offset"]], "offset_path0 (awgconfig attribute)": [[15, "qat.purr.backends.qblox.config.AwgConfig.offset_path0"]], "offset_path1 (awgconfig attribute)": [[15, "qat.purr.backends.qblox.config.AwgConfig.offset_path1"]], "out0 (attconfig attribute)": [[15, "qat.purr.backends.qblox.config.AttConfig.out0"]], "out0 (connectionconfig attribute)": [[15, "qat.purr.backends.qblox.config.ConnectionConfig.out0"]], "out0 (offsetconfig attribute)": [[15, "qat.purr.backends.qblox.config.OffsetConfig.out0"]], "out0_en (loconfig attribute)": [[15, "qat.purr.backends.qblox.config.LoConfig.out0_en"]], "out0_freq (loconfig attribute)": [[15, "qat.purr.backends.qblox.config.LoConfig.out0_freq"]], "out0_in0_en (loconfig attribute)": [[15, "qat.purr.backends.qblox.config.LoConfig.out0_in0_en"]], "out0_in0_freq (loconfig attribute)": [[15, "qat.purr.backends.qblox.config.LoConfig.out0_in0_freq"]], "out0_path0 (offsetconfig attribute)": [[15, "qat.purr.backends.qblox.config.OffsetConfig.out0_path0"]], "out0_path1 (offsetconfig attribute)": [[15, "qat.purr.backends.qblox.config.OffsetConfig.out0_path1"]], "out1 (attconfig attribute)": [[15, "qat.purr.backends.qblox.config.AttConfig.out1"]], "out1 (connectionconfig attribute)": [[15, "qat.purr.backends.qblox.config.ConnectionConfig.out1"]], "out1 (offsetconfig attribute)": [[15, "qat.purr.backends.qblox.config.OffsetConfig.out1"]], "out1_en (loconfig attribute)": [[15, "qat.purr.backends.qblox.config.LoConfig.out1_en"]], "out1_freq (loconfig attribute)": [[15, "qat.purr.backends.qblox.config.LoConfig.out1_freq"]], "out1_path0 (offsetconfig attribute)": [[15, "qat.purr.backends.qblox.config.OffsetConfig.out1_path0"]], "out1_path1 (offsetconfig attribute)": [[15, "qat.purr.backends.qblox.config.OffsetConfig.out1_path1"]], "out2 (connectionconfig attribute)": [[15, "qat.purr.backends.qblox.config.ConnectionConfig.out2"]], "out2 (offsetconfig attribute)": [[15, "qat.purr.backends.qblox.config.OffsetConfig.out2"]], "out3 (connectionconfig attribute)": [[15, "qat.purr.backends.qblox.config.ConnectionConfig.out3"]], "out3 (offsetconfig attribute)": [[15, "qat.purr.backends.qblox.config.OffsetConfig.out3"]], "phase_offs (ncoconfig attribute)": [[15, "qat.purr.backends.qblox.config.NcoConfig.phase_offs"]], "phase_offset (mixerconfig attribute)": [[15, "qat.purr.backends.qblox.config.MixerConfig.phase_offset"]], "prop_delay_comp (ncoconfig attribute)": [[15, "qat.purr.backends.qblox.config.NcoConfig.prop_delay_comp"]], "prop_delay_comp_en (ncoconfig attribute)": [[15, "qat.purr.backends.qblox.config.NcoConfig.prop_delay_comp_en"]], "qat.purr.backends.qblox.config": [[15, "module-qat.purr.backends.qblox.config"]], "rotation (thresholdedacqconfig attribute)": [[15, "qat.purr.backends.qblox.config.ThresholdedAcqConfig.rotation"]], "scope_acq (moduleconfig attribute)": [[15, "qat.purr.backends.qblox.config.ModuleConfig.scope_acq"]], "sequencer_select (scopeacqconfig attribute)": [[15, "qat.purr.backends.qblox.config.ScopeAcqConfig.sequencer_select"]], "sequencers (qbloxconfig attribute)": [[15, "qat.purr.backends.qblox.config.QbloxConfig.sequencers"]], "slot_idx (qbloxconfig attribute)": [[15, "qat.purr.backends.qblox.config.QbloxConfig.slot_idx"]], "square_weight_acq (sequencerconfig attribute)": [[15, "qat.purr.backends.qblox.config.SequencerConfig.square_weight_acq"]], "sync_en (sequencerconfig attribute)": [[15, "qat.purr.backends.qblox.config.SequencerConfig.sync_en"]], "threshold (thresholdedacqconfig attribute)": [[15, "qat.purr.backends.qblox.config.ThresholdedAcqConfig.threshold"]], "threshold (ttlacqconfig attribute)": [[15, "qat.purr.backends.qblox.config.TtlAcqConfig.threshold"]], "thresholded_acq (sequencerconfig attribute)": [[15, "qat.purr.backends.qblox.config.SequencerConfig.thresholded_acq"]], "trigger_address (thresholdedacqconfig attribute)": [[15, "qat.purr.backends.qblox.config.ThresholdedAcqConfig.trigger_address"]], "trigger_count_thresholds (sequencerconfig attribute)": [[15, "qat.purr.backends.qblox.config.SequencerConfig.trigger_count_thresholds"]], "trigger_en (thresholdedacqconfig attribute)": [[15, "qat.purr.backends.qblox.config.ThresholdedAcqConfig.trigger_en"]], "trigger_invert (thresholdedacqconfig attribute)": [[15, "qat.purr.backends.qblox.config.ThresholdedAcqConfig.trigger_invert"]], "trigger_level_path0 (scopeacqconfig attribute)": [[15, "qat.purr.backends.qblox.config.ScopeAcqConfig.trigger_level_path0"]], "trigger_level_path1 (scopeacqconfig attribute)": [[15, "qat.purr.backends.qblox.config.ScopeAcqConfig.trigger_level_path1"]], "trigger_mode_path0 (scopeacqconfig attribute)": [[15, "qat.purr.backends.qblox.config.ScopeAcqConfig.trigger_mode_path0"]], "trigger_mode_path1 (scopeacqconfig attribute)": [[15, "qat.purr.backends.qblox.config.ScopeAcqConfig.trigger_mode_path1"]], "trigger_threshold_inverts (sequencerconfig attribute)": [[15, "qat.purr.backends.qblox.config.SequencerConfig.trigger_threshold_inverts"]], "ttl_acq (sequencerconfig attribute)": [[15, "qat.purr.backends.qblox.config.SequencerConfig.ttl_acq"]], "upsample_rate_path0 (awgconfig attribute)": [[15, "qat.purr.backends.qblox.config.AwgConfig.upsample_rate_path0"]], "upsample_rate_path1 (awgconfig attribute)": [[15, "qat.purr.backends.qblox.config.AwgConfig.upsample_rate_path1"]], "constants (class in qat.purr.backends.qblox.constants)": [[16, "qat.purr.backends.qblox.constants.Constants"]], "grid_time (constants attribute)": [[16, "qat.purr.backends.qblox.constants.Constants.GRID_TIME"]], "immediate_max_wait_time (constants attribute)": [[16, "qat.purr.backends.qblox.constants.Constants.IMMEDIATE_MAX_WAIT_TIME"]], "loop_unroll_threshold (constants attribute)": [[16, "qat.purr.backends.qblox.constants.Constants.LOOP_UNROLL_THRESHOLD"]], "max_qcm_offset_v (constants attribute)": [[16, "qat.purr.backends.qblox.constants.Constants.MAX_QCM_OFFSET_V"]], "max_qcm_rf_offset_mv (constants attribute)": [[16, "qat.purr.backends.qblox.constants.Constants.MAX_QCM_RF_OFFSET_MV"]], "max_qrm_offset_v (constants attribute)": [[16, "qat.purr.backends.qblox.constants.Constants.MAX_QRM_OFFSET_V"]], "max_qrm_rf_offset_v (constants attribute)": [[16, "qat.purr.backends.qblox.constants.Constants.MAX_QRM_RF_OFFSET_V"]], "max_sample_size_scope_acquisitions (constants attribute)": [[16, "qat.purr.backends.qblox.constants.Constants.MAX_SAMPLE_SIZE_SCOPE_ACQUISITIONS"]], "max_sample_size_waveforms (constants attribute)": [[16, "qat.purr.backends.qblox.constants.Constants.MAX_SAMPLE_SIZE_WAVEFORMS"]], "min_qcm_offset_v (constants attribute)": [[16, "qat.purr.backends.qblox.constants.Constants.MIN_QCM_OFFSET_V"]], "min_qcm_rf_offset_mv (constants attribute)": [[16, "qat.purr.backends.qblox.constants.Constants.MIN_QCM_RF_OFFSET_MV"]], "min_qrm_offset_v (constants attribute)": [[16, "qat.purr.backends.qblox.constants.Constants.MIN_QRM_OFFSET_V"]], "min_qrm_rf_offset_v (constants attribute)": [[16, "qat.purr.backends.qblox.constants.Constants.MIN_QRM_RF_OFFSET_V"]], "nco_freq_limit_steps (constants attribute)": [[16, "qat.purr.backends.qblox.constants.Constants.NCO_FREQ_LIMIT_STEPS"]], "nco_freq_steps_per_hz (constants attribute)": [[16, "qat.purr.backends.qblox.constants.Constants.NCO_FREQ_STEPS_PER_HZ"]], "nco_phase_steps_per_deg (constants attribute)": [[16, "qat.purr.backends.qblox.constants.Constants.NCO_PHASE_STEPS_PER_DEG"]], "number_of_registers (constants attribute)": [[16, "qat.purr.backends.qblox.constants.Constants.NUMBER_OF_REGISTERS"]], "number_of_sequencers_qcm (constants attribute)": [[16, "qat.purr.backends.qblox.constants.Constants.NUMBER_OF_SEQUENCERS_QCM"]], "number_of_sequencers_qrm (constants attribute)": [[16, "qat.purr.backends.qblox.constants.Constants.NUMBER_OF_SEQUENCERS_QRM"]], "register_size (constants attribute)": [[16, "qat.purr.backends.qblox.constants.Constants.REGISTER_SIZE"]], "qat.purr.backends.qblox.constants": [[16, "module-qat.purr.backends.qblox.constants"]], "dummyqbloxcontrolhardware (class in qat.purr.backends.qblox.device)": [[17, "qat.purr.backends.qblox.device.DummyQbloxControlHardware"]], "qbloxcontrolhardware (class in qat.purr.backends.qblox.device)": [[17, "qat.purr.backends.qblox.device.QbloxControlHardware"]], "qbloxphysicalbaseband (class in qat.purr.backends.qblox.device)": [[17, "qat.purr.backends.qblox.device.QbloxPhysicalBaseband"]], "qbloxphysicalchannel (class in qat.purr.backends.qblox.device)": [[17, "qat.purr.backends.qblox.device.QbloxPhysicalChannel"]], "qbloxresonator (class in qat.purr.backends.qblox.device)": [[17, "qat.purr.backends.qblox.device.QbloxResonator"]], "allocate_resources() (qbloxcontrolhardware method)": [[17, "qat.purr.backends.qblox.device.QbloxControlHardware.allocate_resources"]], "baseband (qbloxphysicalchannel attribute)": [[17, "qat.purr.backends.qblox.device.QbloxPhysicalChannel.baseband"]], "build_qubit() (qbloxphysicalchannel method)": [[17, "qat.purr.backends.qblox.device.QbloxPhysicalChannel.build_qubit"]], "build_resonator() (qbloxphysicalchannel method)": [[17, "qat.purr.backends.qblox.device.QbloxPhysicalChannel.build_resonator"]], "config (qbloxphysicalchannel property)": [[17, "qat.purr.backends.qblox.device.QbloxPhysicalChannel.config"]], "connect() (qbloxcontrolhardware method)": [[17, "qat.purr.backends.qblox.device.QbloxControlHardware.connect"]], "disconnect() (qbloxcontrolhardware method)": [[17, "qat.purr.backends.qblox.device.QbloxControlHardware.disconnect"]], "get_acquire_channel() (qbloxresonator method)": [[17, "qat.purr.backends.qblox.device.QbloxResonator.get_acquire_channel"]], "get_measure_channel() (qbloxresonator method)": [[17, "qat.purr.backends.qblox.device.QbloxResonator.get_measure_channel"]], "install() (qbloxcontrolhardware method)": [[17, "qat.purr.backends.qblox.device.QbloxControlHardware.install"]], "qat.purr.backends.qblox.device": [[17, "module-qat.purr.backends.qblox.device"]], "set_data() (dummyqbloxcontrolhardware method)": [[17, "qat.purr.backends.qblox.device.DummyQbloxControlHardware.set_data"]], "set_data() (qbloxcontrolhardware method)": [[17, "qat.purr.backends.qblox.device.QbloxControlHardware.set_data"]], "slot_idx (qbloxphysicalchannel property)": [[17, "qat.purr.backends.qblox.device.QbloxPhysicalChannel.slot_idx"]], "start_playback() (dummyqbloxcontrolhardware method)": [[17, "qat.purr.backends.qblox.device.DummyQbloxControlHardware.start_playback"]], "start_playback() (qbloxcontrolhardware method)": [[17, "qat.purr.backends.qblox.device.QbloxControlHardware.start_playback"]], "acquire (opcode attribute)": [[18, "qat.purr.backends.qblox.ir.Opcode.ACQUIRE"]], "acquire_ttl (opcode attribute)": [[18, "qat.purr.backends.qblox.ir.Opcode.ACQUIRE_TTL"]], "acquire_weighed (opcode attribute)": [[18, "qat.purr.backends.qblox.ir.Opcode.ACQUIRE_WEIGHED"]], "add (opcode attribute)": [[18, "qat.purr.backends.qblox.ir.Opcode.ADD"]], "address (opcode attribute)": [[18, "qat.purr.backends.qblox.ir.Opcode.ADDRESS"]], "and (opcode attribute)": [[18, "qat.purr.backends.qblox.ir.Opcode.AND"]], "jump (opcode attribute)": [[18, "qat.purr.backends.qblox.ir.Opcode.JUMP"]], "jump_greater_equals (opcode attribute)": [[18, "qat.purr.backends.qblox.ir.Opcode.JUMP_GREATER_EQUALS"]], "jump_less_than (opcode attribute)": [[18, "qat.purr.backends.qblox.ir.Opcode.JUMP_LESS_THAN"]], "loop (opcode attribute)": [[18, "qat.purr.backends.qblox.ir.Opcode.LOOP"]], "move (opcode attribute)": [[18, "qat.purr.backends.qblox.ir.Opcode.MOVE"]], "new_line (opcode attribute)": [[18, "qat.purr.backends.qblox.ir.Opcode.NEW_LINE"]], "nop (opcode attribute)": [[18, "qat.purr.backends.qblox.ir.Opcode.NOP"]], "not (opcode attribute)": [[18, "qat.purr.backends.qblox.ir.Opcode.NOT"]], "or (opcode attribute)": [[18, "qat.purr.backends.qblox.ir.Opcode.OR"]], "opcode (class in qat.purr.backends.qblox.ir)": [[18, "qat.purr.backends.qblox.ir.Opcode"]], "play (opcode attribute)": [[18, "qat.purr.backends.qblox.ir.Opcode.PLAY"]], "q1asminstruction (class in qat.purr.backends.qblox.ir)": [[18, "qat.purr.backends.qblox.ir.Q1asmInstruction"]], "reset_phase (opcode attribute)": [[18, "qat.purr.backends.qblox.ir.Opcode.RESET_PHASE"]], "set_awg_gain (opcode attribute)": [[18, "qat.purr.backends.qblox.ir.Opcode.SET_AWG_GAIN"]], "set_awg_offset (opcode attribute)": [[18, "qat.purr.backends.qblox.ir.Opcode.SET_AWG_OFFSET"]], "set_marker (opcode attribute)": [[18, "qat.purr.backends.qblox.ir.Opcode.SET_MARKER"]], "set_nco_frequency (opcode attribute)": [[18, "qat.purr.backends.qblox.ir.Opcode.SET_NCO_FREQUENCY"]], "set_nco_phase (opcode attribute)": [[18, "qat.purr.backends.qblox.ir.Opcode.SET_NCO_PHASE"]], "set_nco_phase_offset (opcode attribute)": [[18, "qat.purr.backends.qblox.ir.Opcode.SET_NCO_PHASE_OFFSET"]], "stop (opcode attribute)": [[18, "qat.purr.backends.qblox.ir.Opcode.STOP"]], "sub (opcode attribute)": [[18, "qat.purr.backends.qblox.ir.Opcode.SUB"]], "sequence (class in qat.purr.backends.qblox.ir)": [[18, "qat.purr.backends.qblox.ir.Sequence"]], "sequencebuilder (class in qat.purr.backends.qblox.ir)": [[18, "qat.purr.backends.qblox.ir.SequenceBuilder"]], "update_parameters (opcode attribute)": [[18, "qat.purr.backends.qblox.ir.Opcode.UPDATE_PARAMETERS"]], "wait (opcode attribute)": [[18, "qat.purr.backends.qblox.ir.Opcode.WAIT"]], "wait_sync (opcode attribute)": [[18, "qat.purr.backends.qblox.ir.Opcode.WAIT_SYNC"]], "wait_trigger (opcode attribute)": [[18, "qat.purr.backends.qblox.ir.Opcode.WAIT_TRIGGER"]], "xor (opcode attribute)": [[18, "qat.purr.backends.qblox.ir.Opcode.XOR"]], "acquire() (sequencebuilder method)": [[18, "qat.purr.backends.qblox.ir.SequenceBuilder.acquire"]], "acquire_ttl() (sequencebuilder method)": [[18, "qat.purr.backends.qblox.ir.SequenceBuilder.acquire_ttl"]], "acquire_weighed() (sequencebuilder method)": [[18, "qat.purr.backends.qblox.ir.SequenceBuilder.acquire_weighed"]], "acquisitions (sequence attribute)": [[18, "qat.purr.backends.qblox.ir.Sequence.acquisitions"]], "add() (sequencebuilder method)": [[18, "qat.purr.backends.qblox.ir.SequenceBuilder.add"]], "add_acquisition() (sequencebuilder method)": [[18, "qat.purr.backends.qblox.ir.SequenceBuilder.add_acquisition"]], "add_waveform() (sequencebuilder method)": [[18, "qat.purr.backends.qblox.ir.SequenceBuilder.add_waveform"]], "add_weight() (sequencebuilder method)": [[18, "qat.purr.backends.qblox.ir.SequenceBuilder.add_weight"]], "build() (sequencebuilder method)": [[18, "qat.purr.backends.qblox.ir.SequenceBuilder.build"]], "jge() (sequencebuilder method)": [[18, "qat.purr.backends.qblox.ir.SequenceBuilder.jge"]], "jlt() (sequencebuilder method)": [[18, "qat.purr.backends.qblox.ir.SequenceBuilder.jlt"]], "jmp() (sequencebuilder method)": [[18, "qat.purr.backends.qblox.ir.SequenceBuilder.jmp"]], "label() (sequencebuilder method)": [[18, "qat.purr.backends.qblox.ir.SequenceBuilder.label"]], "logic_and() (sequencebuilder method)": [[18, "qat.purr.backends.qblox.ir.SequenceBuilder.logic_and"]], "logic_not() (sequencebuilder method)": [[18, "qat.purr.backends.qblox.ir.SequenceBuilder.logic_not"]], "logic_or() (sequencebuilder method)": [[18, "qat.purr.backends.qblox.ir.SequenceBuilder.logic_or"]], "logic_xor() (sequencebuilder method)": [[18, "qat.purr.backends.qblox.ir.SequenceBuilder.logic_xor"]], "loop() (sequencebuilder method)": [[18, "qat.purr.backends.qblox.ir.SequenceBuilder.loop"]], "move() (sequencebuilder method)": [[18, "qat.purr.backends.qblox.ir.SequenceBuilder.move"]], "nop() (sequencebuilder method)": [[18, "qat.purr.backends.qblox.ir.SequenceBuilder.nop"]], "play() (sequencebuilder method)": [[18, "qat.purr.backends.qblox.ir.SequenceBuilder.play"]], "program (sequence attribute)": [[18, "qat.purr.backends.qblox.ir.Sequence.program"]], "qat.purr.backends.qblox.ir": [[18, "module-qat.purr.backends.qblox.ir"]], "reset_ph() (sequencebuilder method)": [[18, "qat.purr.backends.qblox.ir.SequenceBuilder.reset_ph"]], "set_awg_gain() (sequencebuilder method)": [[18, "qat.purr.backends.qblox.ir.SequenceBuilder.set_awg_gain"]], "set_awg_offs() (sequencebuilder method)": [[18, "qat.purr.backends.qblox.ir.SequenceBuilder.set_awg_offs"]], "set_freq() (sequencebuilder method)": [[18, "qat.purr.backends.qblox.ir.SequenceBuilder.set_freq"]], "set_mrk() (sequencebuilder method)": [[18, "qat.purr.backends.qblox.ir.SequenceBuilder.set_mrk"]], "set_ph() (sequencebuilder method)": [[18, "qat.purr.backends.qblox.ir.SequenceBuilder.set_ph"]], "set_ph_delta() (sequencebuilder method)": [[18, "qat.purr.backends.qblox.ir.SequenceBuilder.set_ph_delta"]], "stop() (sequencebuilder method)": [[18, "qat.purr.backends.qblox.ir.SequenceBuilder.stop"]], "sub() (sequencebuilder method)": [[18, "qat.purr.backends.qblox.ir.SequenceBuilder.sub"]], "upd_param() (sequencebuilder method)": [[18, "qat.purr.backends.qblox.ir.SequenceBuilder.upd_param"]], "wait() (sequencebuilder method)": [[18, "qat.purr.backends.qblox.ir.SequenceBuilder.wait"]], "wait_sync() (sequencebuilder method)": [[18, "qat.purr.backends.qblox.ir.SequenceBuilder.wait_sync"]], "wait_trigger() (sequencebuilder method)": [[18, "qat.purr.backends.qblox.ir.SequenceBuilder.wait_trigger"]], "waveforms (sequence attribute)": [[18, "qat.purr.backends.qblox.ir.Sequence.waveforms"]], "weights (sequence attribute)": [[18, "qat.purr.backends.qblox.ir.Sequence.weights"]], "qbloxliveengine (class in qat.purr.backends.qblox.live)": [[19, "qat.purr.backends.qblox.live.QbloxLiveEngine"]], "qbloxlivehardwaremodel (class in qat.purr.backends.qblox.live)": [[19, "qat.purr.backends.qblox.live.QbloxLiveHardwareModel"]], "create_engine() (qbloxlivehardwaremodel method)": [[19, "qat.purr.backends.qblox.live.QbloxLiveHardwareModel.create_engine"]], "qat.purr.backends.qblox.live": [[19, "module-qat.purr.backends.qblox.live"]], "shutdown() (qbloxliveengine method)": [[19, "qat.purr.backends.qblox.live.QbloxLiveEngine.shutdown"]], "startup() (qbloxliveengine method)": [[19, "qat.purr.backends.qblox.live.QbloxLiveEngine.startup"]], "controltype (class in qat.purr.backends.realtime_chip_simulator)": [[21, "qat.purr.backends.realtime_chip_simulator.ControlType"]], "couplingtype (class in qat.purr.backends.realtime_chip_simulator)": [[21, "qat.purr.backends.realtime_chip_simulator.CouplingType"]], "crosskerr (couplingtype attribute)": [[21, "qat.purr.backends.realtime_chip_simulator.CouplingType.CrossKerr"]], "exchange (couplingtype attribute)": [[21, "qat.purr.backends.realtime_chip_simulator.CouplingType.Exchange"]], "measure (controltype attribute)": [[21, "qat.purr.backends.realtime_chip_simulator.ControlType.MEASURE"]], "measurementstatistics (class in qat.purr.backends.realtime_chip_simulator)": [[21, "qat.purr.backends.realtime_chip_simulator.MeasurementStatistics"]], "n (rtcsqubit property)": [[21, "qat.purr.backends.realtime_chip_simulator.RTCSQubit.N"]], "operatorinfo (class in qat.purr.backends.realtime_chip_simulator)": [[21, "qat.purr.backends.realtime_chip_simulator.OperatorInfo"]], "reset (controltype attribute)": [[21, "qat.purr.backends.realtime_chip_simulator.ControlType.RESET"]], "rtcscoupling (class in qat.purr.backends.realtime_chip_simulator)": [[21, "qat.purr.backends.realtime_chip_simulator.RTCSCoupling"]], "rtcsqubit (class in qat.purr.backends.realtime_chip_simulator)": [[21, "qat.purr.backends.realtime_chip_simulator.RTCSQubit"]], "rtcsresonator (class in qat.purr.backends.realtime_chip_simulator)": [[21, "qat.purr.backends.realtime_chip_simulator.RTCSResonator"]], "realtimechipsimengine (class in qat.purr.backends.realtime_chip_simulator)": [[21, "qat.purr.backends.realtime_chip_simulator.RealtimeChipSimEngine"]], "realtimesimhardwaremodel (class in qat.purr.backends.realtime_chip_simulator)": [[21, "qat.purr.backends.realtime_chip_simulator.RealtimeSimHardwareModel"]], "section (class in qat.purr.backends.realtime_chip_simulator)": [[21, "qat.purr.backends.realtime_chip_simulator.Section"]], "add_couplings() (realtimesimhardwaremodel method)": [[21, "qat.purr.backends.realtime_chip_simulator.RealtimeSimHardwareModel.add_couplings"]], "add_qubit_coupling() (in module qat.purr.backends.realtime_chip_simulator)": [[21, "qat.purr.backends.realtime_chip_simulator.add_qubit_coupling"]], "add_qubit_stack() (in module qat.purr.backends.realtime_chip_simulator)": [[21, "qat.purr.backends.realtime_chip_simulator.add_qubit_stack"]], "apply_setup_to_hardware() (in module qat.purr.backends.realtime_chip_simulator)": [[21, "qat.purr.backends.realtime_chip_simulator.apply_setup_to_hardware"]], "build_simulator_resets() (realtimechipsimengine method)": [[21, "qat.purr.backends.realtime_chip_simulator.RealtimeChipSimEngine.build_simulator_resets"]], "build_tree() (measurementstatistics method)": [[21, "qat.purr.backends.realtime_chip_simulator.MeasurementStatistics.build_tree"]], "control_type (section attribute)": [[21, "qat.purr.backends.realtime_chip_simulator.Section.control_type"]], "couplings (realtimesimhardwaremodel attribute)": [[21, "qat.purr.backends.realtime_chip_simulator.RealtimeSimHardwareModel.couplings"]], "create_engine() (realtimesimhardwaremodel method)": [[21, "qat.purr.backends.realtime_chip_simulator.RealtimeSimHardwareModel.create_engine"]], "create_subplots() (in module qat.purr.backends.realtime_chip_simulator)": [[21, "qat.purr.backends.realtime_chip_simulator.create_subplots"]], "drive_hamiltonian (section attribute)": [[21, "qat.purr.backends.realtime_chip_simulator.Section.drive_hamiltonian"]], "extract_branch_trajectory() (measurementstatistics method)": [[21, "qat.purr.backends.realtime_chip_simulator.MeasurementStatistics.extract_branch_trajectory"]], "extract_outcome_probabilities() (measurementstatistics method)": [[21, "qat.purr.backends.realtime_chip_simulator.MeasurementStatistics.extract_outcome_probabilities"]], "get_branch_nodes() (measurementstatistics method)": [[21, "qat.purr.backends.realtime_chip_simulator.MeasurementStatistics.get_branch_nodes"]], "get_branches() (realtimechipsimengine method)": [[21, "qat.purr.backends.realtime_chip_simulator.RealtimeChipSimEngine.get_branches"]], "get_default_rtcs_hardware() (in module qat.purr.backends.realtime_chip_simulator)": [[21, "qat.purr.backends.realtime_chip_simulator.get_default_RTCS_hardware"]], "get_resonator_response_segments() (in module qat.purr.backends.realtime_chip_simulator)": [[21, "qat.purr.backends.realtime_chip_simulator.get_resonator_response_segments"]], "get_resonator_response_signal_segment() (in module qat.purr.backends.realtime_chip_simulator)": [[21, "qat.purr.backends.realtime_chip_simulator.get_resonator_response_signal_segment"]], "get_resonator_response_splicing_indices() (in module qat.purr.backends.realtime_chip_simulator)": [[21, "qat.purr.backends.realtime_chip_simulator.get_resonator_response_splicing_indices"]], "get_simple_resonator_response() (in module qat.purr.backends.realtime_chip_simulator)": [[21, "qat.purr.backends.realtime_chip_simulator.get_simple_resonator_response"]], "get_tensor() (realtimechipsimengine method)": [[21, "qat.purr.backends.realtime_chip_simulator.RealtimeChipSimEngine.get_tensor"]], "indices (section attribute)": [[21, "qat.purr.backends.realtime_chip_simulator.Section.indices"]], "model (realtimechipsimengine attribute)": [[21, "qat.purr.backends.realtime_chip_simulator.RealtimeChipSimEngine.model"]], "name (operatorinfo attribute)": [[21, "qat.purr.backends.realtime_chip_simulator.OperatorInfo.name"]], "operator (operatorinfo attribute)": [[21, "qat.purr.backends.realtime_chip_simulator.OperatorInfo.operator"]], "optimize() (realtimechipsimengine method)": [[21, "qat.purr.backends.realtime_chip_simulator.RealtimeChipSimEngine.optimize"]], "plot_dynamics() (realtimechipsimengine method)": [[21, "qat.purr.backends.realtime_chip_simulator.RealtimeChipSimEngine.plot_dynamics"]], "plot_pulses() (realtimechipsimengine method)": [[21, "qat.purr.backends.realtime_chip_simulator.RealtimeChipSimEngine.plot_pulses"]], "process_reset() (realtimechipsimengine method)": [[21, "qat.purr.backends.realtime_chip_simulator.RealtimeChipSimEngine.process_reset"]], "qat.purr.backends.realtime_chip_simulator": [[21, "module-qat.purr.backends.realtime_chip_simulator"]], "qubit_id (operatorinfo attribute)": [[21, "qat.purr.backends.realtime_chip_simulator.OperatorInfo.qubit_id"]], "qubits (section attribute)": [[21, "qat.purr.backends.realtime_chip_simulator.Section.qubits"]], "random() (in module qat.purr.backends.realtime_chip_simulator)": [[21, "qat.purr.backends.realtime_chip_simulator.random"]], "rotating_frame_frequency (rtcsqubit property)": [[21, "qat.purr.backends.realtime_chip_simulator.RTCSQubit.rotating_frame_frequency"]], "simulation_time (section attribute)": [[21, "qat.purr.backends.realtime_chip_simulator.Section.simulation_time"]], "spline_time() (in module qat.purr.backends.realtime_chip_simulator)": [[21, "qat.purr.backends.realtime_chip_simulator.spline_time"]], "targets() (rtcscoupling method)": [[21, "qat.purr.backends.realtime_chip_simulator.RTCSCoupling.targets"]], "tukey_window() (in module qat.purr.backends.realtime_chip_simulator)": [[21, "qat.purr.backends.realtime_chip_simulator.tukey_window"]], "blackmanfunction (class in qat.purr.backends.utilities)": [[22, "qat.purr.backends.utilities.BlackmanFunction"]], "complexfunction (class in qat.purr.backends.utilities)": [[22, "qat.purr.backends.utilities.ComplexFunction"]], "cos (class in qat.purr.backends.utilities)": [[22, "qat.purr.backends.utilities.Cos"]], "draggaussianfunction (class in qat.purr.backends.utilities)": [[22, "qat.purr.backends.utilities.DragGaussianFunction"]], "extrasoftsquarefunction (class in qat.purr.backends.utilities)": [[22, "qat.purr.backends.utilities.ExtraSoftSquareFunction"]], "gaussianfunction (class in qat.purr.backends.utilities)": [[22, "qat.purr.backends.utilities.GaussianFunction"]], "gaussiansquare (class in qat.purr.backends.utilities)": [[22, "qat.purr.backends.utilities.GaussianSquare"]], "gaussianzeroedgefunction (class in qat.purr.backends.utilities)": [[22, "qat.purr.backends.utilities.GaussianZeroEdgeFunction"]], "numericfunction (class in qat.purr.backends.utilities)": [[22, "qat.purr.backends.utilities.NumericFunction"]], "positiondata (class in qat.purr.backends.utilities)": [[22, "qat.purr.backends.utilities.PositionData"]], "roundedsquarefunction (class in qat.purr.backends.utilities)": [[22, "qat.purr.backends.utilities.RoundedSquareFunction"]], "sech (class in qat.purr.backends.utilities)": [[22, "qat.purr.backends.utilities.Sech"]], "setupholdfunction (class in qat.purr.backends.utilities)": [[22, "qat.purr.backends.utilities.SetupHoldFunction"]], "simpleacquire (class in qat.purr.backends.utilities)": [[22, "qat.purr.backends.utilities.SimpleAcquire"]], "sin (class in qat.purr.backends.utilities)": [[22, "qat.purr.backends.utilities.Sin"]], "softsquarefunction (class in qat.purr.backends.utilities)": [[22, "qat.purr.backends.utilities.SoftSquareFunction"]], "softergaussianfunction (class in qat.purr.backends.utilities)": [[22, "qat.purr.backends.utilities.SofterGaussianFunction"]], "softersquarefunction (class in qat.purr.backends.utilities)": [[22, "qat.purr.backends.utilities.SofterSquareFunction"]], "squarefunction (class in qat.purr.backends.utilities)": [[22, "qat.purr.backends.utilities.SquareFunction"]], "delay (simpleacquire attribute)": [[22, "qat.purr.backends.utilities.SimpleAcquire.delay"]], "derivative() (blackmanfunction method)": [[22, "qat.purr.backends.utilities.BlackmanFunction.derivative"]], "derivative() (complexfunction method)": [[22, "qat.purr.backends.utilities.ComplexFunction.derivative"]], "derivative() (gaussianfunction method)": [[22, "qat.purr.backends.utilities.GaussianFunction.derivative"]], "derivative() (numericfunction method)": [[22, "qat.purr.backends.utilities.NumericFunction.derivative"]], "derivative() (squarefunction method)": [[22, "qat.purr.backends.utilities.SquareFunction.derivative"]], "dt (complexfunction attribute)": [[22, "qat.purr.backends.utilities.ComplexFunction.dt"]], "end (positiondata attribute)": [[22, "qat.purr.backends.utilities.PositionData.end"]], "eval() (blackmanfunction method)": [[22, "qat.purr.backends.utilities.BlackmanFunction.eval"]], "eval() (complexfunction method)": [[22, "qat.purr.backends.utilities.ComplexFunction.eval"]], "eval() (cos method)": [[22, "qat.purr.backends.utilities.Cos.eval"]], "eval() (draggaussianfunction method)": [[22, "qat.purr.backends.utilities.DragGaussianFunction.eval"]], "eval() (extrasoftsquarefunction method)": [[22, "qat.purr.backends.utilities.ExtraSoftSquareFunction.eval"]], "eval() (gaussianfunction method)": [[22, "qat.purr.backends.utilities.GaussianFunction.eval"]], "eval() (gaussiansquare method)": [[22, "qat.purr.backends.utilities.GaussianSquare.eval"]], "eval() (gaussianzeroedgefunction method)": [[22, "qat.purr.backends.utilities.GaussianZeroEdgeFunction.eval"]], "eval() (roundedsquarefunction method)": [[22, "qat.purr.backends.utilities.RoundedSquareFunction.eval"]], "eval() (sech method)": [[22, "qat.purr.backends.utilities.Sech.eval"]], "eval() (setupholdfunction method)": [[22, "qat.purr.backends.utilities.SetupHoldFunction.eval"]], "eval() (sin method)": [[22, "qat.purr.backends.utilities.Sin.eval"]], "eval() (softsquarefunction method)": [[22, "qat.purr.backends.utilities.SoftSquareFunction.eval"]], "eval() (softergaussianfunction method)": [[22, "qat.purr.backends.utilities.SofterGaussianFunction.eval"]], "eval() (softersquarefunction method)": [[22, "qat.purr.backends.utilities.SofterSquareFunction.eval"]], "eval() (squarefunction method)": [[22, "qat.purr.backends.utilities.SquareFunction.eval"]], "evaluate_pulse_integral() (in module qat.purr.backends.utilities)": [[22, "qat.purr.backends.utilities.evaluate_pulse_integral"]], "evaluate_shape() (in module qat.purr.backends.utilities)": [[22, "qat.purr.backends.utilities.evaluate_shape"]], "get_axis_map() (in module qat.purr.backends.utilities)": [[22, "qat.purr.backends.utilities.get_axis_map"]], "instruction (positiondata attribute)": [[22, "qat.purr.backends.utilities.PositionData.instruction"]], "instruction (simpleacquire attribute)": [[22, "qat.purr.backends.utilities.SimpleAcquire.instruction"]], "mode (simpleacquire attribute)": [[22, "qat.purr.backends.utilities.SimpleAcquire.mode"]], "output_variable (simpleacquire attribute)": [[22, "qat.purr.backends.utilities.SimpleAcquire.output_variable"]], "physical_channel (simpleacquire attribute)": [[22, "qat.purr.backends.utilities.SimpleAcquire.physical_channel"]], "plot_buffers() (in module qat.purr.backends.utilities)": [[22, "qat.purr.backends.utilities.plot_buffers"]], "predict_pulse_amplitude() (in module qat.purr.backends.utilities)": [[22, "qat.purr.backends.utilities.predict_pulse_amplitude"]], "pulse_channel (simpleacquire attribute)": [[22, "qat.purr.backends.utilities.SimpleAcquire.pulse_channel"]], "qat.purr.backends.utilities": [[22, "module-qat.purr.backends.utilities"]], "remove_axes() (in module qat.purr.backends.utilities)": [[22, "qat.purr.backends.utilities.remove_axes"]], "samples (simpleacquire attribute)": [[22, "qat.purr.backends.utilities.SimpleAcquire.samples"]], "software_post_process_discriminate() (in module qat.purr.backends.utilities)": [[22, "qat.purr.backends.utilities.software_post_process_discriminate"]], "software_post_process_down_convert() (in module qat.purr.backends.utilities)": [[22, "qat.purr.backends.utilities.software_post_process_down_convert"]], "software_post_process_linear_map_complex_to_real() (in module qat.purr.backends.utilities)": [[22, "qat.purr.backends.utilities.software_post_process_linear_map_complex_to_real"]], "software_post_process_mean() (in module qat.purr.backends.utilities)": [[22, "qat.purr.backends.utilities.software_post_process_mean"]], "start (positiondata attribute)": [[22, "qat.purr.backends.utilities.PositionData.start"]], "start (simpleacquire attribute)": [[22, "qat.purr.backends.utilities.SimpleAcquire.start"]], "step() (roundedsquarefunction method)": [[22, "qat.purr.backends.utilities.RoundedSquareFunction.step"]], "validate_input_array() (in module qat.purr.backends.utilities)": [[22, "qat.purr.backends.utilities.validate_input_array"]], "qat.purr.compiler": [[24, "module-qat.purr.compiler"]], "axis (class in qat.purr.compiler.builders)": [[25, "qat.purr.compiler.builders.Axis"]], "ecr() (instructionbuilder method)": [[25, "qat.purr.compiler.builders.InstructionBuilder.ECR"]], "ecr() (quantuminstructionbuilder method)": [[25, "qat.purr.compiler.builders.QuantumInstructionBuilder.ECR"]], "fluidbuilderwrapper (class in qat.purr.compiler.builders)": [[25, "qat.purr.compiler.builders.FluidBuilderWrapper"]], "instructionbuilder (class in qat.purr.compiler.builders)": [[25, "qat.purr.compiler.builders.InstructionBuilder"]], "quantuminstructionbuilder (class in qat.purr.compiler.builders)": [[25, "qat.purr.compiler.builders.QuantumInstructionBuilder"]], "s() (instructionbuilder method)": [[25, "qat.purr.compiler.builders.InstructionBuilder.S"]], "sx() (instructionbuilder method)": [[25, "qat.purr.compiler.builders.InstructionBuilder.SX"]], "sxdg() (instructionbuilder method)": [[25, "qat.purr.compiler.builders.InstructionBuilder.SXdg"]], "sdg() (instructionbuilder method)": [[25, "qat.purr.compiler.builders.InstructionBuilder.Sdg"]], "t() (instructionbuilder method)": [[25, "qat.purr.compiler.builders.InstructionBuilder.T"]], "tdg() (instructionbuilder method)": [[25, "qat.purr.compiler.builders.InstructionBuilder.Tdg"]], "u() (instructionbuilder method)": [[25, "qat.purr.compiler.builders.InstructionBuilder.U"]], "u() (quantuminstructionbuilder method)": [[25, "qat.purr.compiler.builders.QuantumInstructionBuilder.U"]], "x (axis attribute)": [[25, "qat.purr.compiler.builders.Axis.X"]], "x() (instructionbuilder method)": [[25, "qat.purr.compiler.builders.InstructionBuilder.X"]], "x() (quantuminstructionbuilder method)": [[25, "qat.purr.compiler.builders.QuantumInstructionBuilder.X"]], "y (axis attribute)": [[25, "qat.purr.compiler.builders.Axis.Y"]], "y() (instructionbuilder method)": [[25, "qat.purr.compiler.builders.InstructionBuilder.Y"]], "y() (quantuminstructionbuilder method)": [[25, "qat.purr.compiler.builders.QuantumInstructionBuilder.Y"]], "z (axis attribute)": [[25, "qat.purr.compiler.builders.Axis.Z"]], "z() (instructionbuilder method)": [[25, "qat.purr.compiler.builders.InstructionBuilder.Z"]], "z() (quantuminstructionbuilder method)": [[25, "qat.purr.compiler.builders.QuantumInstructionBuilder.Z"]], "acquire() (instructionbuilder method)": [[25, "qat.purr.compiler.builders.InstructionBuilder.acquire"]], "acquire() (quantuminstructionbuilder method)": [[25, "qat.purr.compiler.builders.QuantumInstructionBuilder.acquire"]], "add() (instructionbuilder method)": [[25, "qat.purr.compiler.builders.InstructionBuilder.add"]], "assign() (instructionbuilder method)": [[25, "qat.purr.compiler.builders.InstructionBuilder.assign"]], "cx() (instructionbuilder method)": [[25, "qat.purr.compiler.builders.InstructionBuilder.cX"]], "cy() (instructionbuilder method)": [[25, "qat.purr.compiler.builders.InstructionBuilder.cY"]], "cz() (instructionbuilder method)": [[25, "qat.purr.compiler.builders.InstructionBuilder.cZ"]], "ccnot() (instructionbuilder method)": [[25, "qat.purr.compiler.builders.InstructionBuilder.ccnot"]], "clear() (instructionbuilder method)": [[25, "qat.purr.compiler.builders.InstructionBuilder.clear"]], "cnot() (instructionbuilder method)": [[25, "qat.purr.compiler.builders.InstructionBuilder.cnot"]], "cnot() (quantuminstructionbuilder method)": [[25, "qat.purr.compiler.builders.QuantumInstructionBuilder.cnot"]], "controlled() (instructionbuilder method)": [[25, "qat.purr.compiler.builders.InstructionBuilder.controlled"]], "create_label() (instructionbuilder method)": [[25, "qat.purr.compiler.builders.InstructionBuilder.create_label"]], "cswap() (instructionbuilder method)": [[25, "qat.purr.compiler.builders.InstructionBuilder.cswap"]], "delay() (instructionbuilder method)": [[25, "qat.purr.compiler.builders.InstructionBuilder.delay"]], "delay() (quantuminstructionbuilder method)": [[25, "qat.purr.compiler.builders.QuantumInstructionBuilder.delay"]], "deserialize() (instructionbuilder static method)": [[25, "qat.purr.compiler.builders.InstructionBuilder.deserialize"]], "device_assign() (instructionbuilder method)": [[25, "qat.purr.compiler.builders.InstructionBuilder.device_assign"]], "frequency_shift() (quantuminstructionbuilder method)": [[25, "qat.purr.compiler.builders.QuantumInstructionBuilder.frequency_shift"]], "get_child_builder() (instructionbuilder method)": [[25, "qat.purr.compiler.builders.InstructionBuilder.get_child_builder"]], "get_child_builder() (quantuminstructionbuilder method)": [[25, "qat.purr.compiler.builders.QuantumInstructionBuilder.get_child_builder"]], "had() (instructionbuilder method)": [[25, "qat.purr.compiler.builders.InstructionBuilder.had"]], "instructions (instructionbuilder property)": [[25, "qat.purr.compiler.builders.InstructionBuilder.instructions"]], "jump() (instructionbuilder method)": [[25, "qat.purr.compiler.builders.InstructionBuilder.jump"]], "measure() (instructionbuilder method)": [[25, "qat.purr.compiler.builders.InstructionBuilder.measure"]], "measure() (quantuminstructionbuilder method)": [[25, "qat.purr.compiler.builders.QuantumInstructionBuilder.measure"]], "measure_mean_signal() (instructionbuilder method)": [[25, "qat.purr.compiler.builders.InstructionBuilder.measure_mean_signal"]], "measure_mean_signal() (quantuminstructionbuilder method)": [[25, "qat.purr.compiler.builders.QuantumInstructionBuilder.measure_mean_signal"]], "measure_mean_z() (instructionbuilder method)": [[25, "qat.purr.compiler.builders.InstructionBuilder.measure_mean_z"]], "measure_mean_z() (quantuminstructionbuilder method)": [[25, "qat.purr.compiler.builders.QuantumInstructionBuilder.measure_mean_z"]], "measure_scope_mode() (quantuminstructionbuilder method)": [[25, "qat.purr.compiler.builders.QuantumInstructionBuilder.measure_scope_mode"]], "measure_single_shot_binned() (quantuminstructionbuilder method)": [[25, "qat.purr.compiler.builders.QuantumInstructionBuilder.measure_single_shot_binned"]], "measure_single_shot_signal() (instructionbuilder method)": [[25, "qat.purr.compiler.builders.InstructionBuilder.measure_single_shot_signal"]], "measure_single_shot_signal() (quantuminstructionbuilder method)": [[25, "qat.purr.compiler.builders.QuantumInstructionBuilder.measure_single_shot_signal"]], "measure_single_shot_z() (instructionbuilder method)": [[25, "qat.purr.compiler.builders.InstructionBuilder.measure_single_shot_z"]], "measure_single_shot_z() (quantuminstructionbuilder method)": [[25, "qat.purr.compiler.builders.QuantumInstructionBuilder.measure_single_shot_z"]], "merge_builder() (instructionbuilder method)": [[25, "qat.purr.compiler.builders.InstructionBuilder.merge_builder"]], "phase_shift() (instructionbuilder method)": [[25, "qat.purr.compiler.builders.InstructionBuilder.phase_shift"]], "phase_shift() (quantuminstructionbuilder method)": [[25, "qat.purr.compiler.builders.QuantumInstructionBuilder.phase_shift"]], "post_processing() (instructionbuilder method)": [[25, "qat.purr.compiler.builders.InstructionBuilder.post_processing"]], "post_processing() (quantuminstructionbuilder method)": [[25, "qat.purr.compiler.builders.QuantumInstructionBuilder.post_processing"]], "pulse() (instructionbuilder method)": [[25, "qat.purr.compiler.builders.InstructionBuilder.pulse"]], "pulse() (quantuminstructionbuilder method)": [[25, "qat.purr.compiler.builders.QuantumInstructionBuilder.pulse"]], "qat.purr.compiler.builders": [[25, "module-qat.purr.compiler.builders"]], "repeat() (instructionbuilder method)": [[25, "qat.purr.compiler.builders.InstructionBuilder.repeat"]], "reset() (instructionbuilder method)": [[25, "qat.purr.compiler.builders.InstructionBuilder.reset"]], "results_processing() (instructionbuilder method)": [[25, "qat.purr.compiler.builders.InstructionBuilder.results_processing"]], "returns() (instructionbuilder method)": [[25, "qat.purr.compiler.builders.InstructionBuilder.returns"]], "serialize() (instructionbuilder method)": [[25, "qat.purr.compiler.builders.InstructionBuilder.serialize"]], "splice() (instructionbuilder method)": [[25, "qat.purr.compiler.builders.InstructionBuilder.splice"]], "swap() (instructionbuilder method)": [[25, "qat.purr.compiler.builders.InstructionBuilder.swap"]], "sweep() (instructionbuilder method)": [[25, "qat.purr.compiler.builders.InstructionBuilder.sweep"]], "sweep() (quantuminstructionbuilder method)": [[25, "qat.purr.compiler.builders.QuantumInstructionBuilder.sweep"]], "synchronize() (instructionbuilder method)": [[25, "qat.purr.compiler.builders.InstructionBuilder.synchronize"]], "synchronize() (quantuminstructionbuilder method)": [[25, "qat.purr.compiler.builders.QuantumInstructionBuilder.synchronize"]], "qatcache (class in qat.purr.compiler.caches)": [[26, "qat.purr.compiler.caches.QatCache"]], "create_cache_folders() (qatcache method)": [[26, "qat.purr.compiler.caches.QatCache.create_cache_folders"]], "delete_cache_folders() (qatcache method)": [[26, "qat.purr.compiler.caches.QatCache.delete_cache_folders"]], "qat.purr.compiler.caches": [[26, "module-qat.purr.compiler.caches"]], "binary (inlineresultsprocessing attribute)": [[27, "qat.purr.compiler.config.InlineResultsProcessing.Binary"]], "binarycount (resultsformatting attribute)": [[27, "qat.purr.compiler.config.ResultsFormatting.BinaryCount"]], "calibrationarguments (class in qat.purr.compiler.config)": [[27, "qat.purr.compiler.config.CalibrationArguments"]], "cliffordsimp (tketoptimizations attribute)": [[27, "qat.purr.compiler.config.TketOptimizations.CliffordSimp"]], "compilerconfig (class in qat.purr.compiler.config)": [[27, "qat.purr.compiler.config.CompilerConfig"]], "contextsimp (tketoptimizations attribute)": [[27, "qat.purr.compiler.config.TketOptimizations.ContextSimp"]], "decomposearbitrarilycontrolledgates (tketoptimizations attribute)": [[27, "qat.purr.compiler.config.TketOptimizations.DecomposeArbitrarilyControlledGates"]], "default (metricstype attribute)": [[27, "qat.purr.compiler.config.MetricsType.Default"]], "defaultmappingpass (tketoptimizations attribute)": [[27, "qat.purr.compiler.config.TketOptimizations.DefaultMappingPass"]], "directionalcxgates (tketoptimizations attribute)": [[27, "qat.purr.compiler.config.TketOptimizations.DirectionalCXGates"]], "dynamicstructurereturn (resultsformatting attribute)": [[27, "qat.purr.compiler.config.ResultsFormatting.DynamicStructureReturn"]], "empty (errormitigationconfig attribute)": [[27, "qat.purr.compiler.config.ErrorMitigationConfig.Empty"]], "empty (languages attribute)": [[27, "qat.purr.compiler.config.Languages.Empty"]], "empty (metricstype attribute)": [[27, "qat.purr.compiler.config.MetricsType.Empty"]], "empty (qatoptimizations attribute)": [[27, "qat.purr.compiler.config.QatOptimizations.Empty"]], "empty (qiskitoptimizations attribute)": [[27, "qat.purr.compiler.config.QiskitOptimizations.Empty"]], "empty (tketoptimizations attribute)": [[27, "qat.purr.compiler.config.TketOptimizations.Empty"]], "errormitigationconfig (class in qat.purr.compiler.config)": [[27, "qat.purr.compiler.config.ErrorMitigationConfig"]], "experiment (inlineresultsprocessing attribute)": [[27, "qat.purr.compiler.config.InlineResultsProcessing.Experiment"]], "experimentalfeatures (class in qat.purr.compiler.config)": [[27, "qat.purr.compiler.config.ExperimentalFeatures"]], "fullpeepholeoptimise (tketoptimizations attribute)": [[27, "qat.purr.compiler.config.TketOptimizations.FullPeepholeOptimise"]], "globalisephasedx (tketoptimizations attribute)": [[27, "qat.purr.compiler.config.TketOptimizations.GlobalisePhasedX"]], "inlineresultsprocessing (class in qat.purr.compiler.config)": [[27, "qat.purr.compiler.config.InlineResultsProcessing"]], "kakdecomposition (tketoptimizations attribute)": [[27, "qat.purr.compiler.config.TketOptimizations.KAKDecomposition"]], "languages (class in qat.purr.compiler.config)": [[27, "qat.purr.compiler.config.Languages"]], "linearmitigation (errormitigationconfig attribute)": [[27, "qat.purr.compiler.config.ErrorMitigationConfig.LinearMitigation"]], "matrixmitigation (errormitigationconfig attribute)": [[27, "qat.purr.compiler.config.ErrorMitigationConfig.MatrixMitigation"]], "metricstype (class in qat.purr.compiler.config)": [[27, "qat.purr.compiler.config.MetricsType"]], "numpyarrays (inlineresultsprocessing attribute)": [[27, "qat.purr.compiler.config.InlineResultsProcessing.NumpyArrays"]], "one (tketoptimizations attribute)": [[27, "qat.purr.compiler.config.TketOptimizations.One"]], "optimizationconfig (class in qat.purr.compiler.config)": [[27, "qat.purr.compiler.config.OptimizationConfig"]], "optimizedcircuit (metricstype attribute)": [[27, "qat.purr.compiler.config.MetricsType.OptimizedCircuit"]], "optimizedinstructioncount (metricstype attribute)": [[27, "qat.purr.compiler.config.MetricsType.OptimizedInstructionCount"]], "peepholeoptimise2q (tketoptimizations attribute)": [[27, "qat.purr.compiler.config.TketOptimizations.PeepholeOptimise2Q"]], "program (inlineresultsprocessing attribute)": [[27, "qat.purr.compiler.config.InlineResultsProcessing.Program"]], "qir (languages attribute)": [[27, "qat.purr.compiler.config.Languages.QIR"]], "qiroptimizations (class in qat.purr.compiler.config)": [[27, "qat.purr.compiler.config.QIROptimizations"]], "qasm2 (languages attribute)": [[27, "qat.purr.compiler.config.Languages.Qasm2"]], "qasm2optimizations (class in qat.purr.compiler.config)": [[27, "qat.purr.compiler.config.Qasm2Optimizations"]], "qasm3 (languages attribute)": [[27, "qat.purr.compiler.config.Languages.Qasm3"]], "qasm3optimizations (class in qat.purr.compiler.config)": [[27, "qat.purr.compiler.config.Qasm3Optimizations"]], "qatoptimizations (class in qat.purr.compiler.config)": [[27, "qat.purr.compiler.config.QatOptimizations"]], "qiskit (class in qat.purr.compiler.config)": [[27, "qat.purr.compiler.config.Qiskit"]], "qiskitoptimizations (class in qat.purr.compiler.config)": [[27, "qat.purr.compiler.config.QiskitOptimizations"]], "quantumresultsformat (class in qat.purr.compiler.config)": [[27, "qat.purr.compiler.config.QuantumResultsFormat"]], "raw (inlineresultsprocessing attribute)": [[27, "qat.purr.compiler.config.InlineResultsProcessing.Raw"]], "removebarriers (tketoptimizations attribute)": [[27, "qat.purr.compiler.config.TketOptimizations.RemoveBarriers"]], "removediscarded (tketoptimizations attribute)": [[27, "qat.purr.compiler.config.TketOptimizations.RemoveDiscarded"]], "removeredundancies (tketoptimizations attribute)": [[27, "qat.purr.compiler.config.TketOptimizations.RemoveRedundancies"]], "resultsformatting (class in qat.purr.compiler.config)": [[27, "qat.purr.compiler.config.ResultsFormatting"]], "simplifymeasured (tketoptimizations attribute)": [[27, "qat.purr.compiler.config.TketOptimizations.SimplifyMeasured"]], "squashbinaryresultarrays (resultsformatting attribute)": [[27, "qat.purr.compiler.config.ResultsFormatting.SquashBinaryResultArrays"]], "threequbitsquash (tketoptimizations attribute)": [[27, "qat.purr.compiler.config.TketOptimizations.ThreeQubitSquash"]], "tket (class in qat.purr.compiler.config)": [[27, "qat.purr.compiler.config.Tket"]], "tketoptimizations (class in qat.purr.compiler.config)": [[27, "qat.purr.compiler.config.TketOptimizations"]], "two (tketoptimizations attribute)": [[27, "qat.purr.compiler.config.TketOptimizations.Two"]], "binary() (quantumresultsformat method)": [[27, "qat.purr.compiler.config.QuantumResultsFormat.binary"]], "binary_count() (quantumresultsformat method)": [[27, "qat.purr.compiler.config.QuantumResultsFormat.binary_count"]], "create_from_json() (compilerconfig class method)": [[27, "qat.purr.compiler.config.CompilerConfig.create_from_json"]], "default() (optimizationconfig method)": [[27, "qat.purr.compiler.config.OptimizationConfig.default"]], "default() (qiskit method)": [[27, "qat.purr.compiler.config.Qiskit.default"]], "default() (tket method)": [[27, "qat.purr.compiler.config.Tket.default"]], "disable() (optimizationconfig method)": [[27, "qat.purr.compiler.config.OptimizationConfig.disable"]], "disable() (tket method)": [[27, "qat.purr.compiler.config.Tket.disable"]], "error_mitigation (experimentalfeatures attribute)": [[27, "qat.purr.compiler.config.ExperimentalFeatures.error_mitigation"]], "from_dict() (calibrationarguments method)": [[27, "qat.purr.compiler.config.CalibrationArguments.from_dict"]], "from_json() (calibrationarguments method)": [[27, "qat.purr.compiler.config.CalibrationArguments.from_json"]], "from_json() (compilerconfig method)": [[27, "qat.purr.compiler.config.CompilerConfig.from_json"]], "get_config() (in module qat.purr.compiler.config)": [[27, "qat.purr.compiler.config.get_config"]], "get_optimizer_config() (in module qat.purr.compiler.config)": [[27, "qat.purr.compiler.config.get_optimizer_config"]], "get_serializable_types() (in module qat.purr.compiler.config)": [[27, "qat.purr.compiler.config.get_serializable_types"]], "is_composite() (metricstype method)": [[27, "qat.purr.compiler.config.MetricsType.is_composite"]], "minimum() (optimizationconfig method)": [[27, "qat.purr.compiler.config.OptimizationConfig.minimum"]], "minimum() (tket method)": [[27, "qat.purr.compiler.config.Tket.minimum"]], "qat.purr.compiler.config": [[27, "module-qat.purr.compiler.config"]], "raw() (quantumresultsformat method)": [[27, "qat.purr.compiler.config.QuantumResultsFormat.raw"]], "snake_case_name() (metricstype method)": [[27, "qat.purr.compiler.config.MetricsType.snake_case_name"]], "squash_binary_result_arrays() (quantumresultsformat method)": [[27, "qat.purr.compiler.config.QuantumResultsFormat.squash_binary_result_arrays"]], "to_json() (calibrationarguments method)": [[27, "qat.purr.compiler.config.CalibrationArguments.to_json"]], "to_json() (compilerconfig method)": [[27, "qat.purr.compiler.config.CompilerConfig.to_json"]], "validate() (compilerconfig method)": [[27, "qat.purr.compiler.config.CompilerConfig.validate"]], "blackman (pulseshapetype attribute)": [[28, "qat.purr.compiler.devices.PulseShapeType.BLACKMAN"]], "cos (pulseshapetype attribute)": [[28, "qat.purr.compiler.devices.PulseShapeType.COS"]], "calibratable (class in qat.purr.compiler.devices)": [[28, "qat.purr.compiler.devices.Calibratable"]], "channeltype (class in qat.purr.compiler.devices)": [[28, "qat.purr.compiler.devices.ChannelType"]], "cyclicrefpickler (class in qat.purr.compiler.devices)": [[28, "qat.purr.compiler.devices.CyclicRefPickler"]], "cyclicrefunpickler (class in qat.purr.compiler.devices)": [[28, "qat.purr.compiler.devices.CyclicRefUnpickler"]], "extra_soft_square (pulseshapetype attribute)": [[28, "qat.purr.compiler.devices.PulseShapeType.EXTRA_SOFT_SQUARE"]], "fakelist (class in qat.purr.compiler.devices)": [[28, "qat.purr.compiler.devices.FakeList"]], "freqshiftpulsechannel (class in qat.purr.compiler.devices)": [[28, "qat.purr.compiler.devices.FreqShiftPulseChannel"]], "gaussian (pulseshapetype attribute)": [[28, "qat.purr.compiler.devices.PulseShapeType.GAUSSIAN"]], "gaussian_drag (pulseshapetype attribute)": [[28, "qat.purr.compiler.devices.PulseShapeType.GAUSSIAN_DRAG"]], "gaussian_square (pulseshapetype attribute)": [[28, "qat.purr.compiler.devices.PulseShapeType.GAUSSIAN_SQUARE"]], "gaussian_zero_edge (pulseshapetype attribute)": [[28, "qat.purr.compiler.devices.PulseShapeType.GAUSSIAN_ZERO_EDGE"]], "pttype (quantumdevice attribute)": [[28, "qat.purr.compiler.devices.QuantumDevice.PTType"]], "physicalbaseband (class in qat.purr.compiler.devices)": [[28, "qat.purr.compiler.devices.PhysicalBaseband"]], "physicalchannel (class in qat.purr.compiler.devices)": [[28, "qat.purr.compiler.devices.PhysicalChannel"]], "pulsechannel (class in qat.purr.compiler.devices)": [[28, "qat.purr.compiler.devices.PulseChannel"]], "pulsechannelview (class in qat.purr.compiler.devices)": [[28, "qat.purr.compiler.devices.PulseChannelView"]], "pulseshapetype (class in qat.purr.compiler.devices)": [[28, "qat.purr.compiler.devices.PulseShapeType"]], "quantumcomponent (class in qat.purr.compiler.devices)": [[28, "qat.purr.compiler.devices.QuantumComponent"]], "quantumdevice (class in qat.purr.compiler.devices)": [[28, "qat.purr.compiler.devices.QuantumDevice"]], "qubit (class in qat.purr.compiler.devices)": [[28, "qat.purr.compiler.devices.Qubit"]], "qubitcoupling (class in qat.purr.compiler.devices)": [[28, "qat.purr.compiler.devices.QubitCoupling"]], "rounded_square (pulseshapetype attribute)": [[28, "qat.purr.compiler.devices.PulseShapeType.ROUNDED_SQUARE"]], "resonator (class in qat.purr.compiler.devices)": [[28, "qat.purr.compiler.devices.Resonator"]], "sech (pulseshapetype attribute)": [[28, "qat.purr.compiler.devices.PulseShapeType.SECH"]], "setup_hold (pulseshapetype attribute)": [[28, "qat.purr.compiler.devices.PulseShapeType.SETUP_HOLD"]], "sin (pulseshapetype attribute)": [[28, "qat.purr.compiler.devices.PulseShapeType.SIN"]], "softer_gaussian (pulseshapetype attribute)": [[28, "qat.purr.compiler.devices.PulseShapeType.SOFTER_GAUSSIAN"]], "softer_square (pulseshapetype attribute)": [[28, "qat.purr.compiler.devices.PulseShapeType.SOFTER_SQUARE"]], "soft_square (pulseshapetype attribute)": [[28, "qat.purr.compiler.devices.PulseShapeType.SOFT_SQUARE"]], "square (pulseshapetype attribute)": [[28, "qat.purr.compiler.devices.PulseShapeType.SQUARE"]], "acquire (channeltype attribute)": [[28, "qat.purr.compiler.devices.ChannelType.acquire"]], "acquire_allowed (pulsechannel property)": [[28, "qat.purr.compiler.devices.PulseChannel.acquire_allowed"]], "add_coupled_qubit() (qubit method)": [[28, "qat.purr.compiler.devices.Qubit.add_coupled_qubit"]], "add_cross_resonance() (in module qat.purr.compiler.devices)": [[28, "qat.purr.compiler.devices.add_cross_resonance"]], "add_pulse_channel() (quantumdevice method)": [[28, "qat.purr.compiler.devices.QuantumDevice.add_pulse_channel"]], "append() (fakelist method)": [[28, "qat.purr.compiler.devices.FakeList.append"]], "baseband_frequency (physicalchannel property)": [[28, "qat.purr.compiler.devices.PhysicalChannel.baseband_frequency"]], "baseband_frequency (pulsechannel property)": [[28, "qat.purr.compiler.devices.PulseChannel.baseband_frequency"]], "baseband_if_frequency (physicalchannel property)": [[28, "qat.purr.compiler.devices.PhysicalChannel.baseband_if_frequency"]], "baseband_if_frequency (pulsechannel property)": [[28, "qat.purr.compiler.devices.PulseChannel.baseband_if_frequency"]], "block_size (pulsechannel property)": [[28, "qat.purr.compiler.devices.PulseChannel.block_size"]], "block_time (physicalchannel property)": [[28, "qat.purr.compiler.devices.PhysicalChannel.block_time"]], "block_time (pulsechannel property)": [[28, "qat.purr.compiler.devices.PulseChannel.block_time"]], "build_qubit() (in module qat.purr.compiler.devices)": [[28, "qat.purr.compiler.devices.build_qubit"]], "build_resonator() (in module qat.purr.compiler.devices)": [[28, "qat.purr.compiler.devices.build_resonator"]], "create_freq_shift_pulse_channel() (physicalchannel method)": [[28, "qat.purr.compiler.devices.PhysicalChannel.create_freq_shift_pulse_channel"]], "create_pulse_channel() (physicalchannel method)": [[28, "qat.purr.compiler.devices.PhysicalChannel.create_pulse_channel"]], "create_pulse_channel() (quantumdevice method)": [[28, "qat.purr.compiler.devices.QuantumDevice.create_pulse_channel"]], "cross_resonance (channeltype attribute)": [[28, "qat.purr.compiler.devices.ChannelType.cross_resonance"]], "cross_resonance_cancellation (channeltype attribute)": [[28, "qat.purr.compiler.devices.ChannelType.cross_resonance_cancellation"]], "drive (channeltype attribute)": [[28, "qat.purr.compiler.devices.ChannelType.drive"]], "freq_shift (channeltype attribute)": [[28, "qat.purr.compiler.devices.ChannelType.freq_shift"]], "full_id() (pulsechannel method)": [[28, "qat.purr.compiler.devices.PulseChannel.full_id"]], "full_id() (quantumcomponent method)": [[28, "qat.purr.compiler.devices.QuantumComponent.full_id"]], "get_acquire_channel() (qubit method)": [[28, "qat.purr.compiler.devices.Qubit.get_acquire_channel"]], "get_acquire_channel() (resonator method)": [[28, "qat.purr.compiler.devices.Resonator.get_acquire_channel"]], "get_all_channels() (qubit method)": [[28, "qat.purr.compiler.devices.Qubit.get_all_channels"]], "get_auxiliary_devices() (quantumdevice method)": [[28, "qat.purr.compiler.devices.QuantumDevice.get_auxiliary_devices"]], "get_calibration() (calibratable method)": [[28, "qat.purr.compiler.devices.Calibratable.get_calibration"]], "get_cross_resonance_cancellation_channel() (qubit method)": [[28, "qat.purr.compiler.devices.Qubit.get_cross_resonance_cancellation_channel"]], "get_cross_resonance_channel() (qubit method)": [[28, "qat.purr.compiler.devices.Qubit.get_cross_resonance_channel"]], "get_default_pulse_channel() (quantumdevice method)": [[28, "qat.purr.compiler.devices.QuantumDevice.get_default_pulse_channel"]], "get_drive_channel() (qubit method)": [[28, "qat.purr.compiler.devices.Qubit.get_drive_channel"]], "get_freq_shift_channel() (qubit method)": [[28, "qat.purr.compiler.devices.Qubit.get_freq_shift_channel"]], "get_measure_channel() (qubit method)": [[28, "qat.purr.compiler.devices.Qubit.get_measure_channel"]], "get_measure_channel() (resonator method)": [[28, "qat.purr.compiler.devices.Resonator.get_measure_channel"]], "get_pulse_channel() (quantumdevice method)": [[28, "qat.purr.compiler.devices.QuantumDevice.get_pulse_channel"]], "get_second_state_channel() (qubit method)": [[28, "qat.purr.compiler.devices.Qubit.get_second_state_channel"]], "imbalance (pulsechannel property)": [[28, "qat.purr.compiler.devices.PulseChannel.imbalance"]], "load_calibration() (calibratable static method)": [[28, "qat.purr.compiler.devices.Calibratable.load_calibration"]], "load_calibration_from_file() (calibratable static method)": [[28, "qat.purr.compiler.devices.Calibratable.load_calibration_from_file"]], "macq (channeltype attribute)": [[28, "qat.purr.compiler.devices.ChannelType.macq"]], "max_frequency (pulsechannel property)": [[28, "qat.purr.compiler.devices.PulseChannel.max_frequency"]], "measure (channeltype attribute)": [[28, "qat.purr.compiler.devices.ChannelType.measure"]], "measure_device (qubit attribute)": [[28, "qat.purr.compiler.devices.Qubit.measure_device"]], "min_frequency (pulsechannel property)": [[28, "qat.purr.compiler.devices.PulseChannel.min_frequency"]], "multi_device_pulse_channel_types (quantumdevice attribute)": [[28, "qat.purr.compiler.devices.QuantumDevice.multi_device_pulse_channel_types"]], "partial_id() (pulsechannel method)": [[28, "qat.purr.compiler.devices.PulseChannel.partial_id"]], "phase_offset (pulsechannel property)": [[28, "qat.purr.compiler.devices.PulseChannel.phase_offset"]], "physical_channel_id (pulsechannel property)": [[28, "qat.purr.compiler.devices.PulseChannel.physical_channel_id"]], "qat.purr.compiler.devices": [[28, "module-qat.purr.compiler.devices"]], "ref_field (cyclicrefpickler attribute)": [[28, "qat.purr.compiler.devices.CyclicRefPickler.ref_field"]], "reset() (cyclicrefunpickler method)": [[28, "qat.purr.compiler.devices.CyclicRefUnpickler.reset"]], "sample_time (pulsechannel property)": [[28, "qat.purr.compiler.devices.PulseChannel.sample_time"]], "save_calibration_to_file() (calibratable method)": [[28, "qat.purr.compiler.devices.Calibratable.save_calibration_to_file"]], "second_state (channeltype attribute)": [[28, "qat.purr.compiler.devices.ChannelType.second_state"]], "instructionemitter (class in qat.purr.compiler.emitter)": [[29, "qat.purr.compiler.emitter.InstructionEmitter"]], "qatfile (class in qat.purr.compiler.emitter)": [[29, "qat.purr.compiler.emitter.QatFile"]], "timelinesegment (class in qat.purr.compiler.emitter)": [[29, "qat.purr.compiler.emitter.TimelineSegment"]], "add() (qatfile method)": [[29, "qat.purr.compiler.emitter.QatFile.add"]], "add_meta() (qatfile method)": [[29, "qat.purr.compiler.emitter.QatFile.add_meta"]], "emit() (instructionemitter method)": [[29, "qat.purr.compiler.emitter.InstructionEmitter.emit"]], "get_pp_for_variable() (qatfile method)": [[29, "qat.purr.compiler.emitter.QatFile.get_pp_for_variable"]], "instructions (qatfile property)": [[29, "qat.purr.compiler.emitter.QatFile.instructions"]], "qat.purr.compiler.emitter": [[29, "module-qat.purr.compiler.emitter"]], "repeat (qatfile property)": [[29, "qat.purr.compiler.emitter.QatFile.repeat"]], "return_ (qatfile property)": [[29, "qat.purr.compiler.emitter.QatFile.return_"]], "sweeps (qatfile property)": [[29, "qat.purr.compiler.emitter.QatFile.sweeps"]], "qat.purr.compiler.error_mitigation": [[30, "module-qat.purr.compiler.error_mitigation"]], "applyhybridreadoutmitigation (class in qat.purr.compiler.error_mitigation.readout_mitigation)": [[31, "qat.purr.compiler.error_mitigation.readout_mitigation.ApplyHybridReadoutMitigation"]], "applylinearreadoutmitigation (class in qat.purr.compiler.error_mitigation.readout_mitigation)": [[31, "qat.purr.compiler.error_mitigation.readout_mitigation.ApplyLinearReadoutMitigation"]], "applymatrixreadoutmitigation (class in qat.purr.compiler.error_mitigation.readout_mitigation)": [[31, "qat.purr.compiler.error_mitigation.readout_mitigation.ApplyMatrixReadoutMitigation"]], "applypostprocreadoutmitigation (class in qat.purr.compiler.error_mitigation.readout_mitigation)": [[31, "qat.purr.compiler.error_mitigation.readout_mitigation.ApplyPostProcReadoutMitigation"]], "applyreadoutmitigation (class in qat.purr.compiler.error_mitigation.readout_mitigation)": [[31, "qat.purr.compiler.error_mitigation.readout_mitigation.ApplyReadoutMitigation"]], "apply_correction_qubit() (applylinearreadoutmitigation method)": [[31, "qat.purr.compiler.error_mitigation.readout_mitigation.ApplyLinearReadoutMitigation.apply_correction_qubit"]], "apply_error_mitigation() (applyhybridreadoutmitigation method)": [[31, "qat.purr.compiler.error_mitigation.readout_mitigation.ApplyHybridReadoutMitigation.apply_error_mitigation"]], "apply_error_mitigation() (applylinearreadoutmitigation method)": [[31, "qat.purr.compiler.error_mitigation.readout_mitigation.ApplyLinearReadoutMitigation.apply_error_mitigation"]], "apply_error_mitigation() (applymatrixreadoutmitigation method)": [[31, "qat.purr.compiler.error_mitigation.readout_mitigation.ApplyMatrixReadoutMitigation.apply_error_mitigation"]], "apply_error_mitigation() (applypostprocreadoutmitigation method)": [[31, "qat.purr.compiler.error_mitigation.readout_mitigation.ApplyPostProcReadoutMitigation.apply_error_mitigation"]], "apply_error_mitigation() (applyreadoutmitigation method)": [[31, "qat.purr.compiler.error_mitigation.readout_mitigation.ApplyReadoutMitigation.apply_error_mitigation"]], "create_array_from_dict() (applymatrixreadoutmitigation method)": [[31, "qat.purr.compiler.error_mitigation.readout_mitigation.ApplyMatrixReadoutMitigation.create_array_from_dict"]], "get_readout_mitigation() (in module qat.purr.compiler.error_mitigation.readout_mitigation)": [[31, "qat.purr.compiler.error_mitigation.readout_mitigation.get_readout_mitigation"]], "name (applyhybridreadoutmitigation attribute)": [[31, "qat.purr.compiler.error_mitigation.readout_mitigation.ApplyHybridReadoutMitigation.name"]], "name (applylinearreadoutmitigation attribute)": [[31, "qat.purr.compiler.error_mitigation.readout_mitigation.ApplyLinearReadoutMitigation.name"]], "name (applymatrixreadoutmitigation attribute)": [[31, "qat.purr.compiler.error_mitigation.readout_mitigation.ApplyMatrixReadoutMitigation.name"]], "name (applypostprocreadoutmitigation attribute)": [[31, "qat.purr.compiler.error_mitigation.readout_mitigation.ApplyPostProcReadoutMitigation.name"]], "name (applyreadoutmitigation attribute)": [[31, "qat.purr.compiler.error_mitigation.readout_mitigation.ApplyReadoutMitigation.name"]], "process_results() (applyreadoutmitigation method)": [[31, "qat.purr.compiler.error_mitigation.readout_mitigation.ApplyReadoutMitigation.process_results"]], "qat.purr.compiler.error_mitigation.readout_mitigation": [[31, "module-qat.purr.compiler.error_mitigation.readout_mitigation"]], "remap_result() (applymatrixreadoutmitigation method)": [[31, "qat.purr.compiler.error_mitigation.readout_mitigation.ApplyMatrixReadoutMitigation.remap_result"]], "deviceinjector (class in qat.purr.compiler.execution)": [[32, "qat.purr.compiler.execution.DeviceInjector"]], "deviceinjectors (class in qat.purr.compiler.execution)": [[32, "qat.purr.compiler.execution.DeviceInjectors"]], "injectionmetadata (class in qat.purr.compiler.execution)": [[32, "qat.purr.compiler.execution.InjectionMetadata"]], "instructionexecutionengine (class in qat.purr.compiler.execution)": [[32, "qat.purr.compiler.execution.InstructionExecutionEngine"]], "iteratorinjector (class in qat.purr.compiler.execution)": [[32, "qat.purr.compiler.execution.IteratorInjector"]], "quantumexecutionengine (class in qat.purr.compiler.execution)": [[32, "qat.purr.compiler.execution.QuantumExecutionEngine"]], "sweepiterator (class in qat.purr.compiler.execution)": [[32, "qat.purr.compiler.execution.SweepIterator"]], "valuereplacement (class in qat.purr.compiler.execution)": [[32, "qat.purr.compiler.execution.ValueReplacement"]], "variableinjector (class in qat.purr.compiler.execution)": [[32, "qat.purr.compiler.execution.VariableInjector"]], "accumulated_sweep_iteration (sweepiterator property)": [[32, "qat.purr.compiler.execution.SweepIterator.accumulated_sweep_iteration"]], "add_sweep() (sweepiterator method)": [[32, "qat.purr.compiler.execution.SweepIterator.add_sweep"]], "build_acquire_list() (quantumexecutionengine method)": [[32, "qat.purr.compiler.execution.QuantumExecutionEngine.build_acquire_list"]], "build_physical_channel_buffers() (quantumexecutionengine method)": [[32, "qat.purr.compiler.execution.QuantumExecutionEngine.build_physical_channel_buffers"]], "build_pulse_channel_buffers() (quantumexecutionengine method)": [[32, "qat.purr.compiler.execution.QuantumExecutionEngine.build_pulse_channel_buffers"]], "calculate_duration() (quantumexecutionengine method)": [[32, "qat.purr.compiler.execution.QuantumExecutionEngine.calculate_duration"]], "create_duration_timeline() (quantumexecutionengine method)": [[32, "qat.purr.compiler.execution.QuantumExecutionEngine.create_duration_timeline"]], "do_sweep() (sweepiterator method)": [[32, "qat.purr.compiler.execution.SweepIterator.do_sweep"]], "do_upconvert() (quantumexecutionengine method)": [[32, "qat.purr.compiler.execution.QuantumExecutionEngine.do_upconvert"]], "execute() (instructionexecutionengine method)": [[32, "qat.purr.compiler.execution.InstructionExecutionEngine.execute"]], "execute() (quantumexecutionengine method)": [[32, "qat.purr.compiler.execution.QuantumExecutionEngine.execute"]], "field (injectionmetadata attribute)": [[32, "qat.purr.compiler.execution.InjectionMetadata.field"]], "from_qfile() (sweepiterator static method)": [[32, "qat.purr.compiler.execution.SweepIterator.from_qfile"]], "get_current_sweep_iteration() (sweepiterator method)": [[32, "qat.purr.compiler.execution.SweepIterator.get_current_sweep_iteration"]], "get_results_shape() (sweepiterator method)": [[32, "qat.purr.compiler.execution.SweepIterator.get_results_shape"]], "inject() (deviceinjector method)": [[32, "qat.purr.compiler.execution.DeviceInjector.inject"]], "inject() (deviceinjectors method)": [[32, "qat.purr.compiler.execution.DeviceInjectors.inject"]], "inject() (injectionmetadata method)": [[32, "qat.purr.compiler.execution.InjectionMetadata.inject"]], "insert_result_at_sweep_position() (sweepiterator method)": [[32, "qat.purr.compiler.execution.SweepIterator.insert_result_at_sweep_position"]], "is_empty() (injectionmetadata method)": [[32, "qat.purr.compiler.execution.InjectionMetadata.is_empty"]], "is_finished() (sweepiterator method)": [[32, "qat.purr.compiler.execution.SweepIterator.is_finished"]], "length (sweepiterator property)": [[32, "qat.purr.compiler.execution.SweepIterator.length"]], "load_model() (instructionexecutionengine method)": [[32, "qat.purr.compiler.execution.InstructionExecutionEngine.load_model"]], "optimize() (instructionexecutionengine method)": [[32, "qat.purr.compiler.execution.InstructionExecutionEngine.optimize"]], "optimize() (quantumexecutionengine method)": [[32, "qat.purr.compiler.execution.QuantumExecutionEngine.optimize"]], "process_frequencyshift() (quantumexecutionengine method)": [[32, "qat.purr.compiler.execution.QuantumExecutionEngine.process_frequencyshift"]], "process_phasereset() (quantumexecutionengine method)": [[32, "qat.purr.compiler.execution.QuantumExecutionEngine.process_phasereset"]], "process_phaseshift() (quantumexecutionengine method)": [[32, "qat.purr.compiler.execution.QuantumExecutionEngine.process_phaseshift"]], "process_pulse() (quantumexecutionengine method)": [[32, "qat.purr.compiler.execution.QuantumExecutionEngine.process_pulse"]], "process_reset() (quantumexecutionengine method)": [[32, "qat.purr.compiler.execution.QuantumExecutionEngine.process_reset"]], "qat.purr.compiler.execution": [[32, "module-qat.purr.compiler.execution"]], "replace() (iteratorinjector method)": [[32, "qat.purr.compiler.execution.IteratorInjector.replace"]], "replace() (valuereplacement method)": [[32, "qat.purr.compiler.execution.ValueReplacement.replace"]], "replace() (variableinjector method)": [[32, "qat.purr.compiler.execution.VariableInjector.replace"]], "reset_iteration() (sweepiterator method)": [[32, "qat.purr.compiler.execution.SweepIterator.reset_iteration"]], "revert() (deviceinjector method)": [[32, "qat.purr.compiler.execution.DeviceInjector.revert"]], "revert() (deviceinjectors method)": [[32, "qat.purr.compiler.execution.DeviceInjectors.revert"]], "revert() (injectionmetadata method)": [[32, "qat.purr.compiler.execution.InjectionMetadata.revert"]], "revert() (iteratorinjector method)": [[32, "qat.purr.compiler.execution.IteratorInjector.revert"]], "revert() (sweepiterator method)": [[32, "qat.purr.compiler.execution.SweepIterator.revert"]], "revert() (valuereplacement method)": [[32, "qat.purr.compiler.execution.ValueReplacement.revert"]], "revert() (variableinjector method)": [[32, "qat.purr.compiler.execution.VariableInjector.revert"]], "run_calibrations() (instructionexecutionengine method)": [[32, "qat.purr.compiler.execution.InstructionExecutionEngine.run_calibrations"]], "run_post_processing() (quantumexecutionengine method)": [[32, "qat.purr.compiler.execution.QuantumExecutionEngine.run_post_processing"]], "shutdown() (instructionexecutionengine method)": [[32, "qat.purr.compiler.execution.InstructionExecutionEngine.shutdown"]], "startup() (instructionexecutionengine method)": [[32, "qat.purr.compiler.execution.InstructionExecutionEngine.startup"]], "validate() (instructionexecutionengine method)": [[32, "qat.purr.compiler.execution.InstructionExecutionEngine.validate"]], "validate() (quantumexecutionengine method)": [[32, "qat.purr.compiler.execution.QuantumExecutionEngine.validate"]], "qat.purr.compiler.experimental": [[33, "module-qat.purr.compiler.experimental"]], "errormitigation (class in qat.purr.compiler.hardware_models)": [[36, "qat.purr.compiler.hardware_models.ErrorMitigation"]], "hardwaremodel (class in qat.purr.compiler.hardware_models)": [[36, "qat.purr.compiler.hardware_models.HardwareModel"]], "quantumhardwaremodel (class in qat.purr.compiler.hardware_models)": [[36, "qat.purr.compiler.hardware_models.QuantumHardwareModel"]], "readoutmitigation (class in qat.purr.compiler.hardware_models)": [[36, "qat.purr.compiler.hardware_models.ReadoutMitigation"]], "add_device() (quantumhardwaremodel method)": [[36, "qat.purr.compiler.hardware_models.QuantumHardwareModel.add_device"]], "add_physical_baseband() (quantumhardwaremodel method)": [[36, "qat.purr.compiler.hardware_models.QuantumHardwareModel.add_physical_baseband"]], "add_physical_channel() (quantumhardwaremodel method)": [[36, "qat.purr.compiler.hardware_models.QuantumHardwareModel.add_physical_channel"]], "add_pulse_channel() (quantumhardwaremodel method)": [[36, "qat.purr.compiler.hardware_models.QuantumHardwareModel.add_pulse_channel"]], "add_quantum_device() (quantumhardwaremodel method)": [[36, "qat.purr.compiler.hardware_models.QuantumHardwareModel.add_quantum_device"]], "constrain() (quantumhardwaremodel method)": [[36, "qat.purr.compiler.hardware_models.QuantumHardwareModel.constrain"]], "create_builder() (hardwaremodel method)": [[36, "qat.purr.compiler.hardware_models.HardwareModel.create_builder"]], "create_builder() (quantumhardwaremodel method)": [[36, "qat.purr.compiler.hardware_models.QuantumHardwareModel.create_builder"]], "create_engine() (hardwaremodel method)": [[36, "qat.purr.compiler.hardware_models.HardwareModel.create_engine"]], "create_engine() (quantumhardwaremodel method)": [[36, "qat.purr.compiler.hardware_models.QuantumHardwareModel.create_engine"]], "create_runtime() (hardwaremodel method)": [[36, "qat.purr.compiler.hardware_models.HardwareModel.create_runtime"]], "get_cl2qu_index_mapping() (in module qat.purr.compiler.hardware_models)": [[36, "qat.purr.compiler.hardware_models.get_cl2qu_index_mapping"]], "get_device() (quantumhardwaremodel method)": [[36, "qat.purr.compiler.hardware_models.QuantumHardwareModel.get_device"]], "get_devices_from_physical_channel() (quantumhardwaremodel method)": [[36, "qat.purr.compiler.hardware_models.QuantumHardwareModel.get_devices_from_physical_channel"]], "get_devices_from_pulse_channel() (quantumhardwaremodel method)": [[36, "qat.purr.compiler.hardware_models.QuantumHardwareModel.get_devices_from_pulse_channel"]], "get_gate_u() (quantumhardwaremodel method)": [[36, "qat.purr.compiler.hardware_models.QuantumHardwareModel.get_gate_U"]], "get_gate_x() (quantumhardwaremodel method)": [[36, "qat.purr.compiler.hardware_models.QuantumHardwareModel.get_gate_X"]], "get_gate_y() (quantumhardwaremodel method)": [[36, "qat.purr.compiler.hardware_models.QuantumHardwareModel.get_gate_Y"]], "get_gate_z() (quantumhardwaremodel method)": [[36, "qat.purr.compiler.hardware_models.QuantumHardwareModel.get_gate_Z"]], "get_gate_zx() (quantumhardwaremodel method)": [[36, "qat.purr.compiler.hardware_models.QuantumHardwareModel.get_gate_ZX"]], "get_hw_x_pi_2() (quantumhardwaremodel method)": [[36, "qat.purr.compiler.hardware_models.QuantumHardwareModel.get_hw_x_pi_2"]], "get_hw_z() (quantumhardwaremodel method)": [[36, "qat.purr.compiler.hardware_models.QuantumHardwareModel.get_hw_z"]], "get_hw_zx_pi_4() (quantumhardwaremodel method)": [[36, "qat.purr.compiler.hardware_models.QuantumHardwareModel.get_hw_zx_pi_4"]], "get_physical_baseband() (quantumhardwaremodel method)": [[36, "qat.purr.compiler.hardware_models.QuantumHardwareModel.get_physical_baseband"]], "get_physical_channel() (quantumhardwaremodel method)": [[36, "qat.purr.compiler.hardware_models.QuantumHardwareModel.get_physical_channel"]], "get_pulse_channel_from_device() (quantumhardwaremodel method)": [[36, "qat.purr.compiler.hardware_models.QuantumHardwareModel.get_pulse_channel_from_device"]], "get_pulse_channel_from_id() (quantumhardwaremodel method)": [[36, "qat.purr.compiler.hardware_models.QuantumHardwareModel.get_pulse_channel_from_id"]], "get_pulse_channels_from_physical_channel() (quantumhardwaremodel method)": [[36, "qat.purr.compiler.hardware_models.QuantumHardwareModel.get_pulse_channels_from_physical_channel"]], "get_quantum_device() (quantumhardwaremodel method)": [[36, "qat.purr.compiler.hardware_models.QuantumHardwareModel.get_quantum_device"]], "get_qubit() (quantumhardwaremodel method)": [[36, "qat.purr.compiler.hardware_models.QuantumHardwareModel.get_qubit"]], "has_qubit() (quantumhardwaremodel method)": [[36, "qat.purr.compiler.hardware_models.QuantumHardwareModel.has_qubit"]], "is_calibrated (quantumhardwaremodel property)": [[36, "qat.purr.compiler.hardware_models.QuantumHardwareModel.is_calibrated"]], "qat.purr.compiler.hardware_models": [[36, "module-qat.purr.compiler.hardware_models"]], "qubits (quantumhardwaremodel property)": [[36, "qat.purr.compiler.hardware_models.QuantumHardwareModel.qubits"]], "resolve_qb_pulse_channel() (quantumhardwaremodel method)": [[36, "qat.purr.compiler.hardware_models.QuantumHardwareModel.resolve_qb_pulse_channel"]], "resonators (quantumhardwaremodel property)": [[36, "qat.purr.compiler.hardware_models.QuantumHardwareModel.resonators"]], "acquire (class in qat.purr.compiler.instructions)": [[37, "qat.purr.compiler.instructions.Acquire"]], "acquiremode (class in qat.purr.compiler.instructions)": [[37, "qat.purr.compiler.instructions.AcquireMode"]], "assign (class in qat.purr.compiler.instructions)": [[37, "qat.purr.compiler.instructions.Assign"]], "binaryoperator (class in qat.purr.compiler.instructions)": [[37, "qat.purr.compiler.instructions.BinaryOperator"]], "crossresonancecancelpulse (class in qat.purr.compiler.instructions)": [[37, "qat.purr.compiler.instructions.CrossResonanceCancelPulse"]], "crossresonancepulse (class in qat.purr.compiler.instructions)": [[37, "qat.purr.compiler.instructions.CrossResonancePulse"]], "custompulse (class in qat.purr.compiler.instructions)": [[37, "qat.purr.compiler.instructions.CustomPulse"]], "discriminate (postprocesstype attribute)": [[37, "qat.purr.compiler.instructions.PostProcessType.DISCRIMINATE"]], "down_convert (postprocesstype attribute)": [[37, "qat.purr.compiler.instructions.PostProcessType.DOWN_CONVERT"]], "delay (class in qat.purr.compiler.instructions)": [[37, "qat.purr.compiler.instructions.Delay"]], "deviceupdate (class in qat.purr.compiler.instructions)": [[37, "qat.purr.compiler.instructions.DeviceUpdate"]], "drivepulse (class in qat.purr.compiler.instructions)": [[37, "qat.purr.compiler.instructions.DrivePulse"]], "equals (class in qat.purr.compiler.instructions)": [[37, "qat.purr.compiler.instructions.Equals"]], "frequencyshift (class in qat.purr.compiler.instructions)": [[37, "qat.purr.compiler.instructions.FrequencyShift"]], "greaterorequalthan (class in qat.purr.compiler.instructions)": [[37, "qat.purr.compiler.instructions.GreaterOrEqualThan"]], "greaterthan (class in qat.purr.compiler.instructions)": [[37, "qat.purr.compiler.instructions.GreaterThan"]], "integrator (acquiremode attribute)": [[37, "qat.purr.compiler.instructions.AcquireMode.INTEGRATOR"]], "id (class in qat.purr.compiler.instructions)": [[37, "qat.purr.compiler.instructions.Id"]], "indexaccessor (class in qat.purr.compiler.instructions)": [[37, "qat.purr.compiler.instructions.IndexAccessor"]], "instruction (class in qat.purr.compiler.instructions)": [[37, "qat.purr.compiler.instructions.Instruction"]], "jump (class in qat.purr.compiler.instructions)": [[37, "qat.purr.compiler.instructions.Jump"]], "linear_map_complex_to_real (postprocesstype attribute)": [[37, "qat.purr.compiler.instructions.PostProcessType.LINEAR_MAP_COMPLEX_TO_REAL"]], "label (class in qat.purr.compiler.instructions)": [[37, "qat.purr.compiler.instructions.Label"]], "lessorequalthan (class in qat.purr.compiler.instructions)": [[37, "qat.purr.compiler.instructions.LessOrEqualThan"]], "lessthan (class in qat.purr.compiler.instructions)": [[37, "qat.purr.compiler.instructions.LessThan"]], "mean (postprocesstype attribute)": [[37, "qat.purr.compiler.instructions.PostProcessType.MEAN"]], "mul (postprocesstype attribute)": [[37, "qat.purr.compiler.instructions.PostProcessType.MUL"]], "measurepulse (class in qat.purr.compiler.instructions)": [[37, "qat.purr.compiler.instructions.MeasurePulse"]], "notequals (class in qat.purr.compiler.instructions)": [[37, "qat.purr.compiler.instructions.NotEquals"]], "phasereset (class in qat.purr.compiler.instructions)": [[37, "qat.purr.compiler.instructions.PhaseReset"]], "phaseshift (class in qat.purr.compiler.instructions)": [[37, "qat.purr.compiler.instructions.PhaseShift"]], "postprocesstype (class in qat.purr.compiler.instructions)": [[37, "qat.purr.compiler.instructions.PostProcessType"]], "postprocessing (class in qat.purr.compiler.instructions)": [[37, "qat.purr.compiler.instructions.PostProcessing"]], "processaxis (class in qat.purr.compiler.instructions)": [[37, "qat.purr.compiler.instructions.ProcessAxis"]], "pulse (class in qat.purr.compiler.instructions)": [[37, "qat.purr.compiler.instructions.Pulse"]], "quantuminstruction (class in qat.purr.compiler.instructions)": [[37, "qat.purr.compiler.instructions.QuantumInstruction"]], "quantummetadata (class in qat.purr.compiler.instructions)": [[37, "qat.purr.compiler.instructions.QuantumMetadata"]], "raw (acquiremode attribute)": [[37, "qat.purr.compiler.instructions.AcquireMode.RAW"]], "repeat (class in qat.purr.compiler.instructions)": [[37, "qat.purr.compiler.instructions.Repeat"]], "reset (class in qat.purr.compiler.instructions)": [[37, "qat.purr.compiler.instructions.Reset"]], "resultsprocessing (class in qat.purr.compiler.instructions)": [[37, "qat.purr.compiler.instructions.ResultsProcessing"]], "return (class in qat.purr.compiler.instructions)": [[37, "qat.purr.compiler.instructions.Return"]], "scope (acquiremode attribute)": [[37, "qat.purr.compiler.instructions.AcquireMode.SCOPE"]], "sequence (processaxis attribute)": [[37, "qat.purr.compiler.instructions.ProcessAxis.SEQUENCE"]], "secondstatepulse (class in qat.purr.compiler.instructions)": [[37, "qat.purr.compiler.instructions.SecondStatePulse"]], "sweep (class in qat.purr.compiler.instructions)": [[37, "qat.purr.compiler.instructions.Sweep"]], "sweepoperation (class in qat.purr.compiler.instructions)": [[37, "qat.purr.compiler.instructions.SweepOperation"]], "sweepvalue (class in qat.purr.compiler.instructions)": [[37, "qat.purr.compiler.instructions.SweepValue"]], "synchronize (class in qat.purr.compiler.instructions)": [[37, "qat.purr.compiler.instructions.Synchronize"]], "time (processaxis attribute)": [[37, "qat.purr.compiler.instructions.ProcessAxis.TIME"]], "variable (class in qat.purr.compiler.instructions)": [[37, "qat.purr.compiler.instructions.Variable"]], "waveform (class in qat.purr.compiler.instructions)": [[37, "qat.purr.compiler.instructions.Waveform"]], "acquire (postprocessing property)": [[37, "qat.purr.compiler.instructions.PostProcessing.acquire"]], "add_channels() (phasereset method)": [[37, "qat.purr.compiler.instructions.PhaseReset.add_channels"]], "add_channels() (synchronize method)": [[37, "qat.purr.compiler.instructions.Synchronize.add_channels"]], "build_generated_name() (in module qat.purr.compiler.instructions)": [[37, "qat.purr.compiler.instructions.build_generated_name"]], "channel (acquire property)": [[37, "qat.purr.compiler.instructions.Acquire.channel"]], "channel (frequencyshift property)": [[37, "qat.purr.compiler.instructions.FrequencyShift.channel"]], "channel (phaseshift property)": [[37, "qat.purr.compiler.instructions.PhaseShift.channel"]], "channel (waveform property)": [[37, "qat.purr.compiler.instructions.Waveform.channel"]], "duration (acquire property)": [[37, "qat.purr.compiler.instructions.Acquire.duration"]], "duration (custompulse property)": [[37, "qat.purr.compiler.instructions.CustomPulse.duration"]], "duration (delay property)": [[37, "qat.purr.compiler.instructions.Delay.duration"]], "duration (pulse property)": [[37, "qat.purr.compiler.instructions.Pulse.duration"]], "duration (quantuminstruction property)": [[37, "qat.purr.compiler.instructions.QuantumInstruction.duration"]], "generate_name() (acquire method)": [[37, "qat.purr.compiler.instructions.Acquire.generate_name"]], "generate_name() (label static method)": [[37, "qat.purr.compiler.instructions.Label.generate_name"]], "generate_name() (variable static method)": [[37, "qat.purr.compiler.instructions.Variable.generate_name"]], "is_generated_name() (in module qat.purr.compiler.instructions)": [[37, "qat.purr.compiler.instructions.is_generated_name"]], "length (sweep property)": [[37, "qat.purr.compiler.instructions.Sweep.length"]], "qat.purr.compiler.instructions": [[37, "module-qat.purr.compiler.instructions"]], "quantum_targets (phasereset attribute)": [[37, "qat.purr.compiler.instructions.PhaseReset.quantum_targets"]], "quantum_targets (synchronize attribute)": [[37, "qat.purr.compiler.instructions.Synchronize.quantum_targets"]], "suffix_incrementor (acquire attribute)": [[37, "qat.purr.compiler.instructions.Acquire.suffix_incrementor"]], "with_random_name() (label static method)": [[37, "qat.purr.compiler.instructions.Label.with_random_name"]], "with_random_name() (variable static method)": [[37, "qat.purr.compiler.instructions.Variable.with_random_name"]], "basicinterrupt (class in qat.purr.compiler.interrupt)": [[38, "qat.purr.compiler.interrupt.BasicInterrupt"]], "interrupt (class in qat.purr.compiler.interrupt)": [[38, "qat.purr.compiler.interrupt.Interrupt"]], "interrupterror": [[38, "qat.purr.compiler.interrupt.InterruptError"]], "nullinterrupt (class in qat.purr.compiler.interrupt)": [[38, "qat.purr.compiler.interrupt.NullInterrupt"]], "event (basicinterrupt property)": [[38, "qat.purr.compiler.interrupt.BasicInterrupt.event"]], "if_triggered() (basicinterrupt method)": [[38, "qat.purr.compiler.interrupt.BasicInterrupt.if_triggered"]], "if_triggered() (interrupt method)": [[38, "qat.purr.compiler.interrupt.Interrupt.if_triggered"]], "if_triggered() (nullinterrupt method)": [[38, "qat.purr.compiler.interrupt.NullInterrupt.if_triggered"]], "qat.purr.compiler.interrupt": [[38, "module-qat.purr.compiler.interrupt"]], "queue (basicinterrupt property)": [[38, "qat.purr.compiler.interrupt.BasicInterrupt.queue"]], "trigger() (basicinterrupt method)": [[38, "qat.purr.compiler.interrupt.BasicInterrupt.trigger"]], "trigger() (interrupt method)": [[38, "qat.purr.compiler.interrupt.Interrupt.trigger"]], "trigger() (nullinterrupt method)": [[38, "qat.purr.compiler.interrupt.NullInterrupt.trigger"]], "compilationmetrics (class in qat.purr.compiler.metrics)": [[39, "qat.purr.compiler.metrics.CompilationMetrics"]], "metricsmixin (class in qat.purr.compiler.metrics)": [[39, "qat.purr.compiler.metrics.MetricsMixin"]], "are_enabled() (compilationmetrics method)": [[39, "qat.purr.compiler.metrics.CompilationMetrics.are_enabled"]], "are_metrics_enabled() (metricsmixin method)": [[39, "qat.purr.compiler.metrics.MetricsMixin.are_metrics_enabled"]], "as_dict() (compilationmetrics method)": [[39, "qat.purr.compiler.metrics.CompilationMetrics.as_dict"]], "enable() (compilationmetrics method)": [[39, "qat.purr.compiler.metrics.CompilationMetrics.enable"]], "enable_metrics() (metricsmixin method)": [[39, "qat.purr.compiler.metrics.MetricsMixin.enable_metrics"]], "get_metric() (compilationmetrics method)": [[39, "qat.purr.compiler.metrics.CompilationMetrics.get_metric"]], "merge() (compilationmetrics method)": [[39, "qat.purr.compiler.metrics.CompilationMetrics.merge"]], "optimized_circuit (compilationmetrics attribute)": [[39, "qat.purr.compiler.metrics.CompilationMetrics.optimized_circuit"]], "optimized_instruction_count (compilationmetrics attribute)": [[39, "qat.purr.compiler.metrics.CompilationMetrics.optimized_instruction_count"]], "qat.purr.compiler.metrics": [[39, "module-qat.purr.compiler.metrics"]], "record_metric() (compilationmetrics method)": [[39, "qat.purr.compiler.metrics.CompilationMetrics.record_metric"]], "record_metric() (metricsmixin method)": [[39, "qat.purr.compiler.metrics.MetricsMixin.record_metric"]], "defaultoptimizers (class in qat.purr.compiler.optimisers)": [[40, "qat.purr.compiler.optimisers.DefaultOptimizers"]], "optimize_qasm() (defaultoptimizers method)": [[40, "qat.purr.compiler.optimisers.DefaultOptimizers.optimize_qasm"]], "qat.purr.compiler.optimisers": [[40, "module-qat.purr.compiler.optimisers"]], "run_qiskit_optimization() (defaultoptimizers method)": [[40, "qat.purr.compiler.optimisers.DefaultOptimizers.run_qiskit_optimization"]], "abstractwaveform (class in qat.purr.compiler.waveforms)": [[42, "qat.purr.compiler.waveforms.AbstractWaveform"]], "blackmanwaveform (class in qat.purr.compiler.waveforms)": [[42, "qat.purr.compiler.waveforms.BlackmanWaveform"]], "extrasoftsquarewaveform (class in qat.purr.compiler.waveforms)": [[42, "qat.purr.compiler.waveforms.ExtraSoftSquareWaveform"]], "gaussianwaveform (class in qat.purr.compiler.waveforms)": [[42, "qat.purr.compiler.waveforms.GaussianWaveform"]], "setupholdwaveform (class in qat.purr.compiler.waveforms)": [[42, "qat.purr.compiler.waveforms.SetupHoldWaveform"]], "softsquarewaveform (class in qat.purr.compiler.waveforms)": [[42, "qat.purr.compiler.waveforms.SoftSquareWaveform"]], "softergaussianwaveform (class in qat.purr.compiler.waveforms)": [[42, "qat.purr.compiler.waveforms.SofterGaussianWaveform"]], "softersquarewaveform (class in qat.purr.compiler.waveforms)": [[42, "qat.purr.compiler.waveforms.SofterSquareWaveform"]], "squarewaveform (class in qat.purr.compiler.waveforms)": [[42, "qat.purr.compiler.waveforms.SquareWaveform"]], "waveformdef (class in qat.purr.compiler.waveforms)": [[42, "qat.purr.compiler.waveforms.WaveformDef"]], "actual_waveforms (abstractwaveform attribute)": [[42, "qat.purr.compiler.waveforms.AbstractWaveform.actual_waveforms"]], "build_waveform() (in module qat.purr.compiler.waveforms)": [[42, "qat.purr.compiler.waveforms.build_waveform"]], "description (waveformdef attribute)": [[42, "qat.purr.compiler.waveforms.WaveformDef.description"]], "get_waveform_type() (in module qat.purr.compiler.waveforms)": [[42, "qat.purr.compiler.waveforms.get_waveform_type"]], "name (waveformdef attribute)": [[42, "qat.purr.compiler.waveforms.WaveformDef.name"]], "qat.purr.compiler.waveforms": [[42, "module-qat.purr.compiler.waveforms"]], "type (waveformdef attribute)": [[42, "qat.purr.compiler.waveforms.WaveformDef.type"]], "waveform_definition (abstractwaveform attribute)": [[42, "qat.purr.compiler.waveforms.AbstractWaveform.waveform_definition"]], "waveform_definition (blackmanwaveform attribute)": [[42, "qat.purr.compiler.waveforms.BlackmanWaveform.waveform_definition"]], "waveform_definition (extrasoftsquarewaveform attribute)": [[42, "qat.purr.compiler.waveforms.ExtraSoftSquareWaveform.waveform_definition"]], "waveform_definition (gaussianwaveform attribute)": [[42, "qat.purr.compiler.waveforms.GaussianWaveform.waveform_definition"]], "waveform_definition (setupholdwaveform attribute)": [[42, "qat.purr.compiler.waveforms.SetupHoldWaveform.waveform_definition"]], "waveform_definition (softsquarewaveform attribute)": [[42, "qat.purr.compiler.waveforms.SoftSquareWaveform.waveform_definition"]], "waveform_definition (softergaussianwaveform attribute)": [[42, "qat.purr.compiler.waveforms.SofterGaussianWaveform.waveform_definition"]], "waveform_definition (softersquarewaveform attribute)": [[42, "qat.purr.compiler.waveforms.SofterSquareWaveform.waveform_definition"]], "waveform_definition (squarewaveform attribute)": [[42, "qat.purr.compiler.waveforms.SquareWaveform.waveform_definition"]], "qat.purr.integrations": [[43, "module-qat.purr.integrations"]], "constraints (class in qat.purr.integrations.features)": [[44, "qat.purr.integrations.features.Constraints"]], "default (scale attribute)": [[44, "qat.purr.integrations.features.Scale.DEFAULT"]], "frequency (unit attribute)": [[44, "qat.purr.integrations.features.Unit.FREQUENCY"]], "featuremetadata (class in qat.purr.integrations.features)": [[44, "qat.purr.integrations.features.FeatureMetadata"]], "giga (scale attribute)": [[44, "qat.purr.integrations.features.Scale.GIGA"]], "kilo (scale attribute)": [[44, "qat.purr.integrations.features.Scale.KILO"]], "mega (scale attribute)": [[44, "qat.purr.integrations.features.Scale.MEGA"]], "micro (scale attribute)": [[44, "qat.purr.integrations.features.Scale.MICRO"]], "milli (scale attribute)": [[44, "qat.purr.integrations.features.Scale.MILLI"]], "nano (scale attribute)": [[44, "qat.purr.integrations.features.Scale.NANO"]], "openpulsefeatures (class in qat.purr.integrations.features)": [[44, "qat.purr.integrations.features.OpenPulseFeatures"]], "quantity (class in qat.purr.integrations.features)": [[44, "qat.purr.integrations.features.Quantity"]], "scale (class in qat.purr.integrations.features)": [[44, "qat.purr.integrations.features.Scale"]], "tera (scale attribute)": [[44, "qat.purr.integrations.features.Scale.TERA"]], "time (unit attribute)": [[44, "qat.purr.integrations.features.Unit.TIME"]], "unit (class in qat.purr.integrations.features)": [[44, "qat.purr.integrations.features.Unit"]], "amount (quantity attribute)": [[44, "qat.purr.integrations.features.Quantity.amount"]], "awg_frequency_bandwidth (constraints attribute)": [[44, "qat.purr.integrations.features.Constraints.awg_frequency_bandwidth"]], "for_hardware() (openpulsefeatures method)": [[44, "qat.purr.integrations.features.OpenPulseFeatures.for_hardware"]], "max_pulse_duration (constraints attribute)": [[44, "qat.purr.integrations.features.Constraints.max_pulse_duration"]], "max_scale (constraints attribute)": [[44, "qat.purr.integrations.features.Constraints.max_scale"]], "max_waveform_amplitude (constraints attribute)": [[44, "qat.purr.integrations.features.Constraints.max_waveform_amplitude"]], "min_pulse_duration (constraints attribute)": [[44, "qat.purr.integrations.features.Constraints.min_pulse_duration"]], "min_pulse_time (constraints attribute)": [[44, "qat.purr.integrations.features.Constraints.min_pulse_time"]], "pulse_control_contraints (constraints attribute)": [[44, "qat.purr.integrations.features.Constraints.pulse_control_contraints"]], "qat.purr.integrations.features": [[44, "module-qat.purr.integrations.features"]], "scale (quantity attribute)": [[44, "qat.purr.integrations.features.Quantity.scale"]], "to_json_dict() (featuremetadata method)": [[44, "qat.purr.integrations.features.FeatureMetadata.to_json_dict"]], "to_json_dict() (openpulsefeatures method)": [[44, "qat.purr.integrations.features.OpenPulseFeatures.to_json_dict"]], "unit (quantity attribute)": [[44, "qat.purr.integrations.features.Quantity.unit"]], "abstractparser (class in qat.purr.integrations.qasm)": [[45, "qat.purr.integrations.qasm.AbstractParser"]], "bitregister (class in qat.purr.integrations.qasm)": [[45, "qat.purr.integrations.qasm.BitRegister"]], "cloudqasmparser (class in qat.purr.integrations.qasm)": [[45, "qat.purr.integrations.qasm.CloudQasmParser"]], "cregindexvalue (class in qat.purr.integrations.qasm)": [[45, "qat.purr.integrations.qasm.CregIndexValue"]], "larkopenpulsecontext (class in qat.purr.integrations.qasm)": [[45, "qat.purr.integrations.qasm.LarkOpenPulseContext"]], "larkpatchingparser (class in qat.purr.integrations.qasm)": [[45, "qat.purr.integrations.qasm.LarkPatchingParser"]], "parseresults (class in qat.purr.integrations.qasm)": [[45, "qat.purr.integrations.qasm.ParseResults"]], "qasm2parser (class in qat.purr.integrations.qasm)": [[45, "qat.purr.integrations.qasm.Qasm2Parser"]], "qasm3parser (class in qat.purr.integrations.qasm)": [[45, "qat.purr.integrations.qasm.Qasm3Parser"]], "qasmcontext (class in qat.purr.integrations.qasm)": [[45, "qat.purr.integrations.qasm.QasmContext"]], "qasmmethodwrapper (class in qat.purr.integrations.qasm)": [[45, "qat.purr.integrations.qasm.QasmMethodWrapper"]], "qubitregister (class in qat.purr.integrations.qasm)": [[45, "qat.purr.integrations.qasm.QubitRegister"]], "registers (class in qat.purr.integrations.qasm)": [[45, "qat.purr.integrations.qasm.Registers"]], "restrictedqasm2parser (class in qat.purr.integrations.qasm)": [[45, "qat.purr.integrations.qasm.RestrictedQasm2Parser"]], "untargetedpulse (class in qat.purr.integrations.qasm)": [[45, "qat.purr.integrations.qasm.UntargetedPulse"]], "add_cnot() (larkpatchingparser method)": [[45, "qat.purr.integrations.qasm.LarkPatchingParser.add_cnot"]], "add_creg() (larkpatchingparser method)": [[45, "qat.purr.integrations.qasm.LarkPatchingParser.add_creg"]], "add_delay() (larkpatchingparser method)": [[45, "qat.purr.integrations.qasm.LarkPatchingParser.add_delay"]], "add_ecr() (larkpatchingparser method)": [[45, "qat.purr.integrations.qasm.LarkPatchingParser.add_ecr"]], "add_if() (larkpatchingparser method)": [[45, "qat.purr.integrations.qasm.LarkPatchingParser.add_if"]], "add_measure() (larkpatchingparser method)": [[45, "qat.purr.integrations.qasm.LarkPatchingParser.add_measure"]], "add_qreg() (larkpatchingparser method)": [[45, "qat.purr.integrations.qasm.LarkPatchingParser.add_qreg"]], "add_reset() (larkpatchingparser method)": [[45, "qat.purr.integrations.qasm.LarkPatchingParser.add_reset"]], "add_unitary() (larkpatchingparser method)": [[45, "qat.purr.integrations.qasm.LarkPatchingParser.add_unitary"]], "assignment() (qasm3parser method)": [[45, "qat.purr.integrations.qasm.Qasm3Parser.assignment"]], "base_include_str (larkpatchingparser attribute)": [[45, "qat.purr.integrations.qasm.LarkPatchingParser.base_include_str"]], "bit_declaration_statement() (qasm3parser method)": [[45, "qat.purr.integrations.qasm.Qasm3Parser.bit_declaration_statement"]], "build_with_target() (untargetedpulse method)": [[45, "qat.purr.integrations.qasm.UntargetedPulse.build_with_target"]], "cal_block() (qasm3parser method)": [[45, "qat.purr.integrations.qasm.Qasm3Parser.cal_block"]], "calibration_definition() (qasm3parser method)": [[45, "qat.purr.integrations.qasm.Qasm3Parser.calibration_definition"]], "calibration_grammar_declaration() (qasm3parser method)": [[45, "qat.purr.integrations.qasm.Qasm3Parser.calibration_grammar_declaration"]], "can_parse() (abstractparser method)": [[45, "qat.purr.integrations.qasm.AbstractParser.can_parse"]], "can_parse() (qasm2parser method)": [[45, "qat.purr.integrations.qasm.Qasm2Parser.can_parse"]], "can_parse() (qasm3parser method)": [[45, "qat.purr.integrations.qasm.Qasm3Parser.can_parse"]], "complex_declaration_statement() (qasm3parser method)": [[45, "qat.purr.integrations.qasm.Qasm3Parser.complex_declaration_statement"]], "ecr_gate (qasm2parser attribute)": [[45, "qat.purr.integrations.qasm.Qasm2Parser.ecr_gate"]], "ecr_qasm_str (qasm2parser attribute)": [[45, "qat.purr.integrations.qasm.Qasm2Parser.ecr_qasm_str"]], "extern_frame() (qasm3parser method)": [[45, "qat.purr.integrations.qasm.Qasm3Parser.extern_frame"]], "extern_or_subroutine_call() (qasm3parser method)": [[45, "qat.purr.integrations.qasm.Qasm3Parser.extern_or_subroutine_call"]], "extern_port() (qasm3parser method)": [[45, "qat.purr.integrations.qasm.Qasm3Parser.extern_port"]], "extern_port_name() (in module qat.purr.integrations.qasm)": [[45, "qat.purr.integrations.qasm.extern_port_name"]], "failure() (parseresults static method)": [[45, "qat.purr.integrations.qasm.ParseResults.failure"]], "fetch_gate_node() (in module qat.purr.integrations.qasm)": [[45, "qat.purr.integrations.qasm.fetch_gate_node"]], "frame_attribute_assignment() (qasm3parser method)": [[45, "qat.purr.integrations.qasm.Qasm3Parser.frame_attribute_assignment"]], "frame_definition() (qasm3parser method)": [[45, "qat.purr.integrations.qasm.Qasm3Parser.frame_definition"]], "gate_definition() (qasm3parser method)": [[45, "qat.purr.integrations.qasm.Qasm3Parser.gate_definition"]], "generate_expr_list_defcal_name() (qasm3parser method)": [[45, "qat.purr.integrations.qasm.Qasm3Parser.generate_expr_list_defcal_name"]], "get_frame_mappings() (in module qat.purr.integrations.qasm)": [[45, "qat.purr.integrations.qasm.get_frame_mappings"]], "get_port_mappings() (in module qat.purr.integrations.qasm)": [[45, "qat.purr.integrations.qasm.get_port_mappings"]], "get_qasm_parser() (in module qat.purr.integrations.qasm)": [[45, "qat.purr.integrations.qasm.get_qasm_parser"]], "get_waveform_samples() (qasm3parser method)": [[45, "qat.purr.integrations.qasm.Qasm3Parser.get_waveform_samples"]], "initalize() (qasm3parser method)": [[45, "qat.purr.integrations.qasm.Qasm3Parser.initalize"]], "lark_parser (qasm3parser attribute)": [[45, "qat.purr.integrations.qasm.Qasm3Parser.lark_parser"]], "load_default_gates() (larkpatchingparser method)": [[45, "qat.purr.integrations.qasm.LarkPatchingParser.load_default_gates"]], "modify() (qasm2parser method)": [[45, "qat.purr.integrations.qasm.Qasm2Parser.modify"]], "parse() (qasm2parser method)": [[45, "qat.purr.integrations.qasm.Qasm2Parser.parse"]], "parse() (qasm3parser method)": [[45, "qat.purr.integrations.qasm.Qasm3Parser.parse"]], "parser_language() (abstractparser method)": [[45, "qat.purr.integrations.qasm.AbstractParser.parser_language"]], "parser_language() (qasm2parser method)": [[45, "qat.purr.integrations.qasm.Qasm2Parser.parser_language"]], "parser_language() (qasm3parser method)": [[45, "qat.purr.integrations.qasm.Qasm3Parser.parser_language"]], "process_barrier() (qasm2parser method)": [[45, "qat.purr.integrations.qasm.Qasm2Parser.process_barrier"]], "process_cnot() (qasm2parser method)": [[45, "qat.purr.integrations.qasm.Qasm2Parser.process_cnot"]], "process_creg() (qasm2parser method)": [[45, "qat.purr.integrations.qasm.Qasm2Parser.process_creg"]], "process_gate() (qasm2parser method)": [[45, "qat.purr.integrations.qasm.Qasm2Parser.process_gate"]], "process_gate_definition() (qasm2parser method)": [[45, "qat.purr.integrations.qasm.Qasm2Parser.process_gate_definition"]], "process_if() (qasm2parser method)": [[45, "qat.purr.integrations.qasm.Qasm2Parser.process_if"]], "process_intrinsic() (qasm2parser method)": [[45, "qat.purr.integrations.qasm.Qasm2Parser.process_intrinsic"]], "process_measure() (qasm2parser method)": [[45, "qat.purr.integrations.qasm.Qasm2Parser.process_measure"]], "process_program() (qasm2parser method)": [[45, "qat.purr.integrations.qasm.Qasm2Parser.process_program"]], "process_qreg() (qasm2parser method)": [[45, "qat.purr.integrations.qasm.Qasm2Parser.process_qreg"]], "process_reset() (qasm2parser method)": [[45, "qat.purr.integrations.qasm.Qasm2Parser.process_reset"]], "process_unitary() (qasm2parser method)": [[45, "qat.purr.integrations.qasm.Qasm2Parser.process_unitary"]], "qasm_from_file() (in module qat.purr.integrations.qasm)": [[45, "qat.purr.integrations.qasm.qasm_from_file"]], "qat.purr.integrations.qasm": [[45, "module-qat.purr.integrations.qasm"]], "quantum_barrier() (qasm3parser method)": [[45, "qat.purr.integrations.qasm.Qasm3Parser.quantum_barrier"]], "quantum_declaration() (qasm3parser method)": [[45, "qat.purr.integrations.qasm.Qasm3Parser.quantum_declaration"]], "quantum_gate_call() (qasm3parser method)": [[45, "qat.purr.integrations.qasm.Qasm3Parser.quantum_gate_call"]], "quantum_measurement() (qasm3parser method)": [[45, "qat.purr.integrations.qasm.Qasm3Parser.quantum_measurement"]], "quantum_measurement_assignment_statement() (qasm3parser method)": [[45, "qat.purr.integrations.qasm.Qasm3Parser.quantum_measurement_assignment_statement"]], "quantum_reset() (qasm3parser method)": [[45, "qat.purr.integrations.qasm.Qasm3Parser.quantum_reset"]], "ref_instance (untargetedpulse property)": [[45, "qat.purr.integrations.qasm.UntargetedPulse.ref_instance"]], "return_statement() (qasm3parser method)": [[45, "qat.purr.integrations.qasm.Qasm3Parser.return_statement"]], "success() (parseresults static method)": [[45, "qat.purr.integrations.qasm.ParseResults.success"]], "timing_box() (qasm3parser method)": [[45, "qat.purr.integrations.qasm.Qasm3Parser.timing_box"]], "timing_instruction() (qasm3parser method)": [[45, "qat.purr.integrations.qasm.Qasm3Parser.timing_instruction"]], "transform_to_value() (qasm3parser method)": [[45, "qat.purr.integrations.qasm.Qasm3Parser.transform_to_value"]], "validate() (qasm2parser method)": [[45, "qat.purr.integrations.qasm.Qasm2Parser.validate"]], "validate() (restrictedqasm2parser method)": [[45, "qat.purr.integrations.qasm.RestrictedQasm2Parser.validate"]], "variable (cregindexvalue property)": [[45, "qat.purr.integrations.qasm.CregIndexValue.variable"]], "version() (qasm3parser method)": [[45, "qat.purr.integrations.qasm.Qasm3Parser.version"]], "walk_node() (abstractparser method)": [[45, "qat.purr.integrations.qasm.AbstractParser.walk_node"]], "walk_node() (qasm2parser method)": [[45, "qat.purr.integrations.qasm.Qasm2Parser.walk_node"]], "walk_node() (qasm3parser method)": [[45, "qat.purr.integrations.qasm.Qasm3Parser.walk_node"]], "waveform_definition() (qasm3parser method)": [[45, "qat.purr.integrations.qasm.Qasm3Parser.waveform_definition"]], "tketbuilder (class in qat.purr.integrations.tket)": [[48, "qat.purr.integrations.tket.TketBuilder"]], "tketqasmparser (class in qat.purr.integrations.tket)": [[48, "qat.purr.integrations.tket.TketQasmParser"]], "apply_default_transforms() (in module qat.purr.integrations.tket)": [[48, "qat.purr.integrations.tket.apply_default_transforms"]], "barrier() (tketbuilder method)": [[48, "qat.purr.integrations.tket.TketBuilder.barrier"]], "check_validity() (in module qat.purr.integrations.tket)": [[48, "qat.purr.integrations.tket.check_validity"]], "creg() (tketbuilder method)": [[48, "qat.purr.integrations.tket.TketBuilder.creg"]], "custom_gate() (tketbuilder method)": [[48, "qat.purr.integrations.tket.TketBuilder.custom_gate"]], "fetch_default_passes() (in module qat.purr.integrations.tket)": [[48, "qat.purr.integrations.tket.fetch_default_passes"]], "gate() (tketbuilder method)": [[48, "qat.purr.integrations.tket.TketBuilder.gate"]], "get_coupling_subgraphs() (in module qat.purr.integrations.tket)": [[48, "qat.purr.integrations.tket.get_coupling_subgraphs"]], "is_basic_gate() (tketbuilder method)": [[48, "qat.purr.integrations.tket.TketBuilder.is_basic_gate"]], "measure() (tketbuilder method)": [[48, "qat.purr.integrations.tket.TketBuilder.measure"]], "optimize_circuit() (in module qat.purr.integrations.tket)": [[48, "qat.purr.integrations.tket.optimize_circuit"]], "process_barrier() (tketqasmparser method)": [[48, "qat.purr.integrations.tket.TketQasmParser.process_barrier"]], "process_cnot() (tketqasmparser method)": [[48, "qat.purr.integrations.tket.TketQasmParser.process_cnot"]], "process_creg() (tketqasmparser method)": [[48, "qat.purr.integrations.tket.TketQasmParser.process_creg"]], "process_gate() (tketqasmparser method)": [[48, "qat.purr.integrations.tket.TketQasmParser.process_gate"]], "process_gate_definition() (tketqasmparser method)": [[48, "qat.purr.integrations.tket.TketQasmParser.process_gate_definition"]], "process_if() (tketqasmparser method)": [[48, "qat.purr.integrations.tket.TketQasmParser.process_if"]], "process_measure() (tketqasmparser method)": [[48, "qat.purr.integrations.tket.TketQasmParser.process_measure"]], "process_program() (tketqasmparser method)": [[48, "qat.purr.integrations.tket.TketQasmParser.process_program"]], "process_qreg() (tketqasmparser method)": [[48, "qat.purr.integrations.tket.TketQasmParser.process_qreg"]], "process_reset() (tketqasmparser method)": [[48, "qat.purr.integrations.tket.TketQasmParser.process_reset"]], "process_unitary() (tketqasmparser method)": [[48, "qat.purr.integrations.tket.TketQasmParser.process_unitary"]], "qat.purr.integrations.tket": [[48, "module-qat.purr.integrations.tket"]], "qreg() (tketbuilder method)": [[48, "qat.purr.integrations.tket.TketBuilder.qreg"]], "run_tket_optimizations() (in module qat.purr.integrations.tket)": [[48, "qat.purr.integrations.tket.run_tket_optimizations"]], "qat.purr.utils": [[49, "module-qat.purr.utils"]], "basiclogger (class in qat.purr.utils.logger)": [[51, "qat.purr.utils.logger.BasicLogger"]], "code (loggerlevel attribute)": [[51, "qat.purr.utils.logger.LoggerLevel.CODE"]], "critical (loggerlevel attribute)": [[51, "qat.purr.utils.logger.LoggerLevel.CRITICAL"]], "compositelogger (class in qat.purr.utils.logger)": [[51, "qat.purr.utils.logger.CompositeLogger"]], "consoleloggerhandler (class in qat.purr.utils.logger)": [[51, "qat.purr.utils.logger.ConsoleLoggerHandler"]], "debug (loggerlevel attribute)": [[51, "qat.purr.utils.logger.LoggerLevel.DEBUG"]], "error (loggerlevel attribute)": [[51, "qat.purr.utils.logger.LoggerLevel.ERROR"]], "fileloggerhandler (class in qat.purr.utils.logger)": [[51, "qat.purr.utils.logger.FileLoggerHandler"]], "info (loggerlevel attribute)": [[51, "qat.purr.utils.logger.LoggerLevel.INFO"]], "jsonhandler (class in qat.purr.utils.logger)": [[51, "qat.purr.utils.logger.JsonHandler"]], "jsonloggerhandler (class in qat.purr.utils.logger)": [[51, "qat.purr.utils.logger.JsonLoggerHandler"]], "keywordfilter (class in qat.purr.utils.logger)": [[51, "qat.purr.utils.logger.KeywordFilter"]], "levelfilter (class in qat.purr.utils.logger)": [[51, "qat.purr.utils.logger.LevelFilter"]], "logfolder (class in qat.purr.utils.logger)": [[51, "qat.purr.utils.logger.LogFolder"]], "loggerlevel (class in qat.purr.utils.logger)": [[51, "qat.purr.utils.logger.LoggerLevel"]], "modulefilter (class in qat.purr.utils.logger)": [[51, "qat.purr.utils.logger.ModuleFilter"]], "notset (loggerlevel attribute)": [[51, "qat.purr.utils.logger.LoggerLevel.NOTSET"]], "output (loggerlevel attribute)": [[51, "qat.purr.utils.logger.LoggerLevel.OUTPUT"]], "warning (loggerlevel attribute)": [[51, "qat.purr.utils.logger.LoggerLevel.WARNING"]], "add_loggers() (compositelogger method)": [[51, "qat.purr.utils.logger.CompositeLogger.add_loggers"]], "close() (basiclogger method)": [[51, "qat.purr.utils.logger.BasicLogger.close"]], "close() (compositelogger method)": [[51, "qat.purr.utils.logger.CompositeLogger.close"]], "close() (logfolder method)": [[51, "qat.purr.utils.logger.LogFolder.close"]], "close_logger() (in module qat.purr.utils.logger)": [[51, "qat.purr.utils.logger.close_logger"]], "code() (basiclogger method)": [[51, "qat.purr.utils.logger.BasicLogger.code"]], "code() (compositelogger method)": [[51, "qat.purr.utils.logger.CompositeLogger.code"]], "create_initial_file() (fileloggerhandler method)": [[51, "qat.purr.utils.logger.FileLoggerHandler.create_initial_file"]], "create_initial_file() (jsonhandler method)": [[51, "qat.purr.utils.logger.JsonHandler.create_initial_file"]], "create_initial_file() (jsonloggerhandler method)": [[51, "qat.purr.utils.logger.JsonLoggerHandler.create_initial_file"]], "create_sub_folder_labber_style() (logfolder method)": [[51, "qat.purr.utils.logger.LogFolder.create_sub_folder_labber_style"]], "critical() (compositelogger method)": [[51, "qat.purr.utils.logger.CompositeLogger.critical"]], "debug() (compositelogger method)": [[51, "qat.purr.utils.logger.CompositeLogger.debug"]], "emit() (fileloggerhandler method)": [[51, "qat.purr.utils.logger.FileLoggerHandler.emit"]], "emit() (jsonhandler method)": [[51, "qat.purr.utils.logger.JsonHandler.emit"]], "error() (compositelogger method)": [[51, "qat.purr.utils.logger.CompositeLogger.error"]], "exception() (compositelogger method)": [[51, "qat.purr.utils.logger.CompositeLogger.exception"]], "filter() (keywordfilter method)": [[51, "qat.purr.utils.logger.KeywordFilter.filter"]], "filter() (levelfilter method)": [[51, "qat.purr.utils.logger.LevelFilter.filter"]], "filter() (modulefilter method)": [[51, "qat.purr.utils.logger.ModuleFilter.filter"]], "get_default_logger() (in module qat.purr.utils.logger)": [[51, "qat.purr.utils.logger.get_default_logger"]], "get_log_file_path() (logfolder method)": [[51, "qat.purr.utils.logger.LogFolder.get_log_file_path"]], "get_logger_config() (in module qat.purr.utils.logger)": [[51, "qat.purr.utils.logger.get_logger_config"]], "get_main_folder_path_labber_style() (logfolder static method)": [[51, "qat.purr.utils.logger.LogFolder.get_main_folder_path_labber_style"]], "import_logger_configuration() (in module qat.purr.utils.logger)": [[51, "qat.purr.utils.logger.import_logger_configuration"]], "info() (compositelogger method)": [[51, "qat.purr.utils.logger.CompositeLogger.info"]], "load_object_from_log_folder() (in module qat.purr.utils.logger)": [[51, "qat.purr.utils.logger.load_object_from_log_folder"]], "log() (compositelogger method)": [[51, "qat.purr.utils.logger.CompositeLogger.log"]], "logs_path (basiclogger property)": [[51, "qat.purr.utils.logger.BasicLogger.logs_path"]], "makerecord() (basiclogger method)": [[51, "qat.purr.utils.logger.BasicLogger.makeRecord"]], "output() (basiclogger method)": [[51, "qat.purr.utils.logger.BasicLogger.output"]], "output() (compositelogger method)": [[51, "qat.purr.utils.logger.CompositeLogger.output"]], "qat.purr.utils.logger": [[51, "module-qat.purr.utils.logger"]], "record_override_key (basiclogger attribute)": [[51, "qat.purr.utils.logger.BasicLogger.record_override_key"]], "save_object() (basiclogger method)": [[51, "qat.purr.utils.logger.BasicLogger.save_object"]], "save_object() (compositelogger method)": [[51, "qat.purr.utils.logger.CompositeLogger.save_object"]], "save_object_to_log_folder() (in module qat.purr.utils.logger)": [[51, "qat.purr.utils.logger.save_object_to_log_folder"]], "warning() (compositelogger method)": [[51, "qat.purr.utils.logger.CompositeLogger.warning"]], "log_duration() (in module qat.purr.utils.logging_utils)": [[52, "qat.purr.utils.logging_utils.log_duration"]], "qat.purr.utils.logging_utils": [[52, "module-qat.purr.utils.logging_utils"]], "customjsonencoder (class in qat.purr.utils.serializer)": [[53, "qat.purr.utils.serializer.CustomJSONEncoder"]], "customjsondecoder (class in qat.purr.utils.serializer)": [[53, "qat.purr.utils.serializer.CustomJsonDecoder"]], "default() (customjsonencoder method)": [[53, "qat.purr.utils.serializer.CustomJSONEncoder.default"]], "default() (customjsondecoder method)": [[53, "qat.purr.utils.serializer.CustomJsonDecoder.default"]], "json_dump() (in module qat.purr.utils.serializer)": [[53, "qat.purr.utils.serializer.json_dump"]], "json_dumps() (in module qat.purr.utils.serializer)": [[53, "qat.purr.utils.serializer.json_dumps"]], "json_load() (in module qat.purr.utils.serializer)": [[53, "qat.purr.utils.serializer.json_load"]], "json_loads() (in module qat.purr.utils.serializer)": [[53, "qat.purr.utils.serializer.json_loads"]], "qat.purr.utils.serializer": [[53, "module-qat.purr.utils.serializer"]]}})